gplink-1.2.0 #980 (Aug 15 2013)
Copyright (c) 1998-2013 gputils project
Listing File Generated: 2-12-2015  16:41:01
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.3.0 #8604 (Jul 16 2014) (Linux)
                                           ; This file was generated Thu Feb 12 16:40:59 2015
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_hidRxLen
                                           	global	_hidProtocol
                                           	global	_hidIdleRate
                                           	global	_HIDPostProcess
                                           	global	_deviceAddress
                                           	global	_loopvar
                                           	global	_EnableUSBModule
                                           	global	_ProcessUSBTransactions
                                           	global	_ProcessCDCRequest
                                           	global	_CDCgets
                                           	global	_CDCInitEndpoint
                                           	global	_phase
                                           	global	_needreordering
                                           	global	_timingindex
                                           	global	_timedivision
                                           	global	_timings
                                           	global	_activatedservos
                                           	global	_servovalues
                                           	global	__pr2_plus1
                                           	global	__t2con
                                           	global	_CONTROL_LINE
                                           	global	_deviceState
                                           	global	_remoteWakeup
                                           	global	_selfPowered
                                           	global	_currentConfiguration
                                           	global	_ctrlTransferStage
                                           	global	_requestHandled
                                           	global	_outPtr
                                           	global	_inPtr
                                           	global	_wCount
                                           	global	_ep_bdt
                                           	global	_SetupPacket
                                           	global	_controlTransferBuffer
                                           	global	_CDCControlBuffer
                                           	global	_CDCRxBuffer
                                           	global	_CDCTxBuffer
                                           	global	_line_config
                                           	global	_zlp
                                           	global	_digitalwrite
                                           	global	_digitalread
                                           	global	_pinmode
                                           	global	_servos_init
                                           	global	_ServoAttach
                                           	global	_ServoDetach
                                           	global	_ServoWrite
                                           	global	_ServoRead
                                           	global	_ServoMinimumPulse
                                           	global	_ServoMaximumPulse
                                           	global	_servos_interrupt
                                           	global	_analog_init
                                           	global	_analogReference
                                           	global	_analogread
                                           	global	_Delayms
                                           	global	_Delayus
                                           	global	_PWM_set_frequency
                                           	global	_PWM_set_dutycycle
                                           	global	_PWM_set_percent_dutycycle
                                           	global	_init_PWM11
                                           	global	_init_PWM12
                                           	global	_set_PWM
                                           	global	_epap_in
                                           	global	_epap_out
                                           	global	_epapin_init
                                           	global	_epapout_init
                                           	global	_ProcessStandardRequest
                                           	global	_InDataStage
                                           	global	_OutDataStage
                                           	global	_SetupStage
                                           	global	_WaitForSetupStage
                                           	global	_ProcessControlTransfer
                                           	global	_UnSuspend
                                           	global	_StartOfFrame
                                           	global	_Stall
                                           	global	_Suspend
                                           	global	_BusReset
                                           	global	_CDCputs
                                           	global	_init_CDC
                                           	global	_env_cdc
                                           	global	_ping
                                           	global	_setup
                                           	global	_sensordigital
                                           	global	_loop
                                           	global	_pinguino_main
                                           	global	_high_priority_isr
                                           	global	_low_priority_isr
                                           	global	_mask
                                           	global	_port
                                           	global	_servomasks
                                           	global	_libdevice_descriptor
                                           	global	_libconfiguration_descriptor
                                           	global	_libstring_descriptor
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrget1
                                           	extern	__gptrput1
                                           	extern	_SPPDATAbits
                                           	extern	_SPPCFGbits
                                           	extern	_SPPEPSbits
                                           	extern	_SPPCONbits
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_LATDbits
                                           	extern	_LATEbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_FSR2Hbits
                                           	extern	_BSRbits
                                           	extern	_FSR1Hbits
                                           	extern	_FSR0Hbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_TBLPTRUbits
                                           	extern	_PCLATHbits
                                           	extern	_PCLATUbits
                                           	extern	_STKPTRbits
                                           	extern	_TOSUbits
                                           	extern	_usb_device_state
                                           	extern	_usb_active_cfg
                                           	extern	_usb_active_alt_setting
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_SPPDATA
                                           	extern	_SPPCFG
                                           	extern	_SPPEPS
                                           	extern	_SPPCON
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_LATD
                                           	extern	_LATE
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_delay10ktcy
                                           	extern	__divulong
                                           	extern	__mulint
                                           	extern	__divuint
                                           	extern	_itoa
                                           	extern	_strcat
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC0	equ	0xfee
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           _activatedservos	db	0x00, 0x00, 0x00
                                           __pr2_plus1	db	0x00, 0x01
                                           _CONTROL_LINE	db	0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           
                                           
                                           usbram5	udata
                                           _SetupPacket	res	64
                                           _controlTransferBuffer	res	64
                                           _CDCRxBuffer	res	64
                                           _CDCTxBuffer	res	64
                                           
                                           udata_main_0	udata
                                           _loopvar	res	1
                                           
                                           udata_main_1	udata
                                           _deviceAddress	res	1
                                           
                                           udata_main_2	udata
                                           _HIDPostProcess	res	1
                                           
                                           udata_main_3	udata
                                           _hidIdleRate	res	1
                                           
                                           udata_main_4	udata
                                           _hidProtocol	res	1
                                           
                                           udata_main_5	udata
                                           _hidRxLen	res	1
                                           
                                           udata_main_6	udata
                                           _servovalues	res	18
                                           
                                           udata_main_7	udata
                                           _timingindex	res	1
                                           
                                           udata_main_8	udata
                                           _timings	res	72
                                           
                                           udata_main_9	udata
                                           _SortServoTimings_mascaratotal_1_27	res	3
                                           
                                           udata_main_10	udata
                                           __t2con	res	1
                                           
                                           udata_main_11	udata
                                           _requestHandled	res	1
                                           
                                           udata_main_12	udata
                                           _outPtr	res	3
                                           
                                           udata_main_13	udata
                                           _wCount	res	2
                                           
                                           udata_main_14	udata
                                           _inPtr	res	3
                                           
                                           udata_main_15	udata
                                           _selfPowered	res	1
                                           
                                           udata_main_16	udata
                                           _remoteWakeup	res	1
                                           
                                           udata_main_17	udata
                                           _deviceState	res	1
                                           
                                           udata_main_18	udata
                                           _currentConfiguration	res	1
                                           
                                           udata_main_19	udata
                                           _ctrlTransferStage	res	1
                                           
                                           udata_main_20	udata
                                           _line_config	res	5
                                           
                                           udata_main_21	udata
                                           _zlp	res	8
                                           
                                           udata_main_22	udata
                                           _CDCControlBuffer	res	16
                                           
                                           udata_main_23	udata
                                           _env_cdc_chaine_1_250	res	0
                                           
                                           
                                           ustat_main_00	udata	0X0400
                                           _ep_bdt        	res	128
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_main__high_priority_isr	code	0X002020
                                           _high_priority_isr:
                                           ;	.line	98; /home/valentin/.icaro/firmware/source/main.c	void high_priority_isr(void) __interrupt
002020   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
002022   ffe5
002024   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
002026   ffe5
002028   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00202a   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
00202c   ffe5
00202e   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
002030   ffe5
002032   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
002034   ffe5
002036   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
002038   ffe5
00203a   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
00203c   ffe5
00203e   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
002040   ffe5
                                           ;	.line	101; /home/valentin/.icaro/firmware/source/main.c	if(PIR2bits.USBIF)
002042   aaa1     btfss   0xa1, 0x5, 0     	BTFSS	_PIR2bits, 5
002044   d006     bra     0x2052           	BRA	_01567_DS_
                                           ;	.line	103; /home/valentin/.icaro/firmware/source/main.c	ProcessUSBTransactions();
002046   ec7b     call    0x4cf6, 0        	CALL	_ProcessUSBTransactions
002048   f026
                                           ;	.line	104; /home/valentin/.icaro/firmware/source/main.c	UIRbits.SOFIF = 0;
00204a   9c68     bcf     0x68, 0x6, 0     	BCF	_UIRbits, 6
                                           ;	.line	105; /home/valentin/.icaro/firmware/source/main.c	UIRbits.URSTIF = 0;
00204c   9068     bcf     0x68, 0, 0       	BCF	_UIRbits, 0
                                           ;	.line	106; /home/valentin/.icaro/firmware/source/main.c	PIR2bits.USBIF = 0;
00204e   9aa1     bcf     0xa1, 0x5, 0     	BCF	_PIR2bits, 5
                                           ;	.line	107; /home/valentin/.icaro/firmware/source/main.c	UEIR = 0;
002050   6a6a     clrf    0x6a, 0          	CLRF	_UEIR
                                           _01567_DS_:
                                           ;	.line	134; /home/valentin/.icaro/firmware/source/main.c	servos_interrupt();
002052   ece5     call    0x4fca, 0        	CALL	_servos_interrupt
002054   f027
002056   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
002058   fffb
00205a   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
00205c   fffa
00205e   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
002060   ffea
002062   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
002064   ffe9
002066   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
002068   fff4
00206a   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
00206c   fff3
00206e   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002070   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
002072   ffe0
002074   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
002076   ffd8
002078   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_main__low_priority_isr	code	0X004000
                                           _low_priority_isr:
                                           ;	.line	142; /home/valentin/.icaro/firmware/source/main.c	void low_priority_isr(void) __interrupt
004000   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
004002   ffe5
004004   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
004006   ffe5
004008   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00400a   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
00400c   ffe5
00400e   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
004010   ffe5
004012   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
004014   ffe5
004016   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
004018   ffe5
00401a   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
00401c   ffe5
00401e   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
004020   ffe5
                                           ;	.line	144; /home/valentin/.icaro/firmware/source/main.c	}
004022   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
004024   fffb
004026   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
004028   fffa
00402a   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
00402c   ffea
00402e   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
004030   ffe9
004032   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
004034   fff4
004036   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
004038   fff3
00403a   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00403c   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
00403e   ffe0
004040   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
004042   ffd8
004044   0010     retfie  0                	RETFIE	
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__pinguino_main	code
                                           _pinguino_main:
                                           ;	.line	54; /home/valentin/.icaro/firmware/source/main.c	PIE1=0;
005150   6a9d     clrf    0x9d, 0          	CLRF	_PIE1
                                           ;	.line	55; /home/valentin/.icaro/firmware/source/main.c	PIE2=0;
005152   6aa0     clrf    0xa0, 0          	CLRF	_PIE2
                                           ;	.line	56; /home/valentin/.icaro/firmware/source/main.c	ADCON1=0x0F;
005154   0e0f     movlw   0xf              	MOVLW	0x0f
005156   6ec1     movwf   0xc1, 0          	MOVWF	_ADCON1
                                           ;	.line	61; /home/valentin/.icaro/firmware/source/main.c	setup();
005158   ec0b     call    0x4616, 0        	CALL	_setup
00515a   f023
                                           ;	.line	63; /home/valentin/.icaro/firmware/source/main.c	analog_init();
00515c   ec1e     call    0x523c, 0        	CALL	_analog_init
00515e   f029
                                           ;	.line	69; /home/valentin/.icaro/firmware/source/main.c	servos_init();
005160   ecc1     call    0x4f82, 0        	CALL	_servos_init
005162   f027
                                           ;	.line	72; /home/valentin/.icaro/firmware/source/main.c	init_CDC();
005164   ece5     call    0x4dca, 0        	CALL	_init_CDC
005166   f026
                                           ;	.line	73; /home/valentin/.icaro/firmware/source/main.c	PIE2bits.USBIE = 1;
005168   8aa0     bsf     0xa0, 0x5, 0     	BSF	_PIE2bits, 5
                                           ;	.line	74; /home/valentin/.icaro/firmware/source/main.c	INTCON = 0xC0;      
00516a   0ec0     movlw   0xc0             	MOVLW	0xc0
00516c   6ef2     movwf   0xf2, 0          	MOVWF	_INTCON
                                           ;	.line	85; /home/valentin/.icaro/firmware/source/main.c	INTCONbits.PEIE=1;
00516e   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	86; /home/valentin/.icaro/firmware/source/main.c	INTCONbits.GIE=1;
005170   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           _01559_DS_:
                                           ;	.line	91; /home/valentin/.icaro/firmware/source/main.c	loop();
005172   ec71     call    0x4ee2, 0        	CALL	_loop
005174   f027
005176   d7fd     bra     0x5172           	BRA	_01559_DS_
005178   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	58; /home/valentin/.icaro/firmware/source/user.c	void loop()
004ee2   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004ee4   ffe5
004ee6   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004ee8   ffe5
                                           ;	.line	61; /home/valentin/.icaro/firmware/source/user.c	a=ping() ;
004eea   eccd     call    0x499a, 0        	CALL	_ping
004eec   f024
004eee   6e00     movwf   0, 0             	MOVWF	r0x00
004ef0   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
004ef2   f001
                                           ;	.line	62; /home/valentin/.icaro/firmware/source/user.c	Delayms(500);
004ef4   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004ef6   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004ef8   0e01     movlw   0x1              	MOVLW	0x01
004efa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004efc   0ef4     movlw   0xf4             	MOVLW	0xf4
004efe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004f00   ecb2     call    0x3f64, 0        	CALL	_Delayms
004f02   f01f
004f04   0e04     movlw   0x4              	MOVLW	0x04
004f06   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	63; /home/valentin/.icaro/firmware/source/user.c	env_cdc(a);
004f08   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004f0a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004f0c   5000     movf    0, 0, 0          	MOVF	r0x00, W
004f0e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004f10   eca3     call    0x4546, 0        	CALL	_env_cdc
004f12   f022
004f14   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
004f16   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	64; /home/valentin/.icaro/firmware/source/user.c	Delayms(500);
004f18   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004f1a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004f1c   0e01     movlw   0x1              	MOVLW	0x01
004f1e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004f20   0ef4     movlw   0xf4             	MOVLW	0xf4
004f22   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004f24   ecb2     call    0x3f64, 0        	CALL	_Delayms
004f26   f01f
004f28   0e04     movlw   0x4              	MOVLW	0x04
004f2a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
004f2c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004f2e   f001
004f30   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004f32   f000
004f34   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__sensordigital	code
                                           _sensordigital:
                                           ;	.line	42; /home/valentin/.icaro/firmware/source/user.c	int sensordigital(int valor)
004f36   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004f38   ffe5
004f3a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004f3c   ffd9
004f3e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004f40   ffe5
004f42   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004f44   ffe5
004f46   0e02     movlw   0x2              	MOVLW	0x02
004f48   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004f4a   f000
004f4c   0e03     movlw   0x3              	MOVLW	0x03
004f4e   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004f50   f001
                                           ;	.line	46; /home/valentin/.icaro/firmware/source/user.c	temp=digitalread(valor);
004f52   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004f54   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004f56   5000     movf    0, 0, 0          	MOVF	r0x00, W
004f58   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004f5a   ec03     call    0x2e06, 0        	CALL	_digitalread
004f5c   f017
004f5e   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
004f60   f001
004f62   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
004f64   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	47; /home/valentin/.icaro/firmware/source/user.c	if (temp==0)
004f66   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
004f68   e103     bnz     0x4f70           	BNZ	_01546_DS_
                                           ;	.line	49; /home/valentin/.icaro/firmware/source/user.c	return 1;
004f6a   6af3     clrf    0xf3, 0          	CLRF	PRODL
004f6c   0e01     movlw   0x1              	MOVLW	0x01
004f6e   d002     bra     0x4f74           	BRA	_01548_DS_
                                           _01546_DS_:
                                           ;	.line	53; /home/valentin/.icaro/firmware/source/user.c	return 0;
004f70   6af3     clrf    0xf3, 0          	CLRF	PRODL
004f72   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _01548_DS_:
004f74   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004f76   f001
004f78   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004f7a   f000
004f7c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004f7e   ffd9
004f80   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	26; /home/valentin/.icaro/firmware/source/user.c	TRISB=0;
004616   6a93     clrf    0x93, 0          	CLRF	_TRISB
                                           ;	.line	27; /home/valentin/.icaro/firmware/source/user.c	pinmode(ICR_DIG1,INPUT);
004618   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00461a   0e01     movlw   0x1              	MOVLW	0x01
00461c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00461e   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004620   0e15     movlw   0x15             	MOVLW	0x15
004622   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004624   ec55     call    0x28aa, 0        	CALL	_pinmode
004626   f014
004628   0e04     movlw   0x4              	MOVLW	0x04
00462a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	28; /home/valentin/.icaro/firmware/source/user.c	pinmode(ICR_DIG2,INPUT);
00462c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00462e   0e01     movlw   0x1              	MOVLW	0x01
004630   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004632   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004634   0e16     movlw   0x16             	MOVLW	0x16
004636   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004638   ec55     call    0x28aa, 0        	CALL	_pinmode
00463a   f014
00463c   0e04     movlw   0x4              	MOVLW	0x04
00463e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	29; /home/valentin/.icaro/firmware/source/user.c	pinmode(ICR_DIG3,TRIG);
004640   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004642   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004644   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004646   0e17     movlw   0x17             	MOVLW	0x17
004648   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00464a   ec55     call    0x28aa, 0        	CALL	_pinmode
00464c   f014
00464e   0e04     movlw   0x4              	MOVLW	0x04
004650   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	30; /home/valentin/.icaro/firmware/source/user.c	pinmode(ICR_DIG4,ECHO);
004652   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004654   0e01     movlw   0x1              	MOVLW	0x01
004656   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004658   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00465a   0e18     movlw   0x18             	MOVLW	0x18
00465c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00465e   ec55     call    0x28aa, 0        	CALL	_pinmode
004660   f014
004662   0e04     movlw   0x4              	MOVLW	0x04
004664   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	31; /home/valentin/.icaro/firmware/source/user.c	pinmode(ICR_l293_P1,OUTPUT);
004666   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004668   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00466a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00466c   0e19     movlw   0x19             	MOVLW	0x19
00466e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004670   ec55     call    0x28aa, 0        	CALL	_pinmode
004672   f014
004674   0e04     movlw   0x4              	MOVLW	0x04
004676   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	32; /home/valentin/.icaro/firmware/source/user.c	pinmode(ICR_l293_P2,OUTPUT);
004678   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00467a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00467c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00467e   0e1a     movlw   0x1a             	MOVLW	0x1a
004680   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004682   ec55     call    0x28aa, 0        	CALL	_pinmode
004684   f014
004686   0e04     movlw   0x4              	MOVLW	0x04
004688   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	33; /home/valentin/.icaro/firmware/source/user.c	pinmode(ICR_l293_P3,OUTPUT);
00468a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00468c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00468e   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004690   0e1b     movlw   0x1b             	MOVLW	0x1b
004692   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004694   ec55     call    0x28aa, 0        	CALL	_pinmode
004696   f014
004698   0e04     movlw   0x4              	MOVLW	0x04
00469a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	34; /home/valentin/.icaro/firmware/source/user.c	pinmode(ICR_l293_P4,OUTPUT);
00469c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00469e   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0046a0   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0046a2   0e1c     movlw   0x1c             	MOVLW	0x1c
0046a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0046a6   ec55     call    0x28aa, 0        	CALL	_pinmode
0046a8   f014
0046aa   0e04     movlw   0x4              	MOVLW	0x04
0046ac   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	35; /home/valentin/.icaro/firmware/source/user.c	ServoAttach(ICR_SRV1);
0046ae   0e0a     movlw   0xa              	MOVLW	0x0a
0046b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0046b2   ec7a     call    0x36f4, 0        	CALL	_ServoAttach
0046b4   f01b
0046b6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	36; /home/valentin/.icaro/firmware/source/user.c	ServoAttach(ICR_SRV2);
0046b8   0e0b     movlw   0xb              	MOVLW	0x0b
0046ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0046bc   ec7a     call    0x36f4, 0        	CALL	_ServoAttach
0046be   f01b
0046c0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	37; /home/valentin/.icaro/firmware/source/user.c	ServoAttach(ICR_SRV3);
0046c2   0e0c     movlw   0xc              	MOVLW	0x0c
0046c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0046c6   ec7a     call    0x36f4, 0        	CALL	_ServoAttach
0046c8   f01b
0046ca   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	38; /home/valentin/.icaro/firmware/source/user.c	ServoAttach(ICR_SRV4);
0046cc   0e08     movlw   0x8              	MOVLW	0x08
0046ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0046d0   ec7a     call    0x36f4, 0        	CALL	_ServoAttach
0046d2   f01b
0046d4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	39; /home/valentin/.icaro/firmware/source/user.c	ServoAttach(ICR_SRV5);
0046d6   0e09     movlw   0x9              	MOVLW	0x09
0046d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0046da   ec7a     call    0x36f4, 0        	CALL	_ServoAttach
0046dc   f01b
0046de   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0046e0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ping	code
                                           _ping:
                                           ;	.line	27; /home/valentin/.icaro/firmware/icaro_lib/sensores.h	int ping()
00499a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00499c   ffe5
00499e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0049a0   ffe5
0049a2   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0049a4   ffe5
                                           _01513_DS_:
                                           ;	.line	31; /home/valentin/.icaro/firmware/icaro_lib/sensores.h	while (digitalread(24) == LOW) 
0049a6   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0049a8   0e18     movlw   0x18             	MOVLW	0x18
0049aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0049ac   ec03     call    0x2e06, 0        	CALL	_digitalread
0049ae   f017
0049b0   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0049b2   f001
0049b4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0049b6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0049b8   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
0049ba   e11b     bnz     0x49f2           	BNZ	_01524_DS_
                                           ;	.line	33; /home/valentin/.icaro/firmware/icaro_lib/sensores.h	digitalwrite(23, HIGH);//Activa el disparador
0049bc   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0049be   0e01     movlw   0x1              	MOVLW	0x01
0049c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0049c2   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0049c4   0e17     movlw   0x17             	MOVLW	0x17
0049c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0049c8   ecac     call    0x2b58, 0        	CALL	_digitalwrite
0049ca   f015
0049cc   0e04     movlw   0x4              	MOVLW	0x04
0049ce   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	34; /home/valentin/.icaro/firmware/icaro_lib/sensores.h	Delayus(50);//Espera 50 microsegundos (minimo 10)
0049d0   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0049d2   0e32     movlw   0x32             	MOVLW	0x32
0049d4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0049d6   ec16     call    0x4e2c, 0        	CALL	_Delayus
0049d8   f027
0049da   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0049dc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	35; /home/valentin/.icaro/firmware/icaro_lib/sensores.h	digitalwrite(23, LOW);//Desactiva el disparador
0049de   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0049e0   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0049e2   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0049e4   0e17     movlw   0x17             	MOVLW	0x17
0049e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0049e8   ecac     call    0x2b58, 0        	CALL	_digitalwrite
0049ea   f015
0049ec   0e04     movlw   0x4              	MOVLW	0x04
0049ee   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0049f0   d7da     bra     0x49a6           	BRA	_01513_DS_
                                           _01524_DS_:
                                           ;	.line	38; /home/valentin/.icaro/firmware/icaro_lib/sensores.h	while (digitalread(24) == HIGH) 
0049f2   6a00     clrf    0, 0             	CLRF	r0x00
0049f4   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _01516_DS_:
0049f6   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0049f8   0e18     movlw   0x18             	MOVLW	0x18
0049fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0049fc   ec03     call    0x2e06, 0        	CALL	_digitalread
0049fe   f017
004a00   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
004a02   f003
004a04   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
004a06   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
004a08   0a01     xorlw   0x1              	XORLW	0x01
004a0a   e102     bnz     0x4a10           	BNZ	_01534_DS_
004a0c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004a0e   e001     bz      0x4a12           	BZ	_01535_DS_
                                           _01534_DS_:
004a10   d00a     bra     0x4a26           	BRA	_01518_DS_
                                           _01535_DS_:
                                           ;	.line	40; /home/valentin/.icaro/firmware/icaro_lib/sensores.h	Dato++;//El contador se incrementa hasta llegar el eco
004a12   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
004a14   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
                                           ;	.line	41; /home/valentin/.icaro/firmware/icaro_lib/sensores.h	Delayus(58);//Tiempo en recorrer dos centimetros 1 de ida 1 de vuelta
004a16   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004a18   0e3a     movlw   0x3a             	MOVLW	0x3a
004a1a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a1c   ec16     call    0x4e2c, 0        	CALL	_Delayus
004a1e   f027
004a20   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
004a22   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
004a24   d7e8     bra     0x49f6           	BRA	_01516_DS_
                                           _01518_DS_:
                                           ;	.line	44; /home/valentin/.icaro/firmware/icaro_lib/sensores.h	return Dato;
004a26   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004a28   fff3
004a2a   5000     movf    0, 0, 0          	MOVF	r0x00, W
004a2c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004a2e   f003
004a30   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004a32   f001
004a34   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004a36   f000
004a38   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__env_cdc	code
                                           _env_cdc:
                                           ;	.line	40; /home/valentin/.icaro/firmware/tmp/__cdc.c	void env_cdc(int valor)
004546   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004548   ffe5
00454a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00454c   ffd9
00454e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004550   ffe5
004552   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004554   ffe5
004556   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004558   ffe5
00455a   0e02     movlw   0x2              	MOVLW	0x02
00455c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00455e   f000
004560   0e03     movlw   0x3              	MOVLW	0x03
004562   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004564   f001
                                           ;	.line	43; /home/valentin/.icaro/firmware/tmp/__cdc.c	int tam=0;
004566   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	44; /home/valentin/.icaro/firmware/tmp/__cdc.c	itoa(valor,chaine,10);
004568   0e0a     movlw   0xa              	MOVLW	0x0a
00456a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00456c   0e02     movlw   0x2              	MOVLW	HIGH(_env_cdc_chaine_1_250)
00456e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004570   0eba     movlw   0xba             	MOVLW	LOW(_env_cdc_chaine_1_250)
004572   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004574   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004576   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004578   5000     movf    0, 0, 0          	MOVF	r0x00, W
00457a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00457c   ecb9     call    0x4b72, 0        	CALL	_itoa
00457e   f025
004580   0e05     movlw   0x5              	MOVLW	0x05
004582   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	45; /home/valentin/.icaro/firmware/tmp/__cdc.c	if (valor<1000) tam=4;
004584   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004586   0f80     addlw   0x80             	ADDLW	0x80
004588   0f7d     addlw   0x7d             	ADDLW	0x7d
00458a   e102     bnz     0x4590           	BNZ	_01506_DS_
00458c   0ee8     movlw   0xe8             	MOVLW	0xe8
00458e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _01506_DS_:
004590   e202     bc      0x4596           	BC	_01490_DS_
004592   0e04     movlw   0x4              	MOVLW	0x04
004594   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           _01490_DS_:
                                           ;	.line	46; /home/valentin/.icaro/firmware/tmp/__cdc.c	if (valor<100) tam=3;
004596   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004598   0f80     addlw   0x80             	ADDLW	0x80
00459a   0f80     addlw   0x80             	ADDLW	0x80
00459c   e102     bnz     0x45a2           	BNZ	_01507_DS_
00459e   0e64     movlw   0x64             	MOVLW	0x64
0045a0   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _01507_DS_:
0045a2   e202     bc      0x45a8           	BC	_01492_DS_
0045a4   0e03     movlw   0x3              	MOVLW	0x03
0045a6   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           _01492_DS_:
                                           ;	.line	47; /home/valentin/.icaro/firmware/tmp/__cdc.c	if (valor<10) tam=2;
0045a8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0045aa   0f80     addlw   0x80             	ADDLW	0x80
0045ac   0f80     addlw   0x80             	ADDLW	0x80
0045ae   e102     bnz     0x45b4           	BNZ	_01508_DS_
0045b0   0e0a     movlw   0xa              	MOVLW	0x0a
0045b2   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _01508_DS_:
0045b4   e202     bc      0x45ba           	BC	_01494_DS_
0045b6   0e02     movlw   0x2              	MOVLW	0x02
0045b8   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           _01494_DS_:
                                           ;	.line	48; /home/valentin/.icaro/firmware/tmp/__cdc.c	strcat(chaine,"\n");
0045ba   0e00     movlw   0                	MOVLW	UPPER(__str_0)
0045bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0045be   0e24     movlw   0x24             	MOVLW	HIGH(__str_0)
0045c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0045c2   0eb2     movlw   0xb2             	MOVLW	LOW(__str_0)
0045c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0045c6   0e80     movlw   0x80             	MOVLW	0x80
0045c8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0045ca   0e02     movlw   0x2              	MOVLW	HIGH(_env_cdc_chaine_1_250)
0045cc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0045ce   0eba     movlw   0xba             	MOVLW	LOW(_env_cdc_chaine_1_250)
0045d0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0045d2   ec3c     call    0x3e78, 0        	CALL	_strcat
0045d4   f01f
0045d6   0e06     movlw   0x6              	MOVLW	0x06
0045d8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	49; /home/valentin/.icaro/firmware/tmp/__cdc.c	CDCputs(chaine,tam);
0045da   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0045dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0045de   0e80     movlw   0x80             	MOVLW	0x80
0045e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0045e2   0e02     movlw   0x2              	MOVLW	HIGH(_env_cdc_chaine_1_250)
0045e4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0045e6   0eba     movlw   0xba             	MOVLW	LOW(_env_cdc_chaine_1_250)
0045e8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0045ea   ec9b     call    0x3936, 0        	CALL	_CDCputs
0045ec   f01c
0045ee   0e04     movlw   0x4              	MOVLW	0x04
0045f0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	50; /home/valentin/.icaro/firmware/tmp/__cdc.c	Delayms(10);
0045f2   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0045f4   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0045f6   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0045f8   0e0a     movlw   0xa              	MOVLW	0x0a
0045fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0045fc   ecb2     call    0x3f64, 0        	CALL	_Delayms
0045fe   f01f
004600   0e04     movlw   0x4              	MOVLW	0x04
004602   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
004604   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004606   f002
004608   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00460a   f001
00460c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00460e   f000
004610   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004612   ffd9
004614   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__init_CDC	code
                                           _init_CDC:
                                           ;	.line	17; /home/valentin/.icaro/firmware/tmp/__cdc.c	INTCON=0;
004dca   6af2     clrf    0xf2, 0          	CLRF	_INTCON
                                           ;	.line	18; /home/valentin/.icaro/firmware/tmp/__cdc.c	INTCON2=0xC0;
004dcc   0ec0     movlw   0xc0             	MOVLW	0xc0
004dce   6ef1     movwf   0xf1, 0          	MOVWF	_INTCON2
                                           ;	.line	19; /home/valentin/.icaro/firmware/tmp/__cdc.c	UCON=0;
004dd0   6a6d     clrf    0x6d, 0          	CLRF	_UCON
                                           ;	.line	20; /home/valentin/.icaro/firmware/tmp/__cdc.c	UCFG=0;
004dd2   6a6f     clrf    0x6f, 0          	CLRF	_UCFG
                                           ;	.line	21; /home/valentin/.icaro/firmware/tmp/__cdc.c	UEP0=0;UEP1=0;UEP2=0;UEP3=0;UEP4=0;UEP5=0;
004dd4   6a70     clrf    0x70, 0          	CLRF	_UEP0
004dd6   6a71     clrf    0x71, 0          	CLRF	_UEP1
004dd8   6a72     clrf    0x72, 0          	CLRF	_UEP2
004dda   6a73     clrf    0x73, 0          	CLRF	_UEP3
004ddc   6a74     clrf    0x74, 0          	CLRF	_UEP4
004dde   6a75     clrf    0x75, 0          	CLRF	_UEP5
                                           ;	.line	22; /home/valentin/.icaro/firmware/tmp/__cdc.c	UEP6=0;UEP7=0;UEP8=0;UEP9=0;UEP10=0;UEP11=0;
004de0   6a76     clrf    0x76, 0          	CLRF	_UEP6
004de2   6a77     clrf    0x77, 0          	CLRF	_UEP7
004de4   6a78     clrf    0x78, 0          	CLRF	_UEP8
004de6   6a79     clrf    0x79, 0          	CLRF	_UEP9
004de8   6a7a     clrf    0x7a, 0          	CLRF	_UEP10
004dea   6a7b     clrf    0x7b, 0          	CLRF	_UEP11
                                           ;	.line	23; /home/valentin/.icaro/firmware/tmp/__cdc.c	UEP12=0;UEP13=0;UEP14=0;UEP15=0;
004dec   6a7c     clrf    0x7c, 0          	CLRF	_UEP12
004dee   6a7d     clrf    0x7d, 0          	CLRF	_UEP13
004df0   6a7e     clrf    0x7e, 0          	CLRF	_UEP14
004df2   6a7f     clrf    0x7f, 0          	CLRF	_UEP15
                                           ;	.line	25; /home/valentin/.icaro/firmware/tmp/__cdc.c	Delayms(2000);
004df4   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004df6   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004df8   0e07     movlw   0x7              	MOVLW	0x07
004dfa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004dfc   0ed0     movlw   0xd0             	MOVLW	0xd0
004dfe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004e00   ecb2     call    0x3f64, 0        	CALL	_Delayms
004e02   f01f
004e04   0e04     movlw   0x4              	MOVLW	0x04
004e06   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	27; /home/valentin/.icaro/firmware/tmp/__cdc.c	UCFG = 0x14; 				// Enable pullup resistors; full speed mode
004e08   0e14     movlw   0x14             	MOVLW	0x14
004e0a   6e6f     movwf   0x6f, 0          	MOVWF	_UCFG
004e0c   0102     movlb   0x2              	BANKSEL	_deviceState
                                           ;	.line	28; /home/valentin/.icaro/firmware/tmp/__cdc.c	deviceState = DETACHED;
004e0e   6bb7     clrf    0xb7, 0x1        	CLRF	_deviceState, B
004e10   0102     movlb   0x2              	BANKSEL	_remoteWakeup
                                           ;	.line	29; /home/valentin/.icaro/firmware/tmp/__cdc.c	remoteWakeup = 0x00;
004e12   6bb6     clrf    0xb6, 0x1        	CLRF	_remoteWakeup, B
004e14   0102     movlb   0x2              	BANKSEL	_currentConfiguration
                                           ;	.line	30; /home/valentin/.icaro/firmware/tmp/__cdc.c	currentConfiguration = 0x00;
004e16   6bb8     clrf    0xb8, 0x1        	CLRF	_currentConfiguration, B
                                           _01472_DS_:
004e18   0102     movlb   0x2              	BANKSEL	_deviceState
                                           ;	.line	32; /home/valentin/.icaro/firmware/tmp/__cdc.c	while(deviceState != CONFIGURED)
004e1a   51b7     movf    0xb7, 0, 0x1     	MOVF	_deviceState, W, B
004e1c   0a05     xorlw   0x5              	XORLW	0x05
004e1e   e005     bz      0x4e2a           	BZ	_01475_DS_
                                           ;	.line	34; /home/valentin/.icaro/firmware/tmp/__cdc.c	EnableUSBModule();
004e20   ec92     call    0x5124, 0        	CALL	_EnableUSBModule
004e22   f028
                                           ;	.line	35; /home/valentin/.icaro/firmware/tmp/__cdc.c	ProcessUSBTransactions();
004e24   ec7b     call    0x4cf6, 0        	CALL	_ProcessUSBTransactions
004e26   f026
004e28   d7f7     bra     0x4e18           	BRA	_01472_DS_
                                           _01475_DS_:
004e2a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__CDCInitEndpoint	code
                                           _CDCInitEndpoint:
004e88   0102     movlb   0x2              	BANKSEL	_line_config
                                           ;	.line	167; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	line_config.dwDTERate = USB_CDC_BAUD_RATE;
004e8a   6b9c     clrf    0x9c, 0x1        	CLRF	_line_config, B
004e8c   0ec2     movlw   0xc2             	MOVLW	0xc2
                                           ; removed redundant BANKSEL
004e8e   6f9d     movwf   0x9d, 0x1        	MOVWF	(_line_config + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	168; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	line_config.bCharFormat = USB_CDC_STOP_BITS;
004e90   6b9e     clrf    0x9e, 0x1        	CLRF	(_line_config + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	169; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	line_config.bParityType = USB_CDC_PARITY;
004e92   6b9f     clrf    0x9f, 0x1        	CLRF	(_line_config + 3), B
                                           ;	.line	170; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	line_config.bDataBits = USB_CDC_DATA_BITS;
004e94   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
004e96   6fa0     movwf   0xa0, 0x1        	MOVWF	(_line_config + 4), B
004e98   0102     movlb   0x2              	BANKSEL	_zlp
                                           ;	.line	171; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	zlp.wValue0=0;
004e9a   6b94     clrf    0x94, 0x1        	CLRF	_zlp, B
                                           ; removed redundant BANKSEL
                                           ;	.line	172; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	zlp.wValue1=0;
004e9c   6b95     clrf    0x95, 0x1        	CLRF	(_zlp + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	173; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	zlp.wValue2=0;
004e9e   6b96     clrf    0x96, 0x1        	CLRF	(_zlp + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	174; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	zlp.wValue3=0;
004ea0   6b97     clrf    0x97, 0x1        	CLRF	(_zlp + 3), B
                                           ; removed redundant BANKSEL
                                           ;	.line	175; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	zlp.wValue4=0;
004ea2   6b98     clrf    0x98, 0x1        	CLRF	(_zlp + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	176; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	zlp.wValue5=0;
004ea4   6b99     clrf    0x99, 0x1        	CLRF	(_zlp + 5), B
                                           ; removed redundant BANKSEL
                                           ;	.line	177; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	zlp.wValue6=0;
004ea6   6b9a     clrf    0x9a, 0x1        	CLRF	(_zlp + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	178; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	zlp.wValue7=0;
004ea8   6b9b     clrf    0x9b, 0x1        	CLRF	(_zlp + 7), B
                                           ;	.line	183; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	USB_COMM_EP_UEP = EP_IN | HSHK_EN;
004eaa   0e1a     movlw   0x1a             	MOVLW	0x1a
004eac   6e72     movwf   0x72, 0          	MOVWF	_UEP2
                                           ;	.line	186; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	CDC_DATA_EP_UEP = EP_OUT_IN | HSHK_EN;
004eae   0e1e     movlw   0x1e             	MOVLW	0x1e
004eb0   6e73     movwf   0x73, 0          	MOVWF	_UEP3
                                           ;	.line	190; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	EP_IN_BD(USB_COMM_EP_NUM).ADDR = PTR16(&CDCControlBuffer);
004eb2   0e7a     movlw   0x7a             	MOVLW	LOW(_CDCControlBuffer)
004eb4   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 22)
004eb6   6f16     movwf   0x16, 0x1        	MOVWF	(_ep_bdt + 22), B
004eb8   0e02     movlw   0x2              	MOVLW	HIGH(_CDCControlBuffer)
                                           ; removed redundant BANKSEL
004eba   6f17     movwf   0x17, 0x1        	MOVWF	(_ep_bdt + 23), B
                                           ; #	MOVLW	0x40
                                           ; #	MOVWF	(_ep_bdt + 20), B
                                           ; #	MOVLW	0x40
                                           ;	.line	191; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	EP_IN_BD(USB_COMM_EP_NUM).Stat.uc = BDS_DAT1 | BDS_COWN;
004ebc   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
                                           ;	.line	194; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Cnt = sizeof(CDCRxBuffer);
004ebe   6f14     movwf   0x14, 0x1        	MOVWF	(_ep_bdt + 20), B
                                           ; removed redundant BANKSEL
004ec0   6f19     movwf   0x19, 0x1        	MOVWF	(_ep_bdt + 25), B
                                           ;	.line	195; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).ADDR = PTR16(&CDCRxBuffer);
004ec2   0e80     movlw   0x80             	MOVLW	LOW(_CDCRxBuffer)
                                           ; removed redundant BANKSEL
004ec4   6f1a     movwf   0x1a, 0x1        	MOVWF	(_ep_bdt + 26), B
004ec6   0e05     movlw   0x5              	MOVLW	HIGH(_CDCRxBuffer)
                                           ; removed redundant BANKSEL
004ec8   6f1b     movwf   0x1b, 0x1        	MOVWF	(_ep_bdt + 27), B
                                           ;	.line	196; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc = BDS_UOWN | BDS_DAT0 | BDS_DTSEN;
004eca   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
004ecc   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	198; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).ADDR = PTR16(&CDCTxBuffer); // +1 
004ece   0ec0     movlw   0xc0             	MOVLW	LOW(_CDCTxBuffer)
                                           ; removed redundant BANKSEL
004ed0   6f1e     movwf   0x1e, 0x1        	MOVWF	(_ep_bdt + 30), B
004ed2   0e05     movlw   0x5              	MOVLW	HIGH(_CDCTxBuffer)
                                           ; removed redundant BANKSEL
004ed4   6f1f     movwf   0x1f, 0x1        	MOVWF	(_ep_bdt + 31), B
                                           ;	.line	199; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc = BDS_DAT1 | BDS_COWN; 
004ed6   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
004ed8   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	200; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	deviceState=CONFIGURED; 
004eda   0e05     movlw   0x5              	MOVLW	0x05
004edc   0102     movlb   0x2              	BANKSEL	_deviceState
004ede   6fb7     movwf   0xb7, 0x1        	MOVWF	_deviceState, B
004ee0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__CDCputs	code
                                           _CDCputs:
                                           ;	.line	131; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	u8 CDCputs(char *buffer, u8 length) {
003936   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003938   ffe5
00393a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00393c   ffd9
00393e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003940   ffe5
003942   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003944   ffe5
003946   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003948   ffe5
00394a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00394c   ffe5
00394e   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003950   ffe5
003952   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003954   ffe5
003956   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003958   ffe5
00395a   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00395c   ffe5
00395e   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
003960   ffe5
003962   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
003964   ffe5
003966   0e02     movlw   0x2              	MOVLW	0x02
003968   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00396a   f000
00396c   0e03     movlw   0x3              	MOVLW	0x03
00396e   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003970   f001
003972   0e04     movlw   0x4              	MOVLW	0x04
003974   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003976   f002
003978   0e05     movlw   0x5              	MOVLW	0x05
00397a   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
00397c   f003
                                           ;	.line	132; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	u8 i=0;
00397e   6a04     clrf    0x4, 0           	CLRF	r0x04
003980   0102     movlb   0x2              	BANKSEL	_deviceState
                                           ;	.line	134; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	if (deviceState != CONFIGURED) return 0;
003982   51b7     movf    0xb7, 0, 0x1     	MOVF	_deviceState, W, B
003984   0a05     xorlw   0x5              	XORLW	0x05
003986   e002     bz      0x398c           	BZ	_01427_DS_
003988   6ae8     clrf    0xe8, 0          	CLRF	WREG
00398a   d04c     bra     0x3a24           	BRA	_01438_DS_
                                           _01427_DS_:
00398c   0102     movlb   0x2              	BANKSEL	_CONTROL_LINE
                                           ;	.line	135; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	if (!CONTROL_LINE) return 0;
00398e   5193     movf    0x93, 0, 0x1     	MOVF	_CONTROL_LINE, W, B
003990   e102     bnz     0x3996           	BNZ	_01429_DS_
003992   6ae8     clrf    0xe8, 0          	CLRF	WREG
003994   d047     bra     0x3a24           	BRA	_01438_DS_
                                           _01429_DS_:
003996   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 28)
                                           ;	.line	136; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	if (!EP_IN_BD(CDC_DATA_EP_NUM).Stat.UOWN) {
003998   bf1c     btfsc   0x1c, 0x7, 0x1   	BTFSC	(_ep_bdt + 28), 7, B
00399a   d043     bra     0x3a22           	BRA	_01434_DS_
                                           ;	.line	137; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	if (length > CDC_BULK_IN_SIZE) length = CDC_BULK_IN_SIZE;
00399c   0e41     movlw   0x41             	MOVLW	0x41
00399e   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
0039a0   e302     bnc     0x39a6           	BNC	_01445_DS_
0039a2   0e40     movlw   0x40             	MOVLW	0x40
0039a4   6e03     movwf   0x3, 0           	MOVWF	r0x03
                                           _01445_DS_:
                                           ;	.line	138; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	for (i=0; i < length; i++) {
0039a6   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _01436_DS_:
0039a8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0039aa   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0039ac   e21d     bc      0x39e8           	BC	_01446_DS_
                                           ;	.line	139; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	CDCTxBuffer[i] = buffer[i];
0039ae   0ec0     movlw   0xc0             	MOVLW	LOW(_CDCTxBuffer)
0039b0   2405     addwf   0x5, 0, 0        	ADDWF	r0x05, W
0039b2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0039b4   6a07     clrf    0x7, 0           	CLRF	r0x07
0039b6   0e05     movlw   0x5              	MOVLW	HIGH(_CDCTxBuffer)
0039b8   2207     addwfc  0x7, 0x1, 0      	ADDWFC	r0x07, F
0039ba   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0039bc   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0039be   6e08     movwf   0x8, 0           	MOVWF	r0x08
0039c0   6ae8     clrf    0xe8, 0          	CLRF	WREG
0039c2   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0039c4   6e09     movwf   0x9, 0           	MOVWF	r0x09
0039c6   6ae8     clrf    0xe8, 0          	CLRF	WREG
0039c8   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
0039ca   c008     movff   0x8, 0xfe9       	MOVFF	r0x08, FSR0L
0039cc   ffe9
0039ce   c009     movff   0x9, 0xff3       	MOVFF	r0x09, PRODL
0039d0   fff3
0039d2   ec29     call    0x52, 0          	CALL	__gptrget1
0039d4   f000
0039d6   6e08     movwf   0x8, 0           	MOVWF	r0x08
0039d8   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
0039da   ffe9
0039dc   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
0039de   ffea
0039e0   c008     movff   0x8, 0xfef       	MOVFF	r0x08, INDF0
0039e2   ffef
                                           ;	.line	138; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	for (i=0; i < length; i++) {
0039e4   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
0039e6   d7e0     bra     0x39a8           	BRA	_01436_DS_
                                           _01446_DS_:
0039e8   c005     movff   0x5, 0x4         	MOVFF	r0x05, r0x04
0039ea   f004
                                           ;	.line	148; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Cnt = i;
0039ec   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0039ee   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 29)
0039f0   6f1d     movwf   0x1d, 0x1        	MOVWF	(_ep_bdt + 29), B
                                           ;	.line	150; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
0039f2   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
0039f4   151c     andwf   0x1c, 0, 0x1     	ANDWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0039f6   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	151; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS;
0039f8   6a00     clrf    0, 0             	CLRF	r0x00
                                           ; removed redundant BANKSEL
0039fa   bd1c     btfsc   0x1c, 0x6, 0x1   	BTFSC	(_ep_bdt + 28), 6, B
0039fc   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0039fe   5000     movf    0, 0, 0          	MOVF	r0x00, W
003a00   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003a02   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003a04   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003a06   6a00     clrf    0, 0             	CLRF	r0x00
003a08   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
003a0a   5000     movf    0, 0, 0          	MOVF	r0x00, W
003a0c   0b01     andlw   0x1              	ANDLW	0x01
003a0e   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
003a10   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
003a12   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
                                           ; removed redundant BANKSEL
003a14   511c     movf    0x1c, 0, 0x1     	MOVF	(_ep_bdt + 28), W, B
003a16   0bbf     andlw   0xbf             	ANDLW	0xbf
003a18   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
003a1a   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	153; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
003a1c   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
003a1e   111c     iorwf   0x1c, 0, 0x1     	IORWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003a20   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           _01434_DS_:
                                           ;	.line	156; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	return i;
003a22   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           _01438_DS_:
003a24   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
003a26   f009
003a28   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
003a2a   f008
003a2c   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003a2e   f007
003a30   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003a32   f006
003a34   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003a36   f005
003a38   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003a3a   f004
003a3c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003a3e   f003
003a40   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003a42   f002
003a44   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003a46   f001
003a48   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003a4a   f000
003a4c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003a4e   ffd9
003a50   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__CDCgets	code
                                           _CDCgets:
                                           ;	.line	98; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	u8 CDCgets(char *buffer) {
003818   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00381a   ffe5
00381c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00381e   ffd9
003820   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003822   ffe5
003824   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003826   ffe5
003828   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00382a   ffe5
00382c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00382e   ffe5
003830   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003832   ffe5
003834   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003836   ffe5
003838   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
00383a   ffe5
00383c   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00383e   ffe5
003840   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
003842   ffe5
003844   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
003846   ffe5
003848   0e02     movlw   0x2              	MOVLW	0x02
00384a   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00384c   f000
00384e   0e03     movlw   0x3              	MOVLW	0x03
003850   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003852   f001
003854   0e04     movlw   0x4              	MOVLW	0x04
003856   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003858   f002
                                           ;	.line	99; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	u8 i=0;
00385a   6a03     clrf    0x3, 0           	CLRF	r0x03
00385c   0102     movlb   0x2              	BANKSEL	_deviceState
                                           ;	.line	101; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	if (deviceState != CONFIGURED) return 0;
00385e   51b7     movf    0xb7, 0, 0x1     	MOVF	_deviceState, W, B
003860   0a05     xorlw   0x5              	XORLW	0x05
003862   e002     bz      0x3868           	BZ	_01386_DS_
003864   6ae8     clrf    0xe8, 0          	CLRF	WREG
003866   d050     bra     0x3908           	BRA	_01397_DS_
                                           _01386_DS_:
003868   0102     movlb   0x2              	BANKSEL	_CONTROL_LINE
                                           ;	.line	103; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	if (!CONTROL_LINE) return 0;
00386a   5193     movf    0x93, 0, 0x1     	MOVF	_CONTROL_LINE, W, B
00386c   e102     bnz     0x3872           	BNZ	_01388_DS_
00386e   6ae8     clrf    0xe8, 0          	CLRF	WREG
003870   d04b     bra     0x3908           	BRA	_01397_DS_
                                           _01388_DS_:
003872   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 24)
                                           ;	.line	105; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	if (!EP_OUT_BD(CDC_DATA_EP_NUM).Stat.UOWN) {
003874   bf18     btfsc   0x18, 0x7, 0x1   	BTFSC	(_ep_bdt + 24), 7, B
003876   d047     bra     0x3906           	BRA	_01393_DS_
                                           ;	.line	110; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	if (length > EP_OUT_BD(CDC_DATA_EP_NUM).Cnt) length = EP_OUT_BD(CDC_DATA_EP_NUM).Cnt;
003878   0e40     movlw   0x40             	MOVLW	0x40
                                           ; #	SUBWF	(_ep_bdt + 25), W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_01404_DS_
                                           ; #;;;!!! pic16_aopOp:1117 called for a spillLocation -- assigning WREG instead --- CHECK
                                           ; #	MOVFF	(_ep_bdt + 25), WREG
                                           ; #	CLRF	r0x04
                                           ; removed redundant BANKSEL
                                           ;	.line	111; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	for (i=0; i < EP_OUT_BD(CDC_DATA_EP_NUM).Cnt; i++) {
00387a   5d19     subwf   0x19, 0, 0x1     	SUBWF	(_ep_bdt + 25), W, B
00387c   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
00387e   c419     movff   0x419, 0xfe8     	MOVFF	(_ep_bdt + 25), WREG
003880   ffe8
003882   6a04     clrf    0x4, 0           	CLRF	r0x04
                                           _01395_DS_:
003884   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 25)
003886   5119     movf    0x19, 0, 0x1     	MOVF	(_ep_bdt + 25), W, B
003888   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
00388a   e220     bc      0x38cc           	BC	_01405_DS_
                                           ;	.line	112; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	buffer[i] = CDCRxBuffer[i];
00388c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00388e   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003890   6e05     movwf   0x5, 0           	MOVWF	r0x05
003892   6ae8     clrf    0xe8, 0          	CLRF	WREG
003894   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
003896   6e06     movwf   0x6, 0           	MOVWF	r0x06
003898   6ae8     clrf    0xe8, 0          	CLRF	WREG
00389a   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
00389c   6e07     movwf   0x7, 0           	MOVWF	r0x07
00389e   0e80     movlw   0x80             	MOVLW	LOW(_CDCRxBuffer)
0038a0   2404     addwf   0x4, 0, 0        	ADDWF	r0x04, W
0038a2   6e08     movwf   0x8, 0           	MOVWF	r0x08
0038a4   6a09     clrf    0x9, 0           	CLRF	r0x09
0038a6   0e05     movlw   0x5              	MOVLW	HIGH(_CDCRxBuffer)
0038a8   2209     addwfc  0x9, 0x1, 0      	ADDWFC	r0x09, F
0038aa   c008     movff   0x8, 0xfe9       	MOVFF	r0x08, FSR0L
0038ac   ffe9
0038ae   c009     movff   0x9, 0xfea       	MOVFF	r0x09, FSR0H
0038b0   ffea
0038b2   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
0038b4   f008
0038b6   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
0038b8   ffe5
0038ba   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0038bc   ffe9
0038be   c006     movff   0x6, 0xff3       	MOVFF	r0x06, PRODL
0038c0   fff3
0038c2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0038c4   ec31     call    0x62, 0          	CALL	__gptrput1
0038c6   f000
                                           ;	.line	111; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	for (i=0; i < EP_OUT_BD(CDC_DATA_EP_NUM).Cnt; i++) {
0038c8   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
0038ca   d7dc     bra     0x3884           	BRA	_01395_DS_
                                           _01405_DS_:
0038cc   c004     movff   0x4, 0x3         	MOVFF	r0x04, r0x03
0038ce   f003
                                           ;	.line	121; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
0038d0   0e40     movlw   0x40             	MOVLW	0x40
0038d2   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 24)
0038d4   1518     andwf   0x18, 0, 0x1     	ANDWF	(_ep_bdt + 24), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0038d6   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	122; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_OUT_BD(CDC_DATA_EP_NUM).Stat.DTS;
0038d8   6a00     clrf    0, 0             	CLRF	r0x00
                                           ; removed redundant BANKSEL
0038da   bd18     btfsc   0x18, 0x6, 0x1   	BTFSC	(_ep_bdt + 24), 6, B
0038dc   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0038de   5000     movf    0, 0, 0          	MOVF	r0x00, W
0038e0   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
0038e2   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
0038e4   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0038e6   6a00     clrf    0, 0             	CLRF	r0x00
0038e8   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
0038ea   5000     movf    0, 0, 0          	MOVF	r0x00, W
0038ec   0b01     andlw   0x1              	ANDLW	0x01
0038ee   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
0038f0   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
0038f2   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
                                           ; removed redundant BANKSEL
0038f4   5118     movf    0x18, 0, 0x1     	MOVF	(_ep_bdt + 24), W, B
0038f6   0bbf     andlw   0xbf             	ANDLW	0xbf
0038f8   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
0038fa   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	124; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Cnt = sizeof(CDCRxBuffer);
0038fc   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
0038fe   6f19     movwf   0x19, 0x1        	MOVWF	(_ep_bdt + 25), B
                                           ;	.line	125; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
003900   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
003902   1118     iorwf   0x18, 0, 0x1     	IORWF	(_ep_bdt + 24), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003904   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           _01393_DS_:
                                           ;	.line	128; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	return i;
003906   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           _01397_DS_:
003908   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
00390a   f009
00390c   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
00390e   f008
003910   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003912   f007
003914   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003916   f006
003918   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
00391a   f005
00391c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00391e   f004
003920   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003922   f003
003924   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003926   f002
003928   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00392a   f001
00392c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00392e   f000
003930   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003932   ffd9
003934   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ProcessCDCRequest	code
                                           _ProcessCDCRequest:
                                           ;	.line	29; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	void ProcessCDCRequest(void)
0047a8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0047aa   ffe5
                                           ;	.line	38; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	if ((SetupPacket.bmRequestType & USB_TYPE_MASK) != USB_TYPE_CLASS) return;
0047ac   0e60     movlw   0x60             	MOVLW	0x60
0047ae   0105     movlb   0x5              	BANKSEL	_SetupPacket
0047b0   1500     andwf   0, 0, 0x1        	ANDWF	_SetupPacket, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0047b2   0a20     xorlw   0x20             	XORLW	0x20
0047b4   e001     bz      0x47b8           	BZ	_01333_DS_
0047b6   d049     bra     0x484a           	BRA	_01343_DS_
                                           _01333_DS_:
                                           ;	.line	42; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	switch(SetupPacket.bRequest)
0047b8   c501     movff   0x501, 0         	MOVFF	(_SetupPacket + 1), r0x00
0047ba   f000
0047bc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0047be   e101     bnz     0x47c2           	BNZ	_01370_DS_
0047c0   d044     bra     0x484a           	BRA	_01343_DS_
                                           _01370_DS_:
0047c2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0047c4   0a01     xorlw   0x1              	XORLW	0x01
0047c6   e101     bnz     0x47ca           	BNZ	_01372_DS_
0047c8   d040     bra     0x484a           	BRA	_01343_DS_
                                           _01372_DS_:
0047ca   5000     movf    0, 0, 0          	MOVF	r0x00, W
0047cc   0a20     xorlw   0x20             	XORLW	0x20
0047ce   e007     bz      0x47de           	BZ	_01336_DS_
0047d0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0047d2   0a21     xorlw   0x21             	XORLW	0x21
0047d4   e013     bz      0x47fc           	BZ	_01337_DS_
0047d6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0047d8   0a22     xorlw   0x22             	XORLW	0x22
0047da   e01f     bz      0x481a           	BZ	_01338_DS_
0047dc   d036     bra     0x484a           	BRA	_01343_DS_
                                           _01336_DS_:
                                           ;	.line	62; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	outPtr = (__data u8 *)&line_config;
0047de   0e02     movlw   0x2              	MOVLW	HIGH(_line_config)
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
0047e0   0102     movlb   0x2              	BANKSEL	(_outPtr + 1)
0047e2   6fa5     movwf   0xa5, 0x1        	MOVWF	(_outPtr + 1), B
0047e4   0e9c     movlw   0x9c             	MOVLW	LOW(_line_config)
                                           ; removed redundant BANKSEL
0047e6   6fa4     movwf   0xa4, 0x1        	MOVWF	_outPtr, B
0047e8   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
0047ea   6fa6     movwf   0xa6, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	63; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	wCount = sizeof(USB_CDC_Line_Coding) ;
0047ec   0e05     movlw   0x5              	MOVLW	0x05
0047ee   0102     movlb   0x2              	BANKSEL	_wCount
0047f0   6faa     movwf   0xaa, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
0047f2   6bab     clrf    0xab, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	64; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	requestHandled = 1;				
0047f4   0e01     movlw   0x1              	MOVLW	0x01
0047f6   0102     movlb   0x2              	BANKSEL	_requestHandled
0047f8   6fb4     movwf   0xb4, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	65; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	break;
0047fa   d027     bra     0x484a           	BRA	_01343_DS_
                                           _01337_DS_:
                                           ;	.line	71; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	outPtr = (__data u8 *)&line_config;
0047fc   0e02     movlw   0x2              	MOVLW	HIGH(_line_config)
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
0047fe   0102     movlb   0x2              	BANKSEL	(_outPtr + 1)
004800   6fa5     movwf   0xa5, 0x1        	MOVWF	(_outPtr + 1), B
004802   0e9c     movlw   0x9c             	MOVLW	LOW(_line_config)
                                           ; removed redundant BANKSEL
004804   6fa4     movwf   0xa4, 0x1        	MOVWF	_outPtr, B
004806   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
004808   6fa6     movwf   0xa6, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	72; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	wCount = sizeof(USB_CDC_Line_Coding) ;
00480a   0e05     movlw   0x5              	MOVLW	0x05
00480c   0102     movlb   0x2              	BANKSEL	_wCount
00480e   6faa     movwf   0xaa, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
004810   6bab     clrf    0xab, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	73; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	requestHandled = 1;
004812   0e01     movlw   0x1              	MOVLW	0x01
004814   0102     movlb   0x2              	BANKSEL	_requestHandled
004816   6fb4     movwf   0xb4, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	74; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	break;
004818   d018     bra     0x484a           	BRA	_01343_DS_
                                           _01338_DS_:
00481a   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 2)
                                           ;	.line	82; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	if (SetupPacket.wValue0==3) CONTROL_LINE=1;
00481c   5102     movf    0x2, 0, 0x1      	MOVF	(_SetupPacket + 2), W, B
00481e   0a03     xorlw   0x3              	XORLW	0x03
004820   e104     bnz     0x482a           	BNZ	_01340_DS_
004822   0e01     movlw   0x1              	MOVLW	0x01
004824   0102     movlb   0x2              	BANKSEL	_CONTROL_LINE
004826   6f93     movwf   0x93, 0x1        	MOVWF	_CONTROL_LINE, B
004828   d002     bra     0x482e           	BRA	_01341_DS_
                                           _01340_DS_:
00482a   0102     movlb   0x2              	BANKSEL	_CONTROL_LINE
                                           ;	.line	83; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	else CONTROL_LINE=0;		
00482c   6b93     clrf    0x93, 0x1        	CLRF	_CONTROL_LINE, B
                                           _01341_DS_:
                                           ;	.line	84; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	outPtr = (__data u8 *)&zlp;
00482e   0e02     movlw   0x2              	MOVLW	HIGH(_zlp)
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
004830   0102     movlb   0x2              	BANKSEL	(_outPtr + 1)
004832   6fa5     movwf   0xa5, 0x1        	MOVWF	(_outPtr + 1), B
004834   0e94     movlw   0x94             	MOVLW	LOW(_zlp)
                                           ; removed redundant BANKSEL
004836   6fa4     movwf   0xa4, 0x1        	MOVWF	_outPtr, B
004838   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
00483a   6fa6     movwf   0xa6, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	85; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	wCount = sizeof(Zero_Packet_Length) ;
00483c   0e08     movlw   0x8              	MOVLW	0x08
00483e   0102     movlb   0x2              	BANKSEL	_wCount
004840   6faa     movwf   0xaa, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
004842   6bab     clrf    0xab, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	86; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	requestHandled = 1;						
004844   0e01     movlw   0x1              	MOVLW	0x01
004846   0102     movlb   0x2              	BANKSEL	_requestHandled
004848   6fb4     movwf   0xb4, 0x1        	MOVWF	_requestHandled, B
                                           _01343_DS_:
                                           ;	.line	88; /home/valentin/.icaro/firmware/tmp/usb/usb_cdc.c	}
00484a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00484c   f000
00484e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ProcessUSBTransactions	code
                                           _ProcessUSBTransactions:
                                           ;	.line	743; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	void ProcessUSBTransactions(void) {
004cf6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004cf8   ffe5
                                           ; #	MOVF	_deviceState, W, B
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_01246_DS_
                                           ; #	GOTO	_01272_DS_
                                           ; #	BTFSS	_UIRbits, 2
004cfa   0102     movlb   0x2              	BANKSEL	_deviceState
                                           ;	.line	745; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if(deviceState == DETACHED)
004cfc   51b7     movf    0xb7, 0, 0x1     	MOVF	_deviceState, W, B
                                           ;	.line	746; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	return;
004cfe   e02e     bz      0x4d5c           	BZ	_01272_DS_
                                           ;	.line	749; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if(UIRbits.ACTVIF && UIEbits.ACTVIE)
004d00   a468     btfss   0x68, 0x2, 0     	BTFSS	_UIRbits, 2
                                           ; #	GOTO	_01248_DS_
                                           ; #	BTFSS	_UIEbits, 2
                                           ; #	GOTO	_01248_DS_
                                           ; #	CALL	_UnSuspend
                                           ; #	CLRF	r0x00
                                           ;	.line	750; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UnSuspend();
004d02   d003     bra     0x4d0a           	BRA	_01248_DS_
                                           ;	.line	754; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if(UCONbits.SUSPND == 1)
004d04   b469     btfsc   0x69, 0x2, 0     	BTFSC	_UIEbits, 2
004d06   ec37     call    0x526e, 0        	CALL	_UnSuspend
004d08   f029
                                           _01248_DS_:
004d0a   6a00     clrf    0, 0             	CLRF	r0x00
004d0c   b26d     btfsc   0x6d, 0x1, 0     	BTFSC	_UCONbits, 1
004d0e   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
004d10   5000     movf    0, 0, 0          	MOVF	r0x00, W
004d12   0a01     xorlw   0x1              	XORLW	0x01
                                           ;	.line	755; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	return;
004d14   e023     bz      0x4d5c           	BZ	_01272_DS_
                                           ;	.line	758; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (UIRbits.URSTIF && UIEbits.URSTIE) {
004d16   a068     btfss   0x68, 0, 0       	BTFSS	_UIRbits, 0
                                           ; #	GOTO	_01253_DS_
                                           ; #	BTFSS	_UIEbits, 0
                                           ; #	GOTO	_01253_DS_
                                           ; #	CALL	_BusReset
                                           ; #	BTFSS	_UIRbits, 4
                                           ;	.line	759; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	BusReset();
004d18   d003     bra     0x4d20           	BRA	_01253_DS_
                                           ;	.line	762; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (UIRbits.IDLEIF && UIEbits.IDLEIE) {
004d1a   b069     btfsc   0x69, 0, 0       	BTFSC	_UIEbits, 0
004d1c   ec4e     call    0x509c, 0        	CALL	_BusReset
004d1e   f028
                                           _01253_DS_:
004d20   a868     btfss   0x68, 0x4, 0     	BTFSS	_UIRbits, 4
                                           ; #	GOTO	_01256_DS_
                                           ; #	BTFSS	_UIEbits, 4
                                           ; #	GOTO	_01256_DS_
                                           ; #	CALL	_Suspend
                                           ; #	BTFSS	_UIRbits, 6
                                           ;	.line	764; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	Suspend();
004d22   d003     bra     0x4d2a           	BRA	_01256_DS_
                                           ;	.line	766; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (UIRbits.SOFIF && UIEbits.SOFIE) {
004d24   b869     btfsc   0x69, 0x4, 0     	BTFSC	_UIEbits, 4
004d26   ecbd     call    0x517a, 0        	CALL	_Suspend
004d28   f028
                                           _01256_DS_:
004d2a   ac68     btfss   0x68, 0x6, 0     	BTFSS	_UIRbits, 6
                                           ; #	GOTO	_01259_DS_
                                           ; #	BTFSS	_UIEbits, 6
                                           ; #	GOTO	_01259_DS_
                                           ; #	CALL	_StartOfFrame
                                           ; #	BTFSS	_UIRbits, 5
                                           ;	.line	767; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	StartOfFrame();
004d2c   d003     bra     0x4d34           	BRA	_01259_DS_
                                           ;	.line	769; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (UIRbits.STALLIF && UIEbits.STALLIE) {
004d2e   bc69     btfsc   0x69, 0x6, 0     	BTFSC	_UIEbits, 6
004d30   ec3b     call    0x5276, 0        	CALL	_StartOfFrame
004d32   f029
                                           _01259_DS_:
004d34   aa68     btfss   0x68, 0x5, 0     	BTFSS	_UIRbits, 5
                                           ; #	GOTO	_01262_DS_
                                           ; #	BTFSS	_UIEbits, 5
                                           ; #	GOTO	_01262_DS_
                                           ; #	CALL	_Stall
                                           ; #	BTFSS	_UIRbits, 1
                                           ;	.line	770; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	Stall();
004d36   d003     bra     0x4d3e           	BRA	_01262_DS_
                                           ;	.line	773; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (UIRbits.UERRIF && UIEbits.UERRIE) {
004d38   ba69     btfsc   0x69, 0x5, 0     	BTFSC	_UIEbits, 5
004d3a   ece6     call    0x51cc, 0        	CALL	_Stall
004d3c   f028
                                           _01262_DS_:
004d3e   a268     btfss   0x68, 0x1, 0     	BTFSS	_UIRbits, 1
                                           ; #	GOTO	_01265_DS_
                                           ; #	BTFSS	_UIEbits, 1
                                           ; #	GOTO	_01265_DS_
                                           ; #	BCF	_UIRbits, 1
                                           ; #	MOVLW	0x03
                                           ;	.line	777; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UIRbits.UERRIF = 0;
004d40   d002     bra     0x4d46           	BRA	_01265_DS_
                                           ;	.line	781; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (deviceState < DEFAULT)
004d42   b269     btfsc   0x69, 0x1, 0     	BTFSC	_UIEbits, 1
004d44   9268     bcf     0x68, 0x1, 0     	BCF	_UIRbits, 1
                                           _01265_DS_:
004d46   0e03     movlw   0x3              	MOVLW	0x03
                                           ; #	SUBWF	_deviceState, W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_01268_DS_
                                           ; #	GOTO	_01272_DS_
                                           ; #	BTFSS	_UIRbits, 3
004d48   0102     movlb   0x2              	BANKSEL	_deviceState
                                           ;	.line	782; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	return;
004d4a   5db7     subwf   0xb7, 0, 0x1     	SUBWF	_deviceState, W, B
                                           ;	.line	785; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if(UIRbits.TRNIF && UIEbits.TRNIE) {
004d4c   e307     bnc     0x4d5c           	BNC	_01272_DS_
004d4e   a668     btfss   0x68, 0x3, 0     	BTFSS	_UIRbits, 3
004d50   d005     bra     0x4d5c           	BRA	_01272_DS_
004d52   a669     btfss   0x69, 0x3, 0     	BTFSS	_UIEbits, 3
004d54   d003     bra     0x4d5c           	BRA	_01272_DS_
                                           ;	.line	786; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	ProcessControlTransfer();
004d56   ec7c     call    0x48f8, 0        	CALL	_ProcessControlTransfer
004d58   f024
                                           ;	.line	789; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UIRbits.TRNIF = 0;
004d5a   9668     bcf     0x68, 0x3, 0     	BCF	_UIRbits, 3
                                           _01272_DS_:
004d5c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004d5e   f000
004d60   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__BusReset	code
                                           _BusReset:
                                           ;	.line	715; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	void BusReset() {
00509c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00509e   ffe5
                                           ;	.line	716; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UEIR  = 0x00;
0050a0   6a6a     clrf    0x6a, 0          	CLRF	_UEIR
                                           ;	.line	717; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UIR   = 0x00;
0050a2   6a68     clrf    0x68, 0          	CLRF	_UIR
                                           ;	.line	718; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UEIE  = 0x9f;
0050a4   0e9f     movlw   0x9f             	MOVLW	0x9f
0050a6   6e6b     movwf   0x6b, 0          	MOVWF	_UEIE
                                           ;	.line	719; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UIE   = 0x7b;
0050a8   0e7b     movlw   0x7b             	MOVLW	0x7b
0050aa   6e69     movwf   0x69, 0          	MOVWF	_UIE
                                           ;	.line	720; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UADDR = 0x00;
0050ac   6a6e     clrf    0x6e, 0          	CLRF	_UADDR
                                           ;	.line	723; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UEP0 = EP_CTRL | HSHK_EN;
0050ae   0e16     movlw   0x16             	MOVLW	0x16
0050b0   6e70     movwf   0x70, 0          	MOVWF	_UEP0
                                           _01228_DS_:
                                           ;	.line	726; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	while (UIRbits.TRNIF == 1)
0050b2   6a00     clrf    0, 0             	CLRF	r0x00
0050b4   b668     btfsc   0x68, 0x3, 0     	BTFSC	_UIRbits, 3
0050b6   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0050b8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0050ba   0a01     xorlw   0x1              	XORLW	0x01
0050bc   e102     bnz     0x50c2           	BNZ	_01230_DS_
                                           ;	.line	727; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UIRbits.TRNIF = 0;
0050be   9668     bcf     0x68, 0x3, 0     	BCF	_UIRbits, 3
0050c0   d7f8     bra     0x50b2           	BRA	_01228_DS_
                                           _01230_DS_:
                                           ;	.line	730; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UCONbits.PKTDIS = 0;
0050c2   986d     bcf     0x6d, 0x4, 0     	BCF	_UCONbits, 4
                                           ;	.line	733; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	WaitForSetupStage();
0050c4   ecf5     call    0x51ea, 0        	CALL	_WaitForSetupStage
0050c6   f028
0050c8   0102     movlb   0x2              	BANKSEL	_remoteWakeup
                                           ;	.line	735; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	remoteWakeup = 0;                     // Remote wakeup is off by default
0050ca   6bb6     clrf    0xb6, 0x1        	CLRF	_remoteWakeup, B
0050cc   0102     movlb   0x2              	BANKSEL	_selfPowered
                                           ;	.line	736; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	selfPowered = 0;                      // Self powered is off by default
0050ce   6bb5     clrf    0xb5, 0x1        	CLRF	_selfPowered, B
0050d0   0102     movlb   0x2              	BANKSEL	_currentConfiguration
                                           ;	.line	737; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	currentConfiguration = 0;             // Clear active configuration
0050d2   6bb8     clrf    0xb8, 0x1        	CLRF	_currentConfiguration, B
                                           ;	.line	738; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	deviceState = DEFAULT;
0050d4   0e03     movlw   0x3              	MOVLW	0x03
0050d6   0102     movlb   0x2              	BANKSEL	_deviceState
0050d8   6fb7     movwf   0xb7, 0x1        	MOVWF	_deviceState, B
0050da   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0050dc   f000
0050de   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Suspend	code
                                           _Suspend:
                                           ;	.line	685; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	void Suspend(void) {
00517a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00517c   ffe5
00517e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005180   ffd9
                                           ;	.line	690; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UIEbits.ACTVIE = 1;
005182   8469     bsf     0x69, 0x2, 0     	BSF	_UIEbits, 2
                                           ;	.line	691; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UIRbits.IDLEIF = 0;
005184   9868     bcf     0x68, 0x4, 0     	BCF	_UIRbits, 4
                                           ;	.line	692; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UCONbits.SUSPND = 1;
005186   826d     bsf     0x6d, 0x1, 0     	BSF	_UCONbits, 1
                                           ;	.line	694; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	PIR2bits.USBIF = 0;
005188   9aa1     bcf     0xa1, 0x5, 0     	BCF	_PIR2bits, 5
                                           ;	.line	695; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	INTCONbits.RBIF = 0;
00518a   90f2     bcf     0xf2, 0, 0       	BCF	_INTCONbits, 0
                                           ;	.line	696; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	PIE2bits.USBIE = 1;
00518c   8aa0     bsf     0xa0, 0x5, 0     	BSF	_PIE2bits, 5
                                           ;	.line	697; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	INTCONbits.RBIE = 1;
00518e   86f2     bsf     0xf2, 0x3, 0     	BSF	_INTCONbits, 3
                                           ;	.line	700; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	RCSTAbits.CREN = 0;
005190   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
                                           ;	.line	701; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	TXSTAbits.TXEN = 0;
005192   9aac     bcf     0xac, 0x5, 0     	BCF	_TXSTAbits, 5
005194   0003     sleep                    	sleep 
                                           ;	.line	706; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	RCSTAbits.CREN = 1;
005196   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	707; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	TXSTAbits.TXEN = 1;
005198   8aac     bsf     0xac, 0x5, 0     	BSF	_TXSTAbits, 5
                                           ;	.line	709; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	PIE2bits.USBIE = 0;
00519a   9aa0     bcf     0xa0, 0x5, 0     	BCF	_PIE2bits, 5
                                           ;	.line	710; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	INTCONbits.RBIE = 0;
00519c   96f2     bcf     0xf2, 0x3, 0     	BCF	_INTCONbits, 3
00519e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0051a0   ffd9
0051a2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Stall	code
                                           _Stall:
                                           ;	.line	671; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	void Stall(void) {
0051cc   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0051ce   ffe5
                                           ;	.line	675; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if(UEP0bits.EPSTALL == 1) {
0051d0   6a00     clrf    0, 0             	CLRF	r0x00
0051d2   b070     btfsc   0x70, 0, 0       	BTFSC	_UEP0bits, 0
0051d4   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0051d6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0051d8   0a01     xorlw   0x1              	XORLW	0x01
0051da   e103     bnz     0x51e2           	BNZ	_01211_DS_
                                           ;	.line	677; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	WaitForSetupStage();
0051dc   ecf5     call    0x51ea, 0        	CALL	_WaitForSetupStage
0051de   f028
                                           ;	.line	678; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UEP0bits.EPSTALL = 0;
0051e0   9070     bcf     0x70, 0, 0       	BCF	_UEP0bits, 0
                                           _01211_DS_:
                                           ;	.line	680; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UIRbits.STALLIF = 0;
0051e2   9a68     bcf     0x68, 0x5, 0     	BCF	_UIRbits, 5
0051e4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0051e6   f000
0051e8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__StartOfFrame	code
                                           _StartOfFrame:
                                           ;	.line	666; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UIRbits.SOFIF = 0;
005276   9c68     bcf     0x68, 0x6, 0     	BCF	_UIRbits, 6
005278   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__UnSuspend	code
                                           _UnSuspend:
                                           ;	.line	656; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UCONbits.SUSPND = 0;
00526e   926d     bcf     0x6d, 0x1, 0     	BCF	_UCONbits, 1
                                           ;	.line	657; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UIEbits.ACTVIE = 0;
005270   9469     bcf     0x69, 0x2, 0     	BCF	_UIEbits, 2
                                           ;	.line	658; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UIRbits.ACTVIF = 0;
005272   9468     bcf     0x68, 0x2, 0     	BCF	_UIRbits, 2
005274   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__EnableUSBModule	code
                                           _EnableUSBModule:
                                           ;	.line	626; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if(UCONbits.USBEN == 0) {
005124   b66d     btfsc   0x6d, 0x3, 0     	BTFSC	_UCONbits, 3
005126   d006     bra     0x5134           	BRA	_01179_DS_
                                           ;	.line	630; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UCON = 0;
005128   6a6d     clrf    0x6d, 0          	CLRF	_UCON
                                           ;	.line	631; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UIE = 0;
00512a   6a69     clrf    0x69, 0          	CLRF	_UIE
                                           ;	.line	632; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UCONbits.USBEN = 1;
00512c   866d     bsf     0x6d, 0x3, 0     	BSF	_UCONbits, 3
                                           ;	.line	633; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	deviceState = ATTACHED;
00512e   0e01     movlw   0x1              	MOVLW	0x01
005130   0102     movlb   0x2              	BANKSEL	_deviceState
005132   6fb7     movwf   0xb7, 0x1        	MOVWF	_deviceState, B
                                           _01179_DS_:
005134   0102     movlb   0x2              	BANKSEL	_deviceState
                                           ;	.line	637; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if ((deviceState == ATTACHED) && !UCONbits.SE0) {
005136   51b7     movf    0xb7, 0, 0x1     	MOVF	_deviceState, W, B
005138   0a01     xorlw   0x1              	XORLW	0x01
00513a   e109     bnz     0x514e           	BNZ	_01183_DS_
00513c   ba6d     btfsc   0x6d, 0x5, 0     	BTFSC	_UCONbits, 5
00513e   d007     bra     0x514e           	BRA	_01183_DS_
                                           ;	.line	638; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UIR = 0;
005140   6a68     clrf    0x68, 0          	CLRF	_UIR
                                           ;	.line	639; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UIE = 0;
005142   6a69     clrf    0x69, 0          	CLRF	_UIE
                                           ;	.line	640; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UIEbits.URSTIE = 1;
005144   8069     bsf     0x69, 0, 0       	BSF	_UIEbits, 0
                                           ;	.line	641; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UIEbits.IDLEIE = 1;
005146   8869     bsf     0x69, 0x4, 0     	BSF	_UIEbits, 4
                                           ;	.line	642; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	deviceState = POWERED;
005148   0e02     movlw   0x2              	MOVLW	0x02
00514a   0102     movlb   0x2              	BANKSEL	_deviceState
00514c   6fb7     movwf   0xb7, 0x1        	MOVWF	_deviceState, B
                                           _01183_DS_:
00514e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ProcessControlTransfer	code
                                           _ProcessControlTransfer:
                                           ;	.line	536; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	void ProcessControlTransfer(void) {
0048f8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0048fa   ffe5
                                           ;	.line	540; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (USTATbits.DIR == OUT) {
0048fc   b46c     btfsc   0x6c, 0x2, 0     	BTFSC	_USTATbits, 2
0048fe   d022     bra     0x4944           	BRA	_01129_DS_
                                           ;	.line	543; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	u8 PID = (EP_OUT_BD(0).Stat.uc & 0x3C) >> 2;
004900   0e3c     movlw   0x3c             	MOVLW	0x3c
004902   0104     movlb   0x4              	BANKSEL	_ep_bdt
004904   1500     andwf   0, 0, 0x1        	ANDWF	_ep_bdt, W, B
004906   6e00     movwf   0, 0             	MOVWF	r0x00
004908   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
00490a   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
00490c   0b3f     andlw   0x3f             	ANDLW	0x3f
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	544; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (PID == 0x0D)
00490e   0a0d     xorlw   0xd              	XORLW	0x0d
004910   e103     bnz     0x4918           	BNZ	_01113_DS_
                                           ;	.line	546; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	SetupStage();
004912   ecd1     call    0x43a2, 0        	CALL	_SetupStage
004914   f021
004916   d03e     bra     0x4994           	BRA	_01131_DS_
                                           _01113_DS_:
004918   0102     movlb   0x2              	BANKSEL	_ctrlTransferStage
                                           ;	.line	547; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	else if (ctrlTransferStage == DATA_OUT_STAGE) {
00491a   51b9     movf    0xb9, 0, 0x1     	MOVF	_ctrlTransferStage, W, B
00491c   0a01     xorlw   0x1              	XORLW	0x01
00491e   e10f     bnz     0x493e           	BNZ	_01110_DS_
                                           ;	.line	550; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	OutDataStage(0);
004920   0e00     movlw   0                	MOVLW	0x00
004922   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004924   ec44     call    0x3488, 0        	CALL	_OutDataStage
004926   f01a
004928   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00492a   0104     movlb   0x4              	BANKSEL	_ep_bdt
                                           ;	.line	574; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if(EP_OUT_BD(0).Stat.DTS)
00492c   ad00     btfss   0, 0x6, 0x1      	BTFSS	_ep_bdt, 6, B
00492e   d003     bra     0x4936           	BRA	_01107_DS_
                                           ;	.line	575; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
004930   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
004932   6f00     movwf   0, 0x1           	MOVWF	_ep_bdt, B
004934   d02f     bra     0x4994           	BRA	_01131_DS_
                                           _01107_DS_:
                                           ;	.line	577; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
004936   0ec8     movlw   0xc8             	MOVLW	0xc8
004938   0104     movlb   0x4              	BANKSEL	_ep_bdt
00493a   6f00     movwf   0, 0x1           	MOVWF	_ep_bdt, B
00493c   d02b     bra     0x4994           	BRA	_01131_DS_
                                           _01110_DS_:
                                           ;	.line	581; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	WaitForSetupStage();
00493e   ecf5     call    0x51ea, 0        	CALL	_WaitForSetupStage
004940   f028
004942   d028     bra     0x4994           	BRA	_01131_DS_
                                           _01129_DS_:
                                           ;	.line	584; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	else if(USTATbits.DIR == IN) {
004944   6a00     clrf    0, 0             	CLRF	r0x00
004946   b46c     btfsc   0x6c, 0x2, 0     	BTFSC	_USTATbits, 2
004948   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
00494a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00494c   0a01     xorlw   0x1              	XORLW	0x01
00494e   e122     bnz     0x4994           	BNZ	_01131_DS_
                                           ;	.line	586; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if ((UADDR == 0) && (deviceState == ADDRESS)) {
004950   506e     movf    0x6e, 0, 0       	MOVF	_UADDR, W
004952   e10b     bnz     0x496a           	BNZ	_01118_DS_
004954   0102     movlb   0x2              	BANKSEL	_deviceState
004956   51b7     movf    0xb7, 0, 0x1     	MOVF	_deviceState, W, B
004958   0a04     xorlw   0x4              	XORLW	0x04
00495a   e107     bnz     0x496a           	BNZ	_01118_DS_
                                           ;	.line	589; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UADDR = SetupPacket.wValue0;
00495c   c502     movff   0x502, 0xf6e     	MOVFF	(_SetupPacket + 2), _UADDR
00495e   ff6e
                                           ;	.line	593; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if(UADDR == 0)
004960   506e     movf    0x6e, 0, 0       	MOVF	_UADDR, W
004962   e103     bnz     0x496a           	BNZ	_01118_DS_
                                           ;	.line	596; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	deviceState = DEFAULT;
004964   0e03     movlw   0x3              	MOVLW	0x03
004966   0102     movlb   0x2              	BANKSEL	_deviceState
004968   6fb7     movwf   0xb7, 0x1        	MOVWF	_deviceState, B
                                           _01118_DS_:
00496a   0102     movlb   0x2              	BANKSEL	_ctrlTransferStage
                                           ;	.line	599; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (ctrlTransferStage == DATA_IN_STAGE) {
00496c   51b9     movf    0xb9, 0, 0x1     	MOVF	_ctrlTransferStage, W, B
00496e   0a02     xorlw   0x2              	XORLW	0x02
004970   e10f     bnz     0x4990           	BNZ	_01124_DS_
                                           ;	.line	601; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	InDataStage(0);
004972   0e00     movlw   0                	MOVLW	0x00
004974   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004976   eceb     call    0x2fd6, 0        	CALL	_InDataStage
004978   f017
00497a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00497c   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 4)
                                           ;	.line	604; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if(EP_IN_BD(0).Stat.DTS)
00497e   ad04     btfss   0x4, 0x6, 0x1    	BTFSS	(_ep_bdt + 4), 6, B
004980   d003     bra     0x4988           	BRA	_01121_DS_
                                           ;	.line	605; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
004982   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
004984   6f04     movwf   0x4, 0x1         	MOVWF	(_ep_bdt + 4), B
004986   d006     bra     0x4994           	BRA	_01131_DS_
                                           _01121_DS_:
                                           ;	.line	607; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
004988   0ec8     movlw   0xc8             	MOVLW	0xc8
00498a   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 4)
00498c   6f04     movwf   0x4, 0x1         	MOVWF	(_ep_bdt + 4), B
00498e   d002     bra     0x4994           	BRA	_01131_DS_
                                           _01124_DS_:
                                           ;	.line	611; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	WaitForSetupStage();
004990   ecf5     call    0x51ea, 0        	CALL	_WaitForSetupStage
004992   f028
                                           _01131_DS_:
004994   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004996   f000
004998   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__WaitForSetupStage	code
                                           _WaitForSetupStage:
0051ea   0102     movlb   0x2              	BANKSEL	_ctrlTransferStage
                                           ;	.line	523; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	ctrlTransferStage = SETUP_STAGE;
0051ec   6bb9     clrf    0xb9, 0x1        	CLRF	_ctrlTransferStage, B
                                           ;	.line	524; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
0051ee   0e40     movlw   0x40             	MOVLW	0x40
0051f0   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 1)
0051f2   6f01     movwf   0x1, 0x1         	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	525; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
0051f4   0e00     movlw   0                	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
0051f6   6f02     movwf   0x2, 0x1         	MOVWF	(_ep_bdt + 2), B
0051f8   0e05     movlw   0x5              	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
0051fa   6f03     movwf   0x3, 0x1         	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	527; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
0051fc   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
0051fe   6f00     movwf   0, 0x1           	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
                                           ;	.line	528; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc = 0x00;           // Give control to CPU
005200   6b04     clrf    0x4, 0x1         	CLRF	(_ep_bdt + 4), B
005202   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SetupStage	code
                                           _SetupStage:
                                           ;	.line	450; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	void SetupStage(void) {
0043a2   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0043a4   ffe5
0043a6   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 4)
                                           ;	.line	453; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc &= ~BDS_UOWN;
0043a8   5104     movf    0x4, 0, 0x1      	MOVF	(_ep_bdt + 4), W, B
0043aa   6e00     movwf   0, 0             	MOVWF	r0x00
0043ac   9e00     bcf     0, 0x7, 0        	BCF	r0x00, 7
0043ae   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0043b0   6f04     movwf   0x4, 0x1         	MOVWF	(_ep_bdt + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	454; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc &= ~BDS_UOWN;
0043b2   5100     movf    0, 0, 0x1        	MOVF	_ep_bdt, W, B
0043b4   6e00     movwf   0, 0             	MOVWF	r0x00
0043b6   9e00     bcf     0, 0x7, 0        	BCF	r0x00, 7
0043b8   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0043ba   6f00     movwf   0, 0x1           	MOVWF	_ep_bdt, B
0043bc   0102     movlb   0x2              	BANKSEL	_ctrlTransferStage
                                           ;	.line	457; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	ctrlTransferStage = SETUP_STAGE;
0043be   6bb9     clrf    0xb9, 0x1        	CLRF	_ctrlTransferStage, B
0043c0   0102     movlb   0x2              	BANKSEL	_requestHandled
                                           ;	.line	458; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	requestHandled = 0;                   // Default is that request hasn't been handled
0043c2   6bb4     clrf    0xb4, 0x1        	CLRF	_requestHandled, B
0043c4   0102     movlb   0x2              	BANKSEL	_HIDPostProcess
                                           ;	.line	459; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	HIDPostProcess = 0;                   // Assume standard request until know otherwise
0043c6   6bae     clrf    0xae, 0x1        	CLRF	_HIDPostProcess, B
0043c8   0102     movlb   0x2              	BANKSEL	_wCount
                                           ;	.line	460; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	wCount = 0;                           // No u8s transferred
0043ca   6baa     clrf    0xaa, 0x1        	CLRF	_wCount, B
                                           ; removed redundant BANKSEL
0043cc   6bab     clrf    0xab, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	463; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	ProcessStandardRequest();
0043ce   ec23     call    0x4046, 0        	CALL	_ProcessStandardRequest
0043d0   f020
                                           ;	.line	473; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if ((SetupPacket.bmRequestType & USB_RECIP_MASK) == USB_RECIP_INTERFACE)  
0043d2   0e1f     movlw   0x1f             	MOVLW	0x1f
0043d4   0105     movlb   0x5              	BANKSEL	_SetupPacket
0043d6   1500     andwf   0, 0, 0x1        	ANDWF	_SetupPacket, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0043d8   0a01     xorlw   0x1              	XORLW	0x01
0043da   e102     bnz     0x43e0           	BNZ	_01066_DS_
                                           ;	.line	474; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	ProcessCDCRequest();
0043dc   ecd4     call    0x47a8, 0        	CALL	_ProcessCDCRequest
0043de   f023
                                           _01066_DS_:
0043e0   0102     movlb   0x2              	BANKSEL	_requestHandled
                                           ;	.line	477; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (!requestHandled) {
0043e2   51b4     movf    0xb4, 0, 0x1     	MOVF	_requestHandled, W, B
0043e4   e10b     bnz     0x43fc           	BNZ	_01073_DS_
                                           ;	.line	479; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
0043e6   0e40     movlw   0x40             	MOVLW	0x40
0043e8   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 1)
0043ea   6f01     movwf   0x1, 0x1         	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	480; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
0043ec   0e00     movlw   0                	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
0043ee   6f02     movwf   0x2, 0x1         	MOVWF	(_ep_bdt + 2), B
0043f0   0e05     movlw   0x5              	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
0043f2   6f03     movwf   0x3, 0x1         	MOVWF	(_ep_bdt + 3), B
                                           ; #	MOVLW	0x84
                                           ; #	MOVWF	_ep_bdt, B
                                           ; #	MOVLW	0x84
                                           ;	.line	481; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_BSTALL;
0043f4   0e84     movlw   0x84             	MOVLW	0x84
                                           ; removed redundant BANKSEL
                                           ;	.line	482; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_BSTALL;
0043f6   6f00     movwf   0, 0x1           	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
0043f8   6f04     movwf   0x4, 0x1         	MOVWF	(_ep_bdt + 4), B
0043fa   d038     bra     0x446c           	BRA	_01074_DS_
                                           _01073_DS_:
0043fc   0105     movlb   0x5              	BANKSEL	_SetupPacket
                                           ;	.line	484; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	else if (SetupPacket.bmRequestType & 0x80) {
0043fe   af00     btfss   0, 0x7, 0x1      	BTFSS	_SetupPacket, 7, B
004400   d026     bra     0x444e           	BRA	_01070_DS_
004402   0102     movlb   0x2              	BANKSEL	(_wCount + 1)
                                           ;	.line	486; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if(SetupPacket.wLength < wCount)
004404   51ab     movf    0xab, 0, 0x1     	MOVF	(_wCount + 1), W, B
004406   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 7)
004408   5d07     subwf   0x7, 0, 0x1      	SUBWF	(_SetupPacket + 7), W, B
00440a   e104     bnz     0x4414           	BNZ	_01096_DS_
00440c   0102     movlb   0x2              	BANKSEL	_wCount
00440e   51aa     movf    0xaa, 0, 0x1     	MOVF	_wCount, W, B
004410   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 6)
004412   5d06     subwf   0x6, 0, 0x1      	SUBWF	(_SetupPacket + 6), W, B
                                           _01096_DS_:
004414   e204     bc      0x441e           	BC	_01068_DS_
                                           ;	.line	487; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	wCount = SetupPacket.wLength;
004416   c506     movff   0x506, 0x2aa     	MOVFF	(_SetupPacket + 6), _wCount
004418   f2aa
00441a   c507     movff   0x507, 0x2ab     	MOVFF	(_SetupPacket + 7), (_wCount + 1)
00441c   f2ab
                                           _01068_DS_:
                                           ;	.line	488; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	InDataStage(0);
00441e   0e00     movlw   0                	MOVLW	0x00
004420   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004422   eceb     call    0x2fd6, 0        	CALL	_InDataStage
004424   f017
004426   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	489; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	ctrlTransferStage = DATA_IN_STAGE;
004428   0e02     movlw   0x2              	MOVLW	0x02
00442a   0102     movlb   0x2              	BANKSEL	_ctrlTransferStage
00442c   6fb9     movwf   0xb9, 0x1        	MOVWF	_ctrlTransferStage, B
                                           ;	.line	491; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
00442e   0e40     movlw   0x40             	MOVLW	0x40
004430   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 1)
004432   6f01     movwf   0x1, 0x1         	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	492; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
004434   0e00     movlw   0                	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
004436   6f02     movwf   0x2, 0x1         	MOVWF	(_ep_bdt + 2), B
004438   0e05     movlw   0x5              	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
00443a   6f03     movwf   0x3, 0x1         	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	493; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN;
00443c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
00443e   6f00     movwf   0, 0x1           	MOVWF	_ep_bdt, B
                                           ;	.line	496; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_IN_BD(0).ADDR = PTR16(&controlTransferBuffer);
004440   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
004442   6f06     movwf   0x6, 0x1         	MOVWF	(_ep_bdt + 6), B
004444   0e05     movlw   0x5              	MOVLW	HIGH(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
004446   6f07     movwf   0x7, 0x1         	MOVWF	(_ep_bdt + 7), B
                                           ;	.line	498; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
004448   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
00444a   6f04     movwf   0x4, 0x1         	MOVWF	(_ep_bdt + 4), B
00444c   d00f     bra     0x446c           	BRA	_01074_DS_
                                           _01070_DS_:
                                           ;	.line	502; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	ctrlTransferStage = DATA_OUT_STAGE;
00444e   0e01     movlw   0x1              	MOVLW	0x01
004450   0102     movlb   0x2              	BANKSEL	_ctrlTransferStage
004452   6fb9     movwf   0xb9, 0x1        	MOVWF	_ctrlTransferStage, B
004454   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 5)
                                           ;	.line	505; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_IN_BD(0).Cnt = 0;
004456   6b05     clrf    0x5, 0x1         	CLRF	(_ep_bdt + 5), B
                                           ;	.line	506; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
004458   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
00445a   6f04     movwf   0x4, 0x1         	MOVWF	(_ep_bdt + 4), B
                                           ;	.line	509; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
00445c   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
00445e   6f01     movwf   0x1, 0x1         	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	510; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&controlTransferBuffer);
004460   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
004462   6f02     movwf   0x2, 0x1         	MOVWF	(_ep_bdt + 2), B
004464   0e05     movlw   0x5              	MOVLW	HIGH(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
004466   6f03     movwf   0x3, 0x1         	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	512; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
004468   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
00446a   6f00     movwf   0, 0x1           	MOVWF	_ep_bdt, B
                                           _01074_DS_:
                                           ;	.line	516; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	UCONbits.PKTDIS = 0;
00446c   986d     bcf     0x6d, 0x4, 0     	BCF	_UCONbits, 4
00446e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004470   f000
004472   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__OutDataStage	code
                                           _OutDataStage:
                                           ;	.line	414; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	void OutDataStage(unsigned char ep) {
003488   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00348a   ffe5
00348c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00348e   ffd9
003490   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003492   ffe5
003494   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003496   ffe5
003498   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00349a   ffe5
00349c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00349e   ffe5
0034a0   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0034a2   ffe5
0034a4   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0034a6   ffe5
0034a8   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0034aa   ffe5
0034ac   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0034ae   ffe5
0034b0   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
0034b2   ffe5
0034b4   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
0034b6   ffe5
0034b8   0e02     movlw   0x2              	MOVLW	0x02
0034ba   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0034bc   f000
                                           ;	.line	417; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	bufferSize = ((0x03 & EP_OUT_BD(ep).Stat.uc) << 8) | EP_OUT_BD(ep).Cnt;
0034be   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
0034c0   0bfe     andlw   0xfe             	ANDLW	0xfe
                                           ; #	MOVWF	r0x01
                                           ; #;;multiply lit val:0x04 by variable r0x01 and store in r0x00
                                           ; #	MOVF	r0x01, W
0034c2   0d04     mullw   0x4              	MULLW	0x04
0034c4   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
0034c6   6e02     movwf   0x2, 0           	MOVWF	r0x02
0034c8   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
0034ca   f000
0034cc   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
0034ce   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0034d0   6e01     movwf   0x1, 0           	MOVWF	r0x01
0034d2   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
0034d4   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
0034d6   6e03     movwf   0x3, 0           	MOVWF	r0x03
0034d8   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0034da   ffe9
0034dc   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0034de   ffea
0034e0   cfef     movff   0xfef, 0x1       	MOVFF	INDF0, r0x01
0034e2   f001
0034e4   0e03     movlw   0x3              	MOVLW	0x03
0034e6   1601     andwf   0x1, 0x1, 0      	ANDWF	r0x01, F
0034e8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0034ea   6e05     movwf   0x5, 0           	MOVWF	r0x05
0034ec   6a04     clrf    0x4, 0           	CLRF	r0x04
0034ee   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
0034f0   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0034f2   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
0034f4   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0034f6   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
0034f8   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
0034fa   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0034fc   ffe9
0034fe   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
003500   ffea
003502   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
003504   f000
003506   6a01     clrf    0x1, 0           	CLRF	r0x01
003508   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00350a   1200     iorwf   0, 0x1, 0        	IORWF	r0x00, F
00350c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00350e   1201     iorwf   0x1, 0x1, 0      	IORWF	r0x01, F
                                           ;	.line	424; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	wCount = wCount + bufferSize;
003510   5000     movf    0, 0, 0          	MOVF	r0x00, W
003512   0102     movlb   0x2              	BANKSEL	_wCount
003514   27aa     addwf   0xaa, 0x1, 0x1   	ADDWF	_wCount, F, B
003516   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003518   23ab     addwfc  0xab, 0x1, 0x1   	ADDWFC	(_wCount + 1), F, B
                                           ;	.line	426; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	outPtr = (u8*)&controlTransferBuffer;
00351a   0e05     movlw   0x5              	MOVLW	HIGH(_controlTransferBuffer)
00351c   0102     movlb   0x2              	BANKSEL	(_outPtr + 1)
00351e   6fa5     movwf   0xa5, 0x1        	MOVWF	(_outPtr + 1), B
003520   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003522   6fa4     movwf   0xa4, 0x1        	MOVWF	_outPtr, B
003524   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003526   6fa6     movwf   0xa6, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	430; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003528   6a02     clrf    0x2, 0           	CLRF	r0x02
00352a   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _01045_DS_:
00352c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00352e   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
003530   e102     bnz     0x3536           	BNZ	_01058_DS_
003532   5000     movf    0, 0, 0          	MOVF	r0x00, W
003534   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
                                           _01058_DS_:
003536   e22c     bc      0x3590           	BC	_01047_DS_
                                           ;	.line	434; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	*inPtr++ = *outPtr++;
003538   c2a7     movff   0x2a7, 0x4       	MOVFF	_inPtr, r0x04
00353a   f004
00353c   c2a8     movff   0x2a8, 0x5       	MOVFF	(_inPtr + 1), r0x05
00353e   f005
003540   c2a9     movff   0x2a9, 0x6       	MOVFF	(_inPtr + 2), r0x06
003542   f006
003544   c2a4     movff   0x2a4, 0x7       	MOVFF	_outPtr, r0x07
003546   f007
003548   c2a5     movff   0x2a5, 0x8       	MOVFF	(_outPtr + 1), r0x08
00354a   f008
00354c   c2a6     movff   0x2a6, 0x9       	MOVFF	(_outPtr + 2), r0x09
00354e   f009
003550   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
003552   ffe9
003554   c008     movff   0x8, 0xff3       	MOVFF	r0x08, PRODL
003556   fff3
003558   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00355a   ec29     call    0x52, 0          	CALL	__gptrget1
00355c   f000
00355e   6e07     movwf   0x7, 0           	MOVWF	r0x07
003560   0102     movlb   0x2              	BANKSEL	_outPtr
003562   2ba4     incf    0xa4, 0x1, 0x1   	INCF	_outPtr, F, B
003564   e303     bnc     0x356c           	BNC	_01059_DS_
                                           ; removed redundant BANKSEL
003566   3fa5     incfsz  0xa5, 0x1, 0x1   	INCFSZ	(_outPtr + 1), F, B
003568   d001     bra     0x356c           	BRA	_11573_DS_
                                           ; removed redundant BANKSEL
00356a   2ba6     incf    0xa6, 0x1, 0x1   	INCF	(_outPtr + 2), F, B
                                           _11573_DS_:
                                           _01059_DS_:
00356c   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00356e   ffe5
003570   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
003572   ffe9
003574   c005     movff   0x5, 0xff3       	MOVFF	r0x05, PRODL
003576   fff3
003578   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00357a   ec31     call    0x62, 0          	CALL	__gptrput1
00357c   f000
00357e   0102     movlb   0x2              	BANKSEL	_inPtr
003580   2ba7     incf    0xa7, 0x1, 0x1   	INCF	_inPtr, F, B
003582   e303     bnc     0x358a           	BNC	_01060_DS_
                                           ; removed redundant BANKSEL
003584   3fa8     incfsz  0xa8, 0x1, 0x1   	INCFSZ	(_inPtr + 1), F, B
003586   d001     bra     0x358a           	BRA	_21574_DS_
                                           ; removed redundant BANKSEL
003588   2ba9     incf    0xa9, 0x1, 0x1   	INCF	(_inPtr + 2), F, B
                                           _21574_DS_:
                                           _01060_DS_:
                                           ;	.line	430; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
00358a   4a02     infsnz  0x2, 0x1, 0      	INFSNZ	r0x02, F
00358c   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
00358e   d7ce     bra     0x352c           	BRA	_01045_DS_
                                           _01047_DS_:
003590   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
003592   f009
003594   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
003596   f008
003598   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
00359a   f007
00359c   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
00359e   f006
0035a0   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0035a2   f005
0035a4   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0035a6   f004
0035a8   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0035aa   f003
0035ac   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0035ae   f002
0035b0   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0035b2   f001
0035b4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0035b6   f000
0035b8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0035ba   ffd9
0035bc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__InDataStage	code
                                           _InDataStage:
                                           ;	.line	367; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	void InDataStage(unsigned char ep) {
002fd6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002fd8   ffe5
002fda   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002fdc   ffd9
002fde   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002fe0   ffe5
002fe2   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002fe4   ffe5
002fe6   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002fe8   ffe5
002fea   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002fec   ffe5
002fee   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002ff0   ffe5
002ff2   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002ff4   ffe5
002ff6   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
002ff8   ffe5
002ffa   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
002ffc   ffe5
002ffe   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
003000   ffe5
003002   0e02     movlw   0x2              	MOVLW	0x02
003004   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003006   f000
                                           ;	.line	374; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if(wCount < EP0_BUFFER_SIZE)
003008   0e00     movlw   0                	MOVLW	0x00
00300a   0102     movlb   0x2              	BANKSEL	(_wCount + 1)
00300c   5dab     subwf   0xab, 0, 0x1     	SUBWF	(_wCount + 1), W, B
00300e   e102     bnz     0x3014           	BNZ	_01030_DS_
003010   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
003012   5daa     subwf   0xaa, 0, 0x1     	SUBWF	_wCount, W, B
                                           _01030_DS_:
003014   e205     bc      0x3020           	BC	_01012_DS_
                                           ;	.line	375; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	bufferSize = wCount;
003016   c2aa     movff   0x2aa, 0x1       	MOVFF	_wCount, r0x01
003018   f001
00301a   c2ab     movff   0x2ab, 0x2       	MOVFF	(_wCount + 1), r0x02
00301c   f002
00301e   d003     bra     0x3026           	BRA	_01013_DS_
                                           _01012_DS_:
                                           ;	.line	377; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	bufferSize = EP0_BUFFER_SIZE;
003020   0e40     movlw   0x40             	MOVLW	0x40
003022   6e01     movwf   0x1, 0           	MOVWF	r0x01
003024   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           _01013_DS_:
                                           ;	.line	385; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_IN_BD(ep).Stat.uc &= ~(BDS_BC8 | BDS_BC9);
003026   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
003028   0bfe     andlw   0xfe             	ANDLW	0xfe
00302a   6e03     movwf   0x3, 0           	MOVWF	r0x03
00302c   2803     incf    0x3, 0, 0        	INCF	r0x03, W
                                           ; #	MOVWF	r0x00
                                           ; #;;multiply lit val:0x04 by variable r0x00 and store in r0x00
                                           ; #	MOVF	r0x00, W
00302e   0d04     mullw   0x4              	MULLW	0x04
003030   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
003032   6e03     movwf   0x3, 0           	MOVWF	r0x03
003034   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
003036   f000
003038   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
00303a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00303c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00303e   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
003040   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
003042   6e05     movwf   0x5, 0           	MOVWF	r0x05
003044   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
003046   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003048   6e06     movwf   0x6, 0           	MOVWF	r0x06
00304a   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
00304c   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
00304e   6e07     movwf   0x7, 0           	MOVWF	r0x07
003050   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
003052   ffe9
003054   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
003056   ffea
003058   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
00305a   f006
00305c   0efc     movlw   0xfc             	MOVLW	0xfc
00305e   1606     andwf   0x6, 0x1, 0      	ANDWF	r0x06, F
003060   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
003062   ffe9
003064   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
003066   ffea
003068   c006     movff   0x6, 0xfef       	MOVFF	r0x06, INDF0
00306a   ffef
                                           ;	.line	386; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_IN_BD(ep).Stat.uc |= (u8)((bufferSize & 0x0300) >> 8);
00306c   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
00306e   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003070   6e04     movwf   0x4, 0           	MOVWF	r0x04
003072   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
003074   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
003076   6e05     movwf   0x5, 0           	MOVWF	r0x05
003078   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
00307a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00307c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00307e   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
003080   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
003082   6e07     movwf   0x7, 0           	MOVWF	r0x07
003084   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
003086   ffe9
003088   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
00308a   ffea
00308c   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
00308e   f006
003090   0e03     movlw   0x3              	MOVLW	0x03
003092   1402     andwf   0x2, 0, 0        	ANDWF	r0x02, W
                                           ; #	MOVWF	r0x08
                                           ; #	MOVF	r0x08, W
003094   1206     iorwf   0x6, 0x1, 0      	IORWF	r0x06, F
003096   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
003098   ffe9
00309a   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
00309c   ffea
00309e   c006     movff   0x6, 0xfef       	MOVFF	r0x06, INDF0
0030a0   ffef
                                           ;	.line	387; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_IN_BD(ep).Cnt = (u8)(bufferSize & 0xFF);
0030a2   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
0030a4   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0030a6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0030a8   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
0030aa   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
0030ac   6e05     movwf   0x5, 0           	MOVWF	r0x05
0030ae   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
0030b0   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
0030b2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0030b4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0030b6   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
0030b8   ffe9
0030ba   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
0030bc   ffea
0030be   c006     movff   0x6, 0xfef       	MOVFF	r0x06, INDF0
0030c0   ffef
                                           ;	.line	388; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	EP_IN_BD(ep).ADDR = PTR16(&controlTransferBuffer);
0030c2   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
0030c4   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0030c6   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
0030c8   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0030ca   0e02     movlw   0x2              	MOVLW	0x02
0030cc   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0030ce   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0030d0   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
0030d2   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
0030d4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0030d6   0e05     movlw   0x5              	MOVLW	HIGH(_controlTransferBuffer)
0030d8   6e05     movwf   0x5, 0           	MOVWF	r0x05
0030da   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0030dc   ffe9
0030de   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0030e0   ffea
0030e2   c004     movff   0x4, 0xfee       	MOVFF	r0x04, POSTINC0
0030e4   ffee
0030e6   c005     movff   0x5, 0xfef       	MOVFF	r0x05, INDF0
0030e8   ffef
                                           ;	.line	393; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	wCount = wCount - bufferSize;
0030ea   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0030ec   0102     movlb   0x2              	BANKSEL	_wCount
0030ee   5faa     subwf   0xaa, 0x1, 0x1   	SUBWF	_wCount, F, B
0030f0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
0030f2   5bab     subwfb  0xab, 0x1, 0x1   	SUBWFB	(_wCount + 1), F, B
                                           ;	.line	396; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	inPtr = (u8 *)&controlTransferBuffer;
0030f4   0e05     movlw   0x5              	MOVLW	HIGH(_controlTransferBuffer)
0030f6   0102     movlb   0x2              	BANKSEL	(_inPtr + 1)
0030f8   6fa8     movwf   0xa8, 0x1        	MOVWF	(_inPtr + 1), B
0030fa   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
0030fc   6fa7     movwf   0xa7, 0x1        	MOVWF	_inPtr, B
0030fe   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003100   6fa9     movwf   0xa9, 0x1        	MOVWF	(_inPtr + 2), B
                                           ;	.line	401; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003102   6a00     clrf    0, 0             	CLRF	r0x00
                                           _01016_DS_:
003104   c000     movff   0, 0x3           	MOVFF	r0x00, r0x03
003106   f003
003108   6a04     clrf    0x4, 0           	CLRF	r0x04
00310a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00310c   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
00310e   e102     bnz     0x3114           	BNZ	_01036_DS_
003110   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003112   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _01036_DS_:
003114   e22b     bc      0x316c           	BC	_01018_DS_
                                           ;	.line	405; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	*inPtr++ = *outPtr++;
003116   c2a7     movff   0x2a7, 0x3       	MOVFF	_inPtr, r0x03
003118   f003
00311a   c2a8     movff   0x2a8, 0x4       	MOVFF	(_inPtr + 1), r0x04
00311c   f004
00311e   c2a9     movff   0x2a9, 0x5       	MOVFF	(_inPtr + 2), r0x05
003120   f005
003122   c2a4     movff   0x2a4, 0x6       	MOVFF	_outPtr, r0x06
003124   f006
003126   c2a5     movff   0x2a5, 0x7       	MOVFF	(_outPtr + 1), r0x07
003128   f007
00312a   c2a6     movff   0x2a6, 0x8       	MOVFF	(_outPtr + 2), r0x08
00312c   f008
00312e   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
003130   ffe9
003132   c007     movff   0x7, 0xff3       	MOVFF	r0x07, PRODL
003134   fff3
003136   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003138   ec29     call    0x52, 0          	CALL	__gptrget1
00313a   f000
00313c   6e06     movwf   0x6, 0           	MOVWF	r0x06
00313e   0102     movlb   0x2              	BANKSEL	_outPtr
003140   2ba4     incf    0xa4, 0x1, 0x1   	INCF	_outPtr, F, B
003142   e303     bnc     0x314a           	BNC	_01037_DS_
                                           ; removed redundant BANKSEL
003144   3fa5     incfsz  0xa5, 0x1, 0x1   	INCFSZ	(_outPtr + 1), F, B
003146   d001     bra     0x314a           	BRA	_31575_DS_
                                           ; removed redundant BANKSEL
003148   2ba6     incf    0xa6, 0x1, 0x1   	INCF	(_outPtr + 2), F, B
                                           _31575_DS_:
                                           _01037_DS_:
00314a   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
00314c   ffe5
00314e   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
003150   ffe9
003152   c004     movff   0x4, 0xff3       	MOVFF	r0x04, PRODL
003154   fff3
003156   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003158   ec31     call    0x62, 0          	CALL	__gptrput1
00315a   f000
00315c   0102     movlb   0x2              	BANKSEL	_inPtr
00315e   2ba7     incf    0xa7, 0x1, 0x1   	INCF	_inPtr, F, B
003160   e303     bnc     0x3168           	BNC	_01038_DS_
                                           ; removed redundant BANKSEL
003162   3fa8     incfsz  0xa8, 0x1, 0x1   	INCFSZ	(_inPtr + 1), F, B
003164   d001     bra     0x3168           	BRA	_41576_DS_
                                           ; removed redundant BANKSEL
003166   2ba9     incf    0xa9, 0x1, 0x1   	INCF	(_inPtr + 2), F, B
                                           _41576_DS_:
                                           _01038_DS_:
                                           ;	.line	401; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003168   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
00316a   d7cc     bra     0x3104           	BRA	_01016_DS_
                                           _01018_DS_:
00316c   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
00316e   f008
003170   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003172   f007
003174   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003176   f006
003178   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
00317a   f005
00317c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00317e   f004
003180   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003182   f003
003184   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003186   f002
003188   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00318a   f001
00318c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00318e   f000
003190   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003192   ffd9
003194   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ProcessStandardRequest	code
                                           _ProcessStandardRequest:
                                           ;	.line	256; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	void ProcessStandardRequest(void) {
004046   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004048   ffe5
                                           ;	.line	257; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	u8 request = SetupPacket.bRequest;
00404a   c501     movff   0x501, 0         	MOVFF	(_SetupPacket + 1), r0x00
00404c   f000
00404e   0105     movlb   0x5              	BANKSEL	_SetupPacket
                                           ;	.line	259; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if((SetupPacket.bmRequestType & 0x60) != 0x00)
004050   5100     movf    0, 0, 0x1        	MOVF	_SetupPacket, W, B
                                           ; #	ANDLW	0x60
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00925_DS_
                                           ; #	GOTO	_00957_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	262; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	return;
004052   0b60     andlw   0x60             	ANDLW	0x60
                                           ;	.line	264; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (request == SET_ADDRESS) {
004054   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
004056   d061     bra     0x411a           	BRA	_00957_DS_
004058   5000     movf    0, 0, 0          	MOVF	r0x00, W
00405a   0a05     xorlw   0x5              	XORLW	0x05
00405c   e109     bnz     0x4070           	BNZ	_00955_DS_
                                           ;	.line	272; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	requestHandled = 1;
00405e   0e01     movlw   0x1              	MOVLW	0x01
004060   0102     movlb   0x2              	BANKSEL	_requestHandled
004062   6fb4     movwf   0xb4, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	273; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	deviceState = ADDRESS;
004064   0e04     movlw   0x4              	MOVLW	0x04
004066   0102     movlb   0x2              	BANKSEL	_deviceState
004068   6fb7     movwf   0xb7, 0x1        	MOVWF	_deviceState, B
                                           ;	.line	274; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	deviceAddress = SetupPacket.wValue0;
00406a   c502     movff   0x502, 0x2ad     	MOVFF	(_SetupPacket + 2), _deviceAddress
00406c   f2ad
00406e   d055     bra     0x411a           	BRA	_00957_DS_
                                           _00955_DS_:
                                           ;	.line	276; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	else if (request == GET_DESCRIPTOR) {
004070   5000     movf    0, 0, 0          	MOVF	r0x00, W
004072   0a06     xorlw   0x6              	XORLW	0x06
004074   e103     bnz     0x407c           	BNZ	_00952_DS_
                                           ;	.line	277; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	GetDescriptor();
004076   ecc3     call    0x3d86, 0        	CALL	_GetDescriptor
004078   f01e
00407a   d04f     bra     0x411a           	BRA	_00957_DS_
                                           _00952_DS_:
                                           ;	.line	279; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	else if (request == SET_CONFIGURATION) {
00407c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00407e   0a09     xorlw   0x9              	XORLW	0x09
004080   e112     bnz     0x40a6           	BNZ	_00949_DS_
                                           ;	.line	283; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	requestHandled = 1;
004082   0e01     movlw   0x1              	MOVLW	0x01
004084   0102     movlb   0x2              	BANKSEL	_requestHandled
004086   6fb4     movwf   0xb4, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	284; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	currentConfiguration = SetupPacket.wValue0;
004088   c502     movff   0x502, 0x2b8     	MOVFF	(_SetupPacket + 2), _currentConfiguration
00408a   f2b8
00408c   0102     movlb   0x2              	BANKSEL	_currentConfiguration
                                           ;	.line	287; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (currentConfiguration == 0)
00408e   51b8     movf    0xb8, 0, 0x1     	MOVF	_currentConfiguration, W, B
004090   e104     bnz     0x409a           	BNZ	_00927_DS_
                                           ;	.line	290; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	deviceState = ADDRESS;
004092   0e04     movlw   0x4              	MOVLW	0x04
004094   0102     movlb   0x2              	BANKSEL	_deviceState
004096   6fb7     movwf   0xb7, 0x1        	MOVWF	_deviceState, B
004098   d040     bra     0x411a           	BRA	_00957_DS_
                                           _00927_DS_:
                                           ;	.line	293; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	deviceState = CONFIGURED;
00409a   0e05     movlw   0x5              	MOVLW	0x05
00409c   0102     movlb   0x2              	BANKSEL	_deviceState
00409e   6fb7     movwf   0xb7, 0x1        	MOVWF	_deviceState, B
                                           ;	.line	303; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	CDCInitEndpoint();
0040a0   ec44     call    0x4e88, 0        	CALL	_CDCInitEndpoint
0040a2   f027
0040a4   d03a     bra     0x411a           	BRA	_00957_DS_
                                           _00949_DS_:
                                           ;	.line	313; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	else if (request == GET_CONFIGURATION) {
0040a6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0040a8   0a08     xorlw   0x8              	XORLW	0x08
0040aa   e10f     bnz     0x40ca           	BNZ	_00946_DS_
                                           ;	.line	317; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	requestHandled = 1;
0040ac   0e01     movlw   0x1              	MOVLW	0x01
0040ae   0102     movlb   0x2              	BANKSEL	_requestHandled
0040b0   6fb4     movwf   0xb4, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	318; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	outPtr = (u8*)&currentConfiguration;
0040b2   0e02     movlw   0x2              	MOVLW	HIGH(_currentConfiguration)
0040b4   0102     movlb   0x2              	BANKSEL	(_outPtr + 1)
0040b6   6fa5     movwf   0xa5, 0x1        	MOVWF	(_outPtr + 1), B
0040b8   0eb8     movlw   0xb8             	MOVLW	LOW(_currentConfiguration)
                                           ; removed redundant BANKSEL
0040ba   6fa4     movwf   0xa4, 0x1        	MOVWF	_outPtr, B
0040bc   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
0040be   6fa6     movwf   0xa6, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	319; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	wCount = 1;
0040c0   0e01     movlw   0x1              	MOVLW	0x01
0040c2   0102     movlb   0x2              	BANKSEL	_wCount
0040c4   6faa     movwf   0xaa, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
0040c6   6bab     clrf    0xab, 0x1        	CLRF	(_wCount + 1), B
0040c8   d028     bra     0x411a           	BRA	_00957_DS_
                                           _00946_DS_:
                                           ;	.line	321; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	else if (request == GET_STATUS) {
0040ca   5000     movf    0, 0, 0          	MOVF	r0x00, W
0040cc   e103     bnz     0x40d4           	BNZ	_00943_DS_
                                           ;	.line	322; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	GetStatus();
0040ce   ecb5     call    0x3b6a, 0        	CALL	_GetStatus
0040d0   f01d
0040d2   d023     bra     0x411a           	BRA	_00957_DS_
                                           _00943_DS_:
                                           ;	.line	324; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	else if ((request == CLEAR_FEATURE) ||
0040d4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0040d6   0a01     xorlw   0x1              	XORLW	0x01
0040d8   e003     bz      0x40e0           	BZ	_00938_DS_
                                           ;	.line	325; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	(request == SET_FEATURE)) {
0040da   5000     movf    0, 0, 0          	MOVF	r0x00, W
0040dc   0a03     xorlw   0x3              	XORLW	0x03
0040de   e103     bnz     0x40e6           	BNZ	_00939_DS_
                                           _00938_DS_:
                                           ;	.line	326; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	SetFeature();
0040e0   ecdf     call    0x35be, 0        	CALL	_SetFeature
0040e2   f01a
0040e4   d01a     bra     0x411a           	BRA	_00957_DS_
                                           _00939_DS_:
                                           ;	.line	328; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	else if (request == GET_INTERFACE) {
0040e6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0040e8   0a0a     xorlw   0xa              	XORLW	0x0a
0040ea   e111     bnz     0x410e           	BNZ	_00936_DS_
                                           ;	.line	334; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	requestHandled = 1;
0040ec   0e01     movlw   0x1              	MOVLW	0x01
0040ee   0102     movlb   0x2              	BANKSEL	_requestHandled
0040f0   6fb4     movwf   0xb4, 0x1        	MOVWF	_requestHandled, B
0040f2   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
                                           ;	.line	335; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	controlTransferBuffer[0] = 0;
0040f4   6b40     clrf    0x40, 0x1        	CLRF	_controlTransferBuffer, B
                                           ;	.line	336; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	outPtr = (u8 *)&controlTransferBuffer;
0040f6   0e05     movlw   0x5              	MOVLW	HIGH(_controlTransferBuffer)
0040f8   0102     movlb   0x2              	BANKSEL	(_outPtr + 1)
0040fa   6fa5     movwf   0xa5, 0x1        	MOVWF	(_outPtr + 1), B
0040fc   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
0040fe   6fa4     movwf   0xa4, 0x1        	MOVWF	_outPtr, B
004100   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
004102   6fa6     movwf   0xa6, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	337; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	wCount = 1;
004104   0e01     movlw   0x1              	MOVLW	0x01
004106   0102     movlb   0x2              	BANKSEL	_wCount
004108   6faa     movwf   0xaa, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
00410a   6bab     clrf    0xab, 0x1        	CLRF	(_wCount + 1), B
00410c   d006     bra     0x411a           	BRA	_00957_DS_
                                           _00936_DS_:
                                           ;	.line	339; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	else if (request == SET_INTERFACE) {
00410e   5000     movf    0, 0, 0          	MOVF	r0x00, W
004110   0a0b     xorlw   0xb              	XORLW	0x0b
004112   e103     bnz     0x411a           	BNZ	_00957_DS_
                                           ;	.line	344; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	requestHandled = 1;
004114   0e01     movlw   0x1              	MOVLW	0x01
004116   0102     movlb   0x2              	BANKSEL	_requestHandled
004118   6fb4     movwf   0xb4, 0x1        	MOVWF	_requestHandled, B
                                           _00957_DS_:
                                           ;	.line	351; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	else if (request == SYNCH_FRAME) {
00411a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00411c   f000
00411e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SetFeature	code
                                           _SetFeature:
                                           ;	.line	212; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	static void SetFeature(void) {
0035be   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0035c0   ffe5
0035c2   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0035c4   ffe5
0035c6   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0035c8   ffe5
0035ca   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0035cc   ffe5
0035ce   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0035d0   ffe5
0035d2   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0035d4   ffe5
                                           ;	.line	213; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	u8 recipient = SetupPacket.bmRequestType & 0x1F;
0035d6   0e1f     movlw   0x1f             	MOVLW	0x1f
0035d8   0105     movlb   0x5              	BANKSEL	_SetupPacket
0035da   1500     andwf   0, 0, 0x1        	ANDWF	_SetupPacket, W, B
0035dc   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	214; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	u8 feature = SetupPacket.wValue0;
0035de   c502     movff   0x502, 0x1       	MOVFF	(_SetupPacket + 2), r0x01
0035e0   f001
                                           ;	.line	219; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (recipient == 0x00) {
0035e2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0035e4   e112     bnz     0x360a           	BNZ	_00876_DS_
                                           ;	.line	221; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (feature == DEVICE_REMOTE_WAKEUP) {
0035e6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0035e8   0a01     xorlw   0x1              	XORLW	0x01
0035ea   e001     bz      0x35ee           	BZ	_00909_DS_
0035ec   d076     bra     0x36da           	BRA	_00878_DS_
                                           _00909_DS_:
                                           ;	.line	222; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	requestHandled = 1;
0035ee   0e01     movlw   0x1              	MOVLW	0x01
0035f0   0102     movlb   0x2              	BANKSEL	_requestHandled
0035f2   6fb4     movwf   0xb4, 0x1        	MOVWF	_requestHandled, B
0035f4   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 1)
                                           ;	.line	223; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (SetupPacket.bRequest == SET_FEATURE)
0035f6   5101     movf    0x1, 0, 0x1      	MOVF	(_SetupPacket + 1), W, B
0035f8   0a03     xorlw   0x3              	XORLW	0x03
0035fa   e104     bnz     0x3604           	BNZ	_00858_DS_
                                           ;	.line	224; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	remoteWakeup = 1;
0035fc   0e01     movlw   0x1              	MOVLW	0x01
0035fe   0102     movlb   0x2              	BANKSEL	_remoteWakeup
003600   6fb6     movwf   0xb6, 0x1        	MOVWF	_remoteWakeup, B
003602   d06b     bra     0x36da           	BRA	_00878_DS_
                                           _00858_DS_:
003604   0102     movlb   0x2              	BANKSEL	_remoteWakeup
                                           ;	.line	226; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	remoteWakeup = 0;
003606   6bb6     clrf    0xb6, 0x1        	CLRF	_remoteWakeup, B
003608   d068     bra     0x36da           	BRA	_00878_DS_
                                           _00876_DS_:
                                           ;	.line	230; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	else if (recipient == 0x02) {
00360a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00360c   0a02     xorlw   0x2              	XORLW	0x02
00360e   e001     bz      0x3612           	BZ	_00913_DS_
003610   d064     bra     0x36da           	BRA	_00878_DS_
                                           _00913_DS_:
                                           ;	.line	232; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	u8 endpointNum = SetupPacket.wIndex0 & 0x0F;
003612   0e0f     movlw   0xf              	MOVLW	0x0f
003614   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 4)
003616   1504     andwf   0x4, 0, 0x1      	ANDWF	(_SetupPacket + 4), W, B
003618   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	233; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	u8 endpointDir = SetupPacket.wIndex0 & 0x80;
00361a   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
00361c   1504     andwf   0x4, 0, 0x1      	ANDWF	(_SetupPacket + 4), W, B
00361e   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	234; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if ((feature == ENDPOINT_HALT) && (endpointNum != 0)) {
003620   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003622   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
003624   d05a     bra     0x36da           	BRA	_00878_DS_
003626   5000     movf    0, 0, 0          	MOVF	r0x00, W
003628   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
00362a   d057     bra     0x36da           	BRA	_00878_DS_
                                           ;	.line	236; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	requestHandled = 1;
00362c   0e01     movlw   0x1              	MOVLW	0x01
00362e   0102     movlb   0x2              	BANKSEL	_requestHandled
003630   6fb4     movwf   0xb4, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	239; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	inPtr = (u8 *)&EP_OUT_BD(0) + (endpointNum * 8);
003632   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
003634   6e03     movwf   0x3, 0           	MOVWF	r0x03
003636   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
003638   6e01     movwf   0x1, 0           	MOVWF	r0x01
00363a   0e80     movlw   0x80             	MOVLW	0x80
00363c   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ; ;multiply lit val:0x08 by variable r0x00 and store in r0x00
00363e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003640   0d08     mullw   0x8              	MULLW	0x08
003642   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
003644   6e05     movwf   0x5, 0           	MOVWF	r0x05
003646   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
003648   f000
00364a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00364c   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
00364e   0102     movlb   0x2              	BANKSEL	_inPtr
003650   6fa7     movwf   0xa7, 0x1        	MOVWF	_inPtr, B
003652   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003654   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
003656   6fa8     movwf   0xa8, 0x1        	MOVWF	(_inPtr + 1), B
003658   6ae8     clrf    0xe8, 0          	CLRF	WREG
00365a   be05     btfsc   0x5, 0x7, 0      	BTFSC	r0x05, 7
00365c   68e8     setf    0xe8, 0          	SETF	WREG
00365e   2004     addwfc  0x4, 0, 0        	ADDWFC	r0x04, W
                                           ; removed redundant BANKSEL
003660   6fa9     movwf   0xa9, 0x1        	MOVWF	(_inPtr + 2), B
                                           ;	.line	240; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (endpointDir)
003662   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003664   e005     bz      0x3670           	BZ	_00863_DS_
                                           ;	.line	241; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	inPtr += 4;
003666   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
003668   27a7     addwf   0xa7, 0x1, 0x1   	ADDWF	_inPtr, F, B
00366a   0e00     movlw   0                	MOVLW	0x00
                                           ; removed redundant BANKSEL
00366c   23a8     addwfc  0xa8, 0x1, 0x1   	ADDWFC	(_inPtr + 1), F, B
                                           ; removed redundant BANKSEL
00366e   23a9     addwfc  0xa9, 0x1, 0x1   	ADDWFC	(_inPtr + 2), F, B
                                           _00863_DS_:
003670   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 1)
                                           ;	.line	243; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if(SetupPacket.bRequest == SET_FEATURE)
003672   5101     movf    0x1, 0, 0x1      	MOVF	(_SetupPacket + 1), W, B
003674   0a03     xorlw   0x3              	XORLW	0x03
003676   e110     bnz     0x3698           	BNZ	_00868_DS_
                                           ;	.line	244; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	*inPtr = 0x84;
003678   c2a7     movff   0x2a7, 0         	MOVFF	_inPtr, r0x00
00367a   f000
00367c   c2a8     movff   0x2a8, 0x1       	MOVFF	(_inPtr + 1), r0x01
00367e   f001
003680   c2a9     movff   0x2a9, 0x3       	MOVFF	(_inPtr + 2), r0x03
003682   f003
003684   0e84     movlw   0x84             	MOVLW	0x84
003686   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003688   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00368a   ffe9
00368c   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00368e   fff3
003690   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003692   ec31     call    0x62, 0          	CALL	__gptrput1
003694   f000
003696   d021     bra     0x36da           	BRA	_00878_DS_
                                           _00868_DS_:
                                           ;	.line	246; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if(endpointDir == 1)
003698   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00369a   0a01     xorlw   0x1              	XORLW	0x01
00369c   e10f     bnz     0x36bc           	BNZ	_00865_DS_
                                           ;	.line	247; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	*inPtr = 0x00;
00369e   c2a7     movff   0x2a7, 0         	MOVFF	_inPtr, r0x00
0036a0   f000
0036a2   c2a8     movff   0x2a8, 0x1       	MOVFF	(_inPtr + 1), r0x01
0036a4   f001
0036a6   c2a9     movff   0x2a9, 0x2       	MOVFF	(_inPtr + 2), r0x02
0036a8   f002
0036aa   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0036ac   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0036ae   ffe9
0036b0   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0036b2   fff3
0036b4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0036b6   ec31     call    0x62, 0          	CALL	__gptrput1
0036b8   f000
0036ba   d00f     bra     0x36da           	BRA	_00878_DS_
                                           _00865_DS_:
                                           ;	.line	249; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	*inPtr = 0x88;
0036bc   c2a7     movff   0x2a7, 0         	MOVFF	_inPtr, r0x00
0036be   f000
0036c0   c2a8     movff   0x2a8, 0x1       	MOVFF	(_inPtr + 1), r0x01
0036c2   f001
0036c4   c2a9     movff   0x2a9, 0x2       	MOVFF	(_inPtr + 2), r0x02
0036c6   f002
0036c8   0e88     movlw   0x88             	MOVLW	0x88
0036ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036cc   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0036ce   ffe9
0036d0   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0036d2   fff3
0036d4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0036d6   ec31     call    0x62, 0          	CALL	__gptrput1
0036d8   f000
                                           _00878_DS_:
0036da   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0036dc   f005
0036de   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0036e0   f004
0036e2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0036e4   f003
0036e6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0036e8   f002
0036ea   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0036ec   f001
0036ee   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0036f0   f000
0036f2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__GetStatus	code
                                           _GetStatus:
                                           ;	.line	167; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	static void GetStatus(void) {
003b6a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003b6c   ffe5
003b6e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003b70   ffe5
003b72   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003b74   ffe5
003b76   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003b78   ffe5
003b7a   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003b7c   ffe5
003b7e   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003b80   ffe5
                                           ;	.line	169; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	u8 recipient = SetupPacket.bmRequestType & 0x1F;
003b82   0e1f     movlw   0x1f             	MOVLW	0x1f
003b84   0105     movlb   0x5              	BANKSEL	_SetupPacket
003b86   1500     andwf   0, 0, 0x1        	ANDWF	_SetupPacket, W, B
003b88   6e00     movwf   0, 0             	MOVWF	r0x00
003b8a   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
                                           ;	.line	173; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	controlTransferBuffer[0] = 0;
003b8c   6b40     clrf    0x40, 0x1        	CLRF	_controlTransferBuffer, B
                                           ; removed redundant BANKSEL
                                           ;	.line	174; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	controlTransferBuffer[1] = 0;
003b8e   6b41     clrf    0x41, 0x1        	CLRF	(_controlTransferBuffer + 1), B
                                           ;	.line	177; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (recipient == 0x00) {
003b90   5000     movf    0, 0, 0          	MOVF	r0x00, W
003b92   e113     bnz     0x3bba           	BNZ	_00813_DS_
                                           ;	.line	179; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	requestHandled = 1;
003b94   0e01     movlw   0x1              	MOVLW	0x01
003b96   0102     movlb   0x2              	BANKSEL	_requestHandled
003b98   6fb4     movwf   0xb4, 0x1        	MOVWF	_requestHandled, B
003b9a   0102     movlb   0x2              	BANKSEL	_selfPowered
                                           ;	.line	181; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (selfPowered)
003b9c   51b5     movf    0xb5, 0, 0x1     	MOVF	_selfPowered, W, B
003b9e   e004     bz      0x3ba8           	BZ	_00800_DS_
                                           ;	.line	182; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	controlTransferBuffer[0] |= 0x01;
003ba0   0e01     movlw   0x1              	MOVLW	0x01
003ba2   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
003ba4   1140     iorwf   0x40, 0, 0x1     	IORWF	_controlTransferBuffer, W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003ba6   6f40     movwf   0x40, 0x1        	MOVWF	_controlTransferBuffer, B
                                           _00800_DS_:
003ba8   0102     movlb   0x2              	BANKSEL	_remoteWakeup
                                           ;	.line	183; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (remoteWakeup)
003baa   51b6     movf    0xb6, 0, 0x1     	MOVF	_remoteWakeup, W, B
003bac   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
003bae   d04c     bra     0x3c48           	BRA	_00814_DS_
                                           ;	.line	184; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	controlTransferBuffer[0] |= 0x02;
003bb0   0e02     movlw   0x2              	MOVLW	0x02
003bb2   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
003bb4   1140     iorwf   0x40, 0, 0x1     	IORWF	_controlTransferBuffer, W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003bb6   6f40     movwf   0x40, 0x1        	MOVWF	_controlTransferBuffer, B
003bb8   d047     bra     0x3c48           	BRA	_00814_DS_
                                           _00813_DS_:
                                           ;	.line	186; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	else if (recipient == 0x01) {
003bba   5000     movf    0, 0, 0          	MOVF	r0x00, W
003bbc   0a01     xorlw   0x1              	XORLW	0x01
003bbe   e104     bnz     0x3bc8           	BNZ	_00810_DS_
                                           ;	.line	188; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	requestHandled = 1;
003bc0   0e01     movlw   0x1              	MOVLW	0x01
003bc2   0102     movlb   0x2              	BANKSEL	_requestHandled
003bc4   6fb4     movwf   0xb4, 0x1        	MOVWF	_requestHandled, B
003bc6   d040     bra     0x3c48           	BRA	_00814_DS_
                                           _00810_DS_:
                                           ;	.line	190; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	else if (recipient == 0x02) {
003bc8   5000     movf    0, 0, 0          	MOVF	r0x00, W
003bca   0a02     xorlw   0x2              	XORLW	0x02
003bcc   e001     bz      0x3bd0           	BZ	_00849_DS_
003bce   d03c     bra     0x3c48           	BRA	_00814_DS_
                                           _00849_DS_:
                                           ;	.line	192; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	u8 endpointNum = SetupPacket.wIndex0 & 0x0F;
003bd0   0e0f     movlw   0xf              	MOVLW	0x0f
003bd2   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 4)
003bd4   1504     andwf   0x4, 0, 0x1      	ANDWF	(_SetupPacket + 4), W, B
003bd6   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	193; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	u8 endpointDir = SetupPacket.wIndex0 & 0x80;
003bd8   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003bda   1504     andwf   0x4, 0, 0x1      	ANDWF	(_SetupPacket + 4), W, B
003bdc   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           ;	.line	194; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	requestHandled = 1;
003bde   0e01     movlw   0x1              	MOVLW	0x01
003be0   0102     movlb   0x2              	BANKSEL	_requestHandled
003be2   6fb4     movwf   0xb4, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	197; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	inPtr = (u8 *)&EP_OUT_BD(0) + (endpointNum * 8);
003be4   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
003be6   6e03     movwf   0x3, 0           	MOVWF	r0x03
003be8   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
003bea   6e02     movwf   0x2, 0           	MOVWF	r0x02
003bec   0e80     movlw   0x80             	MOVLW	0x80
003bee   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ; ;multiply lit val:0x08 by variable r0x00 and store in r0x00
003bf0   5000     movf    0, 0, 0          	MOVF	r0x00, W
003bf2   0d08     mullw   0x8              	MULLW	0x08
003bf4   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
003bf6   6e05     movwf   0x5, 0           	MOVWF	r0x05
003bf8   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
003bfa   f000
003bfc   5000     movf    0, 0, 0          	MOVF	r0x00, W
003bfe   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
003c00   0102     movlb   0x2              	BANKSEL	_inPtr
003c02   6fa7     movwf   0xa7, 0x1        	MOVWF	_inPtr, B
003c04   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003c06   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
003c08   6fa8     movwf   0xa8, 0x1        	MOVWF	(_inPtr + 1), B
003c0a   6ae8     clrf    0xe8, 0          	CLRF	WREG
003c0c   be05     btfsc   0x5, 0x7, 0      	BTFSC	r0x05, 7
003c0e   68e8     setf    0xe8, 0          	SETF	WREG
003c10   2004     addwfc  0x4, 0, 0        	ADDWFC	r0x04, W
                                           ; removed redundant BANKSEL
003c12   6fa9     movwf   0xa9, 0x1        	MOVWF	(_inPtr + 2), B
                                           ;	.line	198; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (endpointDir)
003c14   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003c16   e005     bz      0x3c22           	BZ	_00804_DS_
                                           ;	.line	199; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	inPtr += 4;
003c18   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
003c1a   27a7     addwf   0xa7, 0x1, 0x1   	ADDWF	_inPtr, F, B
003c1c   0e00     movlw   0                	MOVLW	0x00
                                           ; removed redundant BANKSEL
003c1e   23a8     addwfc  0xa8, 0x1, 0x1   	ADDWFC	(_inPtr + 1), F, B
                                           ; removed redundant BANKSEL
003c20   23a9     addwfc  0xa9, 0x1, 0x1   	ADDWFC	(_inPtr + 2), F, B
                                           _00804_DS_:
                                           ;	.line	200; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if(*inPtr & BDS_BSTALL)
003c22   c2a7     movff   0x2a7, 0         	MOVFF	_inPtr, r0x00
003c24   f000
003c26   c2a8     movff   0x2a8, 0x1       	MOVFF	(_inPtr + 1), r0x01
003c28   f001
003c2a   c2a9     movff   0x2a9, 0x2       	MOVFF	(_inPtr + 2), r0x02
003c2c   f002
003c2e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003c30   ffe9
003c32   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003c34   fff3
003c36   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003c38   ec29     call    0x52, 0          	CALL	__gptrget1
003c3a   f000
003c3c   6e00     movwf   0, 0             	MOVWF	r0x00
003c3e   a400     btfss   0, 0x2, 0        	BTFSS	r0x00, 2
003c40   d003     bra     0x3c48           	BRA	_00814_DS_
                                           ;	.line	201; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	controlTransferBuffer[0] = 0x01;
003c42   0e01     movlw   0x1              	MOVLW	0x01
003c44   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
003c46   6f40     movwf   0x40, 0x1        	MOVWF	_controlTransferBuffer, B
                                           _00814_DS_:
003c48   0102     movlb   0x2              	BANKSEL	_requestHandled
                                           ;	.line	204; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (requestHandled) {
003c4a   51b4     movf    0xb4, 0, 0x1     	MOVF	_requestHandled, W, B
003c4c   e00b     bz      0x3c64           	BZ	_00817_DS_
                                           ;	.line	205; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	outPtr = (u8 *)&controlTransferBuffer;
003c4e   0e05     movlw   0x5              	MOVLW	HIGH(_controlTransferBuffer)
003c50   0102     movlb   0x2              	BANKSEL	(_outPtr + 1)
003c52   6fa5     movwf   0xa5, 0x1        	MOVWF	(_outPtr + 1), B
003c54   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003c56   6fa4     movwf   0xa4, 0x1        	MOVWF	_outPtr, B
003c58   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003c5a   6fa6     movwf   0xa6, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	206; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	wCount = 2;
003c5c   0e02     movlw   0x2              	MOVLW	0x02
003c5e   0102     movlb   0x2              	BANKSEL	_wCount
003c60   6faa     movwf   0xaa, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003c62   6bab     clrf    0xab, 0x1        	CLRF	(_wCount + 1), B
                                           _00817_DS_:
003c64   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003c66   f005
003c68   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003c6a   f004
003c6c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003c6e   f003
003c70   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003c72   f002
003c74   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003c76   f001
003c78   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003c7a   f000
003c7c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__GetDescriptor	code
                                           _GetDescriptor:
                                           ;	.line	100; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	static void GetDescriptor(void) {
003d86   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003d88   ffe5
003d8a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003d8c   ffe5
003d8e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003d90   ffe5
003d92   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003d94   ffe5
003d96   0105     movlb   0x5              	BANKSEL	_SetupPacket
                                           ;	.line	104; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if(SetupPacket.bmRequestType == 0x80) {
003d98   5100     movf    0, 0, 0x1        	MOVF	_SetupPacket, W, B
003d9a   0a80     xorlw   0x80             	XORLW	0x80
003d9c   e001     bz      0x3da0           	BZ	_00786_DS_
003d9e   d063     bra     0x3e66           	BRA	_00768_DS_
                                           _00786_DS_:
                                           ;	.line	105; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	u8 descriptorType  = SetupPacket.wValue1;
003da0   c503     movff   0x503, 0         	MOVFF	(_SetupPacket + 3), r0x00
003da2   f000
                                           ;	.line	106; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	u8 descriptorIndex = SetupPacket.wValue0;
003da4   c502     movff   0x502, 0x1       	MOVFF	(_SetupPacket + 2), r0x01
003da6   f001
                                           ;	.line	108; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	if (descriptorType == DEVICE_DESCRIPTOR) {
003da8   5000     movf    0, 0, 0          	MOVF	r0x00, W
003daa   0a01     xorlw   0x1              	XORLW	0x01
003dac   e10f     bnz     0x3dcc           	BNZ	_00764_DS_
                                           ;	.line	112; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	requestHandled = 1;
003dae   0e01     movlw   0x1              	MOVLW	0x01
003db0   0102     movlb   0x2              	BANKSEL	_requestHandled
003db2   6fb4     movwf   0xb4, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	113; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	outPtr = (u8 *)&libdevice_descriptor;
003db4   0e00     movlw   0                	MOVLW	UPPER(_libdevice_descriptor)
003db6   0102     movlb   0x2              	BANKSEL	(_outPtr + 2)
003db8   6fa6     movwf   0xa6, 0x1        	MOVWF	(_outPtr + 2), B
003dba   0e23     movlw   0x23             	MOVLW	HIGH(_libdevice_descriptor)
                                           ; removed redundant BANKSEL
003dbc   6fa5     movwf   0xa5, 0x1        	MOVWF	(_outPtr + 1), B
003dbe   0ee4     movlw   0xe4             	MOVLW	LOW(_libdevice_descriptor)
                                           ; removed redundant BANKSEL
003dc0   6fa4     movwf   0xa4, 0x1        	MOVWF	_outPtr, B
                                           ;	.line	114; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	wCount = sizeof(USB_Device_Descriptor);
003dc2   0e12     movlw   0x12             	MOVLW	0x12
003dc4   0102     movlb   0x2              	BANKSEL	_wCount
003dc6   6faa     movwf   0xaa, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003dc8   6bab     clrf    0xab, 0x1        	CLRF	(_wCount + 1), B
003dca   d04d     bra     0x3e66           	BRA	_00768_DS_
                                           _00764_DS_:
                                           ;	.line	116; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	else if (descriptorType == CONFIGURATION_DESCRIPTOR) {
003dcc   5000     movf    0, 0, 0          	MOVF	r0x00, W
003dce   0a02     xorlw   0x2              	XORLW	0x02
003dd0   e117     bnz     0x3e00           	BNZ	_00761_DS_
                                           ;	.line	120; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	requestHandled = 1;
003dd2   0e01     movlw   0x1              	MOVLW	0x01
003dd4   0102     movlb   0x2              	BANKSEL	_requestHandled
003dd6   6fb4     movwf   0xb4, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	131; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	outPtr = (u8 *)&libconfiguration_descriptor;
003dd8   0e00     movlw   0                	MOVLW	UPPER(_libconfiguration_descriptor)
003dda   0102     movlb   0x2              	BANKSEL	(_outPtr + 2)
003ddc   6fa6     movwf   0xa6, 0x1        	MOVWF	(_outPtr + 2), B
003dde   0e23     movlw   0x23             	MOVLW	HIGH(_libconfiguration_descriptor)
                                           ; removed redundant BANKSEL
003de0   6fa5     movwf   0xa5, 0x1        	MOVWF	(_outPtr + 1), B
003de2   0ef6     movlw   0xf6             	MOVLW	LOW(_libconfiguration_descriptor)
                                           ; removed redundant BANKSEL
003de4   6fa4     movwf   0xa4, 0x1        	MOVWF	_outPtr, B
                                           ;	.line	133; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	wCount = libconfiguration_descriptor.Header.wTotalLength;
003de6   0ef8     movlw   0xf8             	MOVLW	LOW(_libconfiguration_descriptor + 2)
003de8   6ef6     movwf   0xf6, 0          	MOVWF	TBLPTRL
003dea   0e23     movlw   0x23             	MOVLW	HIGH(_libconfiguration_descriptor + 2)
003dec   6ef7     movwf   0xf7, 0          	MOVWF	TBLPTRH
003dee   0e00     movlw   0                	MOVLW	UPPER(_libconfiguration_descriptor + 2)
003df0   6ef8     movwf   0xf8, 0          	MOVWF	TBLPTRU
003df2   0009     tblrd   *+               	TBLRD*+	
003df4   cff5     movff   0xff5, 0x2aa     	MOVFF	TABLAT, _wCount
003df6   f2aa
003df8   0009     tblrd   *+               	TBLRD*+	
003dfa   cff5     movff   0xff5, 0x2ab     	MOVFF	TABLAT, (_wCount + 1)
003dfc   f2ab
003dfe   d033     bra     0x3e66           	BRA	_00768_DS_
                                           _00761_DS_:
                                           ;	.line	139; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	else if (descriptorType == STRING_DESCRIPTOR) {
003e00   5000     movf    0, 0, 0          	MOVF	r0x00, W
003e02   0a03     xorlw   0x3              	XORLW	0x03
003e04   e12a     bnz     0x3e5a           	BNZ	_00758_DS_
                                           ;	.line	143; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	requestHandled = 1;
003e06   0e01     movlw   0x1              	MOVLW	0x01
003e08   0102     movlb   0x2              	BANKSEL	_requestHandled
003e0a   6fb4     movwf   0xb4, 0x1        	MOVWF	_requestHandled, B
                                           ; ;multiply lit val:0x03 by variable r0x01 and store in r0x01
                                           ;	.line	144; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	outPtr = (u8 *)&libstring_descriptor[descriptorIndex];
003e0c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003e0e   0d03     mullw   0x3              	MULLW	0x03
003e10   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
003e12   6e02     movwf   0x2, 0           	MOVWF	r0x02
003e14   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003e16   f001
003e18   6a03     clrf    0x3, 0           	CLRF	r0x03
003e1a   0e3a     movlw   0x3a             	MOVLW	LOW(_libstring_descriptor)
003e1c   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
003e1e   0e24     movlw   0x24             	MOVLW	HIGH(_libstring_descriptor)
003e20   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003e22   0e00     movlw   0                	MOVLW	UPPER(_libstring_descriptor)
003e24   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
003e26   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003e28   0102     movlb   0x2              	BANKSEL	(_outPtr + 2)
003e2a   6fa6     movwf   0xa6, 0x1        	MOVWF	(_outPtr + 2), B
003e2c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
003e2e   6fa5     movwf   0xa5, 0x1        	MOVWF	(_outPtr + 1), B
003e30   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003e32   6fa4     movwf   0xa4, 0x1        	MOVWF	_outPtr, B
                                           ;	.line	145; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	wCount = *outPtr;
003e34   c2a4     movff   0x2a4, 0x1       	MOVFF	_outPtr, r0x01
003e36   f001
003e38   c2a5     movff   0x2a5, 0x2       	MOVFF	(_outPtr + 1), r0x02
003e3a   f002
003e3c   c2a6     movff   0x2a6, 0x3       	MOVFF	(_outPtr + 2), r0x03
003e3e   f003
003e40   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
003e42   ffe9
003e44   c002     movff   0x2, 0xff3       	MOVFF	r0x02, PRODL
003e46   fff3
003e48   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003e4a   ec29     call    0x52, 0          	CALL	__gptrget1
003e4c   f000
003e4e   6e01     movwf   0x1, 0           	MOVWF	r0x01
003e50   c001     movff   0x1, 0x2aa       	MOVFF	r0x01, _wCount
003e52   f2aa
003e54   0102     movlb   0x2              	BANKSEL	(_wCount + 1)
003e56   6bab     clrf    0xab, 0x1        	CLRF	(_wCount + 1), B
003e58   d006     bra     0x3e66           	BRA	_00768_DS_
                                           _00758_DS_:
                                           ;	.line	147; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	else if (descriptorType == DEVICE_QUALIFIER_DESCRIPTOR) {
003e5a   5000     movf    0, 0, 0          	MOVF	r0x00, W
003e5c   0a06     xorlw   0x6              	XORLW	0x06
003e5e   e103     bnz     0x3e66           	BNZ	_00768_DS_
                                           ;	.line	151; /home/valentin/.icaro/firmware/tmp/usb/picUSB.c	requestHandled = 1;
003e60   0e01     movlw   0x1              	MOVLW	0x01
003e62   0102     movlb   0x2              	BANKSEL	_requestHandled
003e64   6fb4     movwf   0xb4, 0x1        	MOVWF	_requestHandled, B
                                           _00768_DS_:
003e66   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003e68   f003
003e6a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003e6c   f002
003e6e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003e70   f001
003e72   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003e74   f000
003e76   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapout_init	code
                                           _epapout_init:
                                           ;	.line	42; /home/valentin/.icaro/firmware/source/main.c	void epapout_init() { return; }
003ffe   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapin_init	code
                                           _epapin_init:
                                           ;	.line	41; /home/valentin/.icaro/firmware/source/main.c	void epapin_init() { return; }
00527a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_out	code
                                           _epap_out:
                                           ;	.line	40; /home/valentin/.icaro/firmware/source/main.c	void epap_out() { return; }
00527c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_in	code
                                           _epap_in:
                                           ;	.line	39; /home/valentin/.icaro/firmware/source/main.c	void epap_in() { return; }
00527e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__set_PWM	code
                                           _set_PWM:
                                           ;	.line	188; /home/valentin/.icaro/firmware/tmp/pwm.c	void set_PWM(int input, int value)
004474   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004476   ffe5
004478   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00447a   ffd9
00447c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00447e   ffe5
004480   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004482   ffe5
004484   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004486   ffe5
004488   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00448a   ffe5
00448c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00448e   ffe5
004490   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004492   ffe5
004494   0e02     movlw   0x2              	MOVLW	0x02
004496   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004498   f000
00449a   0e03     movlw   0x3              	MOVLW	0x03
00449c   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00449e   f001
0044a0   0e04     movlw   0x4              	MOVLW	0x04
0044a2   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0044a4   f002
0044a6   0e05     movlw   0x5              	MOVLW	0x05
0044a8   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
0044aa   f003
                                           ;	.line	192; /home/valentin/.icaro/firmware/tmp/pwm.c	if (input==11)
0044ac   5000     movf    0, 0, 0          	MOVF	r0x00, W
0044ae   0a0b     xorlw   0xb              	XORLW	0x0b
0044b0   e102     bnz     0x44b6           	BNZ	_00722_DS_
0044b2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0044b4   e001     bz      0x44b8           	BZ	_00723_DS_
                                           _00722_DS_:
0044b6   d018     bra     0x44e8           	BRA	_00703_DS_
                                           _00723_DS_:
                                           ;	.line	195; /home/valentin/.icaro/firmware/tmp/pwm.c	if ((CCP2CON & 0x0F)==0) init_PWM11();
0044b8   50ba     movf    0xba, 0, 0       	MOVF	_CCP2CON, W
                                           ; #	ANDLW	0x0f
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00701_DS_
                                           ; #	CALL	_init_PWM11
                                           ; #	MOVLW	0x03
                                           ;	.line	196; /home/valentin/.icaro/firmware/tmp/pwm.c	octet=value & 3;	// extract bit 0 and 1
0044ba   0b0f     andlw   0xf              	ANDLW	0x0f
0044bc   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
0044be   ec16     call    0x522c, 0        	CALL	_init_PWM11
0044c0   f029
0044c2   0e03     movlw   0x3              	MOVLW	0x03
0044c4   1402     andwf   0x2, 0, 0        	ANDWF	r0x02, W
0044c6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0044c8   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           ;	.line	197; /home/valentin/.icaro/firmware/tmp/pwm.c	octet<<=4;			// rotate left 4 bits
0044ca   3804     swapf   0x4, 0, 0        	SWAPF	r0x04, W
0044cc   0bf0     andlw   0xf0             	ANDLW	0xf0
0044ce   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ;	.line	198; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP2CON&=0x0F;		// reset bit 4:5
0044d0   0e0f     movlw   0xf              	MOVLW	0x0f
0044d2   16ba     andwf   0xba, 0x1, 0     	ANDWF	_CCP2CON, F
                                           ;	.line	199; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP2CON|=octet;		// put in CCP2CON 4:5
0044d4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0044d6   12ba     iorwf   0xba, 0x1, 0     	IORWF	_CCP2CON, F
                                           ;	.line	200; /home/valentin/.icaro/firmware/tmp/pwm.c	value>>=2;			// 8 MSB bits of value
0044d8   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
0044da   3203     rrcf    0x3, 0x1, 0      	RRCF	r0x03, F
0044dc   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
0044de   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
0044e0   3203     rrcf    0x3, 0x1, 0      	RRCF	r0x03, F
0044e2   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
                                           ;	.line	201; /home/valentin/.icaro/firmware/tmp/pwm.c	octet=value;		// in octet
0044e4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; =DF= MOVFF: SRC op r0x04 replaced by WREG
                                           ;	.line	202; /home/valentin/.icaro/firmware/tmp/pwm.c	CCPR2L=octet;		// put in CCPR2L
0044e6   6ebb     movwf   0xbb, 0          	MOVWF	_CCPR2L
                                           _00703_DS_:
                                           ;	.line	204; /home/valentin/.icaro/firmware/tmp/pwm.c	if (input==12)
0044e8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0044ea   0a0c     xorlw   0xc              	XORLW	0x0c
0044ec   e102     bnz     0x44f2           	BNZ	_00728_DS_
0044ee   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0044f0   e001     bz      0x44f4           	BZ	_00729_DS_
                                           _00728_DS_:
0044f2   d01a     bra     0x4528           	BRA	_00708_DS_
                                           _00729_DS_:
                                           ;	.line	207; /home/valentin/.icaro/firmware/tmp/pwm.c	if ((CCP1CON & 0x0F)==0) init_PWM12();		
0044f4   50bd     movf    0xbd, 0, 0       	MOVF	_CCP1CON, W
                                           ; #	ANDLW	0x0f
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00705_DS_
                                           ; #	CALL	_init_PWM12
                                           ; #	MOVLW	0x03
                                           ;	.line	208; /home/valentin/.icaro/firmware/tmp/pwm.c	octet=value & 3;	// extract bit 0 and 1
0044f6   0b0f     andlw   0xf              	ANDLW	0x0f
0044f8   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
0044fa   ec0e     call    0x521c, 0        	CALL	_init_PWM12
0044fc   f029
0044fe   0e03     movlw   0x3              	MOVLW	0x03
004500   1402     andwf   0x2, 0, 0        	ANDWF	r0x02, W
004502   6e00     movwf   0, 0             	MOVWF	r0x00
004504   6a01     clrf    0x1, 0           	CLRF	r0x01
004506   5000     movf    0, 0, 0          	MOVF	r0x00, W
004508   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ;	.line	209; /home/valentin/.icaro/firmware/tmp/pwm.c	octet<<=4;			// rotate left 4 bits
00450a   3804     swapf   0x4, 0, 0        	SWAPF	r0x04, W
00450c   0bf0     andlw   0xf0             	ANDLW	0xf0
00450e   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ;	.line	210; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP1CON&=0x0F;		// reset bit 4:5
004510   0e0f     movlw   0xf              	MOVLW	0x0f
004512   16bd     andwf   0xbd, 0x1, 0     	ANDWF	_CCP1CON, F
                                           ;	.line	211; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP1CON|=octet;		// put in CCP2CON 4:5
004514   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
004516   12bd     iorwf   0xbd, 0x1, 0     	IORWF	_CCP1CON, F
                                           ;	.line	212; /home/valentin/.icaro/firmware/tmp/pwm.c	value>>=2;			// 8 MSB bits of value
004518   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
00451a   3203     rrcf    0x3, 0x1, 0      	RRCF	r0x03, F
00451c   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
00451e   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
004520   3203     rrcf    0x3, 0x1, 0      	RRCF	r0x03, F
004522   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
                                           ;	.line	213; /home/valentin/.icaro/firmware/tmp/pwm.c	octet=value;		// in octet
004524   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004526   6ebe     movwf   0xbe, 0          	MOVWF	_CCPR1L
                                           _00708_DS_:
                                           ;	.line	214; /home/valentin/.icaro/firmware/tmp/pwm.c	CCPR1L=octet;		// put in CCPR1L			
004528   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
00452a   f005
00452c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00452e   f004
004530   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004532   f003
004534   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004536   f002
004538   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00453a   f001
00453c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00453e   f000
004540   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004542   ffd9
004544   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__init_PWM12	code
                                           _init_PWM12:
                                           ;	.line	181; /home/valentin/.icaro/firmware/tmp/pwm.c	TRISCbits.TRISC2=0;		// C2 is an output
00521c   9494     bcf     0x94, 0x2, 0     	BCF	_TRISCbits, 2
                                           ;	.line	182; /home/valentin/.icaro/firmware/tmp/pwm.c	PR2=0xFF;				// init timer 2 period
00521e   68cb     setf    0xcb, 0          	SETF	_PR2
                                           ;	.line	183; /home/valentin/.icaro/firmware/tmp/pwm.c	T2CON=0x05;				// prescaler and timer 2 on
005220   0e05     movlw   0x5              	MOVLW	0x05
005222   6eca     movwf   0xca, 0          	MOVWF	_T2CON
                                           ;	.line	184; /home/valentin/.icaro/firmware/tmp/pwm.c	CCPR1L=0;				// 8 bits MSB output = 0
005224   6abe     clrf    0xbe, 0          	CLRF	_CCPR1L
                                           ;	.line	185; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP1CON=0x0F;			// configure for PWM 2 bits LSB = 0
005226   0e0f     movlw   0xf              	MOVLW	0x0f
005228   6ebd     movwf   0xbd, 0          	MOVWF	_CCP1CON
00522a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__init_PWM11	code
                                           _init_PWM11:
                                           ;	.line	172; /home/valentin/.icaro/firmware/tmp/pwm.c	TRISCbits.TRISC1=0;		// C1 is an output
00522c   9294     bcf     0x94, 0x1, 0     	BCF	_TRISCbits, 1
                                           ;	.line	173; /home/valentin/.icaro/firmware/tmp/pwm.c	PR2=0xFF;				// init timer 2 period
00522e   68cb     setf    0xcb, 0          	SETF	_PR2
                                           ;	.line	174; /home/valentin/.icaro/firmware/tmp/pwm.c	T2CON=0x05;				// prescaler and timer 2 on
005230   0e05     movlw   0x5              	MOVLW	0x05
005232   6eca     movwf   0xca, 0          	MOVWF	_T2CON
                                           ;	.line	175; /home/valentin/.icaro/firmware/tmp/pwm.c	CCPR2L=0;				// 8 bits MSB output = 0
005234   6abb     clrf    0xbb, 0          	CLRF	_CCPR2L
                                           ;	.line	176; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP2CON=0x0F;			// configure for PWM 2 bits LSB = 0	
005236   0e0f     movlw   0xf              	MOVLW	0x0f
005238   6eba     movwf   0xba, 0          	MOVWF	_CCP2CON
00523a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__PWM_set_percent_dutycycle	code
                                           _PWM_set_percent_dutycycle:
                                           ;	.line	151; /home/valentin/.icaro/firmware/tmp/pwm.c	void PWM_set_percent_dutycycle(u8 pin, u8 percent)
004120   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004122   ffe5
004124   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004126   ffd9
004128   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00412a   ffe5
00412c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00412e   ffe5
004130   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004132   ffe5
004134   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004136   ffe5
004138   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00413a   ffe5
00413c   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00413e   ffe5
004140   0e02     movlw   0x2              	MOVLW	0x02
004142   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004144   f000
004146   0e03     movlw   0x3              	MOVLW	0x03
004148   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00414a   f001
                                           ;	.line	154; /home/valentin/.icaro/firmware/tmp/pwm.c	if (percent == 0)
00414c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00414e   e103     bnz     0x4156           	BNZ	_00675_DS_
                                           ;	.line	156; /home/valentin/.icaro/firmware/tmp/pwm.c	duty = 0;
004150   6a02     clrf    0x2, 0           	CLRF	r0x02
004152   6a03     clrf    0x3, 0           	CLRF	r0x03
004154   d030     bra     0x41b6           	BRA	_00676_DS_
                                           _00675_DS_:
                                           ;	.line	158; /home/valentin/.icaro/firmware/tmp/pwm.c	else if (percent >= 100)
004156   0e64     movlw   0x64             	MOVLW	0x64
004158   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00415a   e308     bnc     0x416c           	BNC	_00672_DS_
00415c   0102     movlb   0x2              	BANKSEL	__pr2_plus1
                                           ;	.line	160; /home/valentin/.icaro/firmware/tmp/pwm.c	duty = _pr2_plus1 - 1;
00415e   5191     movf    0x91, 0, 0x1     	MOVF	__pr2_plus1, W, B
004160   0fff     addlw   0xff             	ADDLW	0xff
004162   6e02     movwf   0x2, 0           	MOVWF	r0x02
004164   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
004166   2192     addwfc  0x92, 0, 0x1     	ADDWFC	(__pr2_plus1 + 1), W, B
004168   6e03     movwf   0x3, 0           	MOVWF	r0x03
00416a   d025     bra     0x41b6           	BRA	_00676_DS_
                                           _00672_DS_:
                                           ;	.line	164; /home/valentin/.icaro/firmware/tmp/pwm.c	duty = percent * (_pr2_plus1 / 4) / 25;	// (factor PR2/100)
00416c   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
00416e   0102     movlb   0x2              	BANKSEL	(__pr2_plus1 + 1)
004170   3192     rrcf    0x92, 0, 0x1     	RRCF	(__pr2_plus1 + 1), W, B
004172   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           ; removed redundant BANKSEL
004174   3191     rrcf    0x91, 0, 0x1     	RRCF	__pr2_plus1, W, B
004176   6e04     movwf   0x4, 0           	MOVWF	r0x04
004178   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
00417a   3205     rrcf    0x5, 0x1, 0      	RRCF	r0x05, F
00417c   3204     rrcf    0x4, 0x1, 0      	RRCF	r0x04, F
00417e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
004180   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004182   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
004184   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004186   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004188   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00418a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00418c   ec27     call    0x4e, 0          	CALL	__mulint
00418e   f000
004190   6e01     movwf   0x1, 0           	MOVWF	r0x01
004192   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
004194   f004
004196   0e04     movlw   0x4              	MOVLW	0x04
004198   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00419a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00419c   0e19     movlw   0x19             	MOVLW	0x19
00419e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041a0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0041a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041a4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0041a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041a8   ec28     call    0x4850, 0        	CALL	__divuint
0041aa   f024
0041ac   6e02     movwf   0x2, 0           	MOVWF	r0x02
0041ae   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0041b0   f003
0041b2   0e04     movlw   0x4              	MOVLW	0x04
0041b4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _00676_DS_:
                                           ;	.line	166; /home/valentin/.icaro/firmware/tmp/pwm.c	PWM_set_dutycycle(pin, duty << 2);
0041b6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0041b8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0041ba   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
0041bc   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
0041be   6e04     movwf   0x4, 0           	MOVWF	r0x04
0041c0   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0041c2   3601     rlcf    0x1, 0x1, 0      	RLCF	r0x01, F
0041c4   3604     rlcf    0x4, 0x1, 0      	RLCF	r0x04, F
0041c6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0041c8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041ca   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0041cc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041ce   5000     movf    0, 0, 0          	MOVF	r0x00, W
0041d0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041d2   ec3f     call    0x3c7e, 0        	CALL	_PWM_set_dutycycle
0041d4   f01e
0041d6   0e03     movlw   0x3              	MOVLW	0x03
0041d8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0041da   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0041dc   f005
0041de   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0041e0   f004
0041e2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0041e4   f003
0041e6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0041e8   f002
0041ea   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0041ec   f001
0041ee   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0041f0   f000
0041f2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0041f4   ffd9
0041f6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__PWM_set_dutycycle	code
                                           _PWM_set_dutycycle:
                                           ;	.line	98; /home/valentin/.icaro/firmware/tmp/pwm.c	void PWM_set_dutycycle(u8 pin, u16 duty)
003c7e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003c80   ffe5
003c82   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003c84   ffd9
003c86   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003c88   ffe5
003c8a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003c8c   ffe5
003c8e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003c90   ffe5
003c92   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003c94   ffe5
003c96   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003c98   ffe5
003c9a   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003c9c   ffe5
003c9e   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003ca0   ffe5
003ca2   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003ca4   ffe5
003ca6   0e02     movlw   0x2              	MOVLW	0x02
003ca8   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003caa   f000
003cac   0e03     movlw   0x3              	MOVLW	0x03
003cae   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003cb0   f001
003cb2   0e04     movlw   0x4              	MOVLW	0x04
003cb4   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003cb6   f002
                                           ;	.line	102; /home/valentin/.icaro/firmware/tmp/pwm.c	if (duty > 1023) duty = 1023;		// upper limit (10-bit)
003cb8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003cba   0bfc     andlw   0xfc             	ANDLW	0xfc
003cbc   e003     bz      0x3cc4           	BZ	_00635_DS_
003cbe   6801     setf    0x1, 0           	SETF	r0x01
003cc0   0e03     movlw   0x3              	MOVLW	0x03
003cc2   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           _00635_DS_:
                                           ;	.line	105; /home/valentin/.icaro/firmware/tmp/pwm.c	pinmode(pin, INPUT);				// PWM pin as INPUT
003cc4   c000     movff   0, 0x3           	MOVFF	r0x00, r0x03
003cc6   f003
003cc8   6a04     clrf    0x4, 0           	CLRF	r0x04
003cca   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003ccc   0e01     movlw   0x1              	MOVLW	0x01
003cce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003cd0   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003cd2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003cd4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003cd6   ec55     call    0x28aa, 0        	CALL	_pinmode
003cd8   f014
003cda   0e04     movlw   0x4              	MOVLW	0x04
003cdc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003cde   0102     movlb   0x2              	BANKSEL	__pr2_plus1
                                           ;	.line	107; /home/valentin/.icaro/firmware/tmp/pwm.c	PR2 = _pr2_plus1 - 1;				// set PR2
003ce0   5191     movf    0x91, 0, 0x1     	MOVF	__pr2_plus1, W, B
003ce2   6e05     movwf   0x5, 0           	MOVWF	r0x05
003ce4   0405     decf    0x5, 0, 0        	DECF	r0x05, W
003ce6   6ecb     movwf   0xcb, 0          	MOVWF	_PR2
                                           ;	.line	109; /home/valentin/.icaro/firmware/tmp/pwm.c	if (pin == 11)
003ce8   5000     movf    0, 0, 0          	MOVF	r0x00, W
003cea   0a0b     xorlw   0xb              	XORLW	0x0b
003cec   e113     bnz     0x3d14           	BNZ	_00637_DS_
                                           ;	.line	112; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP2CON = Bin(00001111);		// reset also 2 LSbits of duty cycle
003cee   0e0f     movlw   0xf              	MOVLW	0x0f
003cf0   6eba     movwf   0xba, 0          	MOVWF	_CCP2CON
                                           ;	.line	114; /home/valentin/.icaro/firmware/tmp/pwm.c	temp = duty & Bin(00000011);	// extract 2 LSbits of duty
003cf2   0e03     movlw   0x3              	MOVLW	0x03
003cf4   1401     andwf   0x1, 0, 0        	ANDWF	r0x01, W
003cf6   6e05     movwf   0x5, 0           	MOVWF	r0x05
003cf8   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           ;	.line	115; /home/valentin/.icaro/firmware/tmp/pwm.c	temp <<= 4;						// shift left 4 bits
003cfa   3805     swapf   0x5, 0, 0        	SWAPF	r0x05, W
003cfc   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
                                           ;	.line	116; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP2CON |= temp;				// put in CCP2CON 4:5  (DCBx1 and DCBx0)
003cfe   12ba     iorwf   0xba, 0x1, 0     	IORWF	_CCP2CON, F
                                           ;	.line	117; /home/valentin/.icaro/firmware/tmp/pwm.c	CCPR2L = duty >> 2;				// 8 MSbits of duty
003d00   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003d02   3002     rrcf    0x2, 0, 0        	RRCF	r0x02, W
003d04   6e07     movwf   0x7, 0           	MOVWF	r0x07
003d06   3001     rrcf    0x1, 0, 0        	RRCF	r0x01, W
003d08   6e06     movwf   0x6, 0           	MOVWF	r0x06
003d0a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003d0c   3207     rrcf    0x7, 0x1, 0      	RRCF	r0x07, F
003d0e   3206     rrcf    0x6, 0x1, 0      	RRCF	r0x06, F
003d10   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003d12   6ebb     movwf   0xbb, 0          	MOVWF	_CCPR2L
                                           _00637_DS_:
                                           ;	.line	120; /home/valentin/.icaro/firmware/tmp/pwm.c	if (pin == 12)
003d14   5000     movf    0, 0, 0          	MOVF	r0x00, W
003d16   0a0c     xorlw   0xc              	XORLW	0x0c
003d18   e113     bnz     0x3d40           	BNZ	_00639_DS_
                                           ;	.line	123; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP1CON = Bin(00001111);
003d1a   0e0f     movlw   0xf              	MOVLW	0x0f
003d1c   6ebd     movwf   0xbd, 0          	MOVWF	_CCP1CON
                                           ;	.line	125; /home/valentin/.icaro/firmware/tmp/pwm.c	temp = duty & Bin(00000011);	// extract 2 LSbits of the duty
003d1e   0e03     movlw   0x3              	MOVLW	0x03
003d20   1401     andwf   0x1, 0, 0        	ANDWF	r0x01, W
003d22   6e00     movwf   0, 0             	MOVWF	r0x00
003d24   6a06     clrf    0x6, 0           	CLRF	r0x06
003d26   5000     movf    0, 0, 0          	MOVF	r0x00, W
003d28   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           ;	.line	126; /home/valentin/.icaro/firmware/tmp/pwm.c	temp <<= 4;						// shift left 4 bits
003d2a   3805     swapf   0x5, 0, 0        	SWAPF	r0x05, W
003d2c   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
                                           ;	.line	127; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP1CON |= temp;				// put in CCP2CON 4:5
003d2e   12bd     iorwf   0xbd, 0x1, 0     	IORWF	_CCP1CON, F
                                           ;	.line	128; /home/valentin/.icaro/firmware/tmp/pwm.c	CCPR1L = duty >> 2;				// 8 MSbits of the duty
003d30   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003d32   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
003d34   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
003d36   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003d38   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
003d3a   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
003d3c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003d3e   6ebe     movwf   0xbe, 0          	MOVWF	_CCPR1L
                                           _00639_DS_:
                                           ;	.line	132; /home/valentin/.icaro/firmware/tmp/pwm.c	PIR1bits.TMR2IF = 0;				// reset this flag for the next test
003d40   929e     bcf     0x9e, 0x1, 0     	BCF	_PIR1bits, 1
                                           ;	.line	133; /home/valentin/.icaro/firmware/tmp/pwm.c	T2CON = _t2con;						// Timer2 prescaler
003d42   c2b3     movff   0x2b3, 0xfca     	MOVFF	__t2con, _T2CON
003d44   ffca
                                           ;	.line	134; /home/valentin/.icaro/firmware/tmp/pwm.c	T2CONbits.TMR2ON = ON;				// enable Timer2
003d46   84ca     bsf     0xca, 0x2, 0     	BSF	_T2CONbits, 2
                                           _00640_DS_:
                                           ;	.line	136; /home/valentin/.icaro/firmware/tmp/pwm.c	while (PIR1bits.TMR2IF == 0);		// Wait until TMR2 overflows
003d48   a29e     btfss   0x9e, 0x1, 0     	BTFSS	_PIR1bits, 1
003d4a   d7fe     bra     0x3d48           	BRA	_00640_DS_
                                           ;	.line	137; /home/valentin/.icaro/firmware/tmp/pwm.c	pinmode(pin, OUTPUT);				// PWM pin as OUTPUT
003d4c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003d4e   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003d50   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003d52   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d54   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003d56   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d58   ec55     call    0x28aa, 0        	CALL	_pinmode
003d5a   f014
003d5c   0e04     movlw   0x4              	MOVLW	0x04
003d5e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003d60   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003d62   f007
003d64   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003d66   f006
003d68   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003d6a   f005
003d6c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003d6e   f004
003d70   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003d72   f003
003d74   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003d76   f002
003d78   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003d7a   f001
003d7c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003d7e   f000
003d80   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003d82   ffd9
003d84   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__PWM_set_frequency	code
                                           _PWM_set_frequency:
                                           ;	.line	55; /home/valentin/.icaro/firmware/tmp/pwm.c	void PWM_set_frequency(u32 freq)
0041f8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0041fa   ffe5
0041fc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0041fe   ffd9
004200   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004202   ffe5
004204   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004206   ffe5
004208   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00420a   ffe5
00420c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00420e   ffe5
004210   0e02     movlw   0x2              	MOVLW	0x02
004212   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004214   f000
004216   0e03     movlw   0x3              	MOVLW	0x03
004218   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00421a   f001
00421c   0e04     movlw   0x4              	MOVLW	0x04
00421e   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
004220   f002
004222   0e05     movlw   0x5              	MOVLW	0x05
004224   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
004226   f003
                                           ;	.line	58; /home/valentin/.icaro/firmware/tmp/pwm.c	_pr2_plus1 = MIPS / freq;				// FOSC / (4 * PWM Frequency)
004228   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00422a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00422c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00422e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004230   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004232   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004234   5000     movf    0, 0, 0          	MOVF	r0x00, W
004236   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004238   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00423a   0eb7     movlw   0xb7             	MOVLW	0xb7
00423c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00423e   0e1b     movlw   0x1b             	MOVLW	0x1b
004240   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004242   0e00     movlw   0                	MOVLW	0x00
004244   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004246   ec29     call    0x3a52, 0        	CALL	__divulong
004248   f01d
00424a   6e00     movwf   0, 0             	MOVWF	r0x00
00424c   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00424e   f001
004250   0e08     movlw   0x8              	MOVLW	0x08
004252   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
004254   5000     movf    0, 0, 0          	MOVF	r0x00, W
004256   0102     movlb   0x2              	BANKSEL	__pr2_plus1
004258   6f91     movwf   0x91, 0x1        	MOVWF	__pr2_plus1, B
00425a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00425c   6f92     movwf   0x92, 0x1        	MOVWF	(__pr2_plus1 + 1), B
                                           ;	.line	64; /home/valentin/.icaro/firmware/tmp/pwm.c	if (_pr2_plus1 <= 4096)					// check if it's not too high
00425e   0e10     movlw   0x10             	MOVLW	0x10
                                           ; removed redundant BANKSEL
004260   5d92     subwf   0x92, 0, 0x1     	SUBWF	(__pr2_plus1 + 1), W, B
004262   e102     bnz     0x4268           	BNZ	_00627_DS_
004264   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
004266   5d91     subwf   0x91, 0, 0x1     	SUBWF	__pr2_plus1, W, B
                                           _00627_DS_:
004268   e227     bc      0x42b8           	BC	_00616_DS_
                                           ;	.line	66; /home/valentin/.icaro/firmware/tmp/pwm.c	if (_pr2_plus1 <= 256)				// no needs of any prescaler
00426a   0e01     movlw   0x1              	MOVLW	0x01
00426c   0102     movlb   0x2              	BANKSEL	(__pr2_plus1 + 1)
00426e   5d92     subwf   0x92, 0, 0x1     	SUBWF	(__pr2_plus1 + 1), W, B
004270   e102     bnz     0x4276           	BNZ	_00628_DS_
004272   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
004274   5d91     subwf   0x91, 0, 0x1     	SUBWF	__pr2_plus1, W, B
                                           _00628_DS_:
004276   e203     bc      0x427e           	BC	_00612_DS_
004278   0102     movlb   0x2              	BANKSEL	__t2con
                                           ;	.line	68; /home/valentin/.icaro/firmware/tmp/pwm.c	_t2con = Bin(00);				// prescaler is 1
00427a   6bb3     clrf    0xb3, 0x1        	CLRF	__t2con, B
00427c   d01d     bra     0x42b8           	BRA	_00616_DS_
                                           _00612_DS_:
                                           ;	.line	70; /home/valentin/.icaro/firmware/tmp/pwm.c	else if (_pr2_plus1 <= 1024)		// needs prescaler 1:4
00427e   0e04     movlw   0x4              	MOVLW	0x04
004280   0102     movlb   0x2              	BANKSEL	(__pr2_plus1 + 1)
004282   5d92     subwf   0x92, 0, 0x1     	SUBWF	(__pr2_plus1 + 1), W, B
004284   e102     bnz     0x428a           	BNZ	_00629_DS_
004286   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
004288   5d91     subwf   0x91, 0, 0x1     	SUBWF	__pr2_plus1, W, B
                                           _00629_DS_:
00428a   e20b     bc      0x42a2           	BC	_00609_DS_
                                           ;	.line	72; /home/valentin/.icaro/firmware/tmp/pwm.c	_pr2_plus1 = _pr2_plus1 >> 2;	// divided by 4
00428c   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
00428e   0102     movlb   0x2              	BANKSEL	(__pr2_plus1 + 1)
004290   3392     rrcf    0x92, 0x1, 0x1   	RRCF	(__pr2_plus1 + 1), F, B
                                           ; removed redundant BANKSEL
004292   3391     rrcf    0x91, 0x1, 0x1   	RRCF	__pr2_plus1, F, B
004294   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           ; removed redundant BANKSEL
004296   3392     rrcf    0x92, 0x1, 0x1   	RRCF	(__pr2_plus1 + 1), F, B
                                           ; removed redundant BANKSEL
004298   3391     rrcf    0x91, 0x1, 0x1   	RRCF	__pr2_plus1, F, B
                                           ;	.line	73; /home/valentin/.icaro/firmware/tmp/pwm.c	_t2con = Bin(01);				// prescaler is 4
00429a   0e01     movlw   0x1              	MOVLW	0x01
00429c   0102     movlb   0x2              	BANKSEL	__t2con
00429e   6fb3     movwf   0xb3, 0x1        	MOVWF	__t2con, B
0042a0   d00b     bra     0x42b8           	BRA	_00616_DS_
                                           _00609_DS_:
                                           ;	.line	77; /home/valentin/.icaro/firmware/tmp/pwm.c	_pr2_plus1 = _pr2_plus1 >> 4;	// divided by 16
0042a2   0ef0     movlw   0xf0             	MOVLW	0xf0
0042a4   0102     movlb   0x2              	BANKSEL	__pr2_plus1
0042a6   1791     andwf   0x91, 0x1, 0x1   	ANDWF	__pr2_plus1, F, B
0042a8   3b91     swapf   0x91, 0x1, 0x1   	SWAPF	__pr2_plus1, F, B
                                           ; removed redundant BANKSEL
0042aa   3b92     swapf   0x92, 0x1, 0x1   	SWAPF	(__pr2_plus1 + 1), F, B
0042ac   1592     andwf   0x92, 0, 0x1     	ANDWF	(__pr2_plus1 + 1), W, B
0042ae   1b92     xorwf   0x92, 0x1, 0x1   	XORWF	(__pr2_plus1 + 1), F, B
                                           ; removed redundant BANKSEL
0042b0   2791     addwf   0x91, 0x1, 0x1   	ADDWF	__pr2_plus1, F, B
                                           ;	.line	78; /home/valentin/.icaro/firmware/tmp/pwm.c	_t2con = Bin(10);				// prescaler is 16
0042b2   0e02     movlw   0x2              	MOVLW	0x02
0042b4   0102     movlb   0x2              	BANKSEL	__t2con
0042b6   6fb3     movwf   0xb3, 0x1        	MOVWF	__t2con, B
                                           _00616_DS_:
0042b8   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0042ba   f003
0042bc   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0042be   f002
0042c0   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0042c2   f001
0042c4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0042c6   f000
0042c8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0042ca   ffd9
0042cc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayus	code
                                           _Delayus:
                                           ;	.line	16; /home/valentin/.icaro/firmware/tmp/arduinodelay.c	void Delayus(int microsecondes)
004e2c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004e2e   ffe5
004e30   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004e32   ffd9
004e34   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004e36   ffe5
004e38   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004e3a   ffe5
004e3c   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004e3e   ffe5
004e40   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004e42   ffe5
004e44   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004e46   ffe5
004e48   0e02     movlw   0x2              	MOVLW	0x02
004e4a   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004e4c   f000
004e4e   0e03     movlw   0x3              	MOVLW	0x03
004e50   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004e52   f001
                                           ;	.line	20; /home/valentin/.icaro/firmware/tmp/arduinodelay.c	for (i=0;i<microsecondes;i++);
004e54   6a02     clrf    0x2, 0           	CLRF	r0x02
004e56   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _00592_DS_:
004e58   5000     movf    0, 0, 0          	MOVF	r0x00, W
004e5a   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
004e5c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004e5e   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
004e60   e102     bnz     0x4e66           	BNZ	_00603_DS_
004e62   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
004e64   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
                                           _00603_DS_:
004e66   e203     bc      0x4e6e           	BC	_00594_DS_
004e68   4a02     infsnz  0x2, 0x1, 0      	INFSNZ	r0x02, F
004e6a   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
004e6c   d7f5     bra     0x4e58           	BRA	_00592_DS_
                                           _00594_DS_:
004e6e   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004e70   f004
004e72   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004e74   f003
004e76   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004e78   f002
004e7a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004e7c   f001
004e7e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004e80   f000
004e82   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004e84   ffd9
004e86   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayms	code
                                           _Delayms:
                                           ;	.line	9; /home/valentin/.icaro/firmware/tmp/arduinodelay.c	void Delayms(unsigned long milliseconde)
003f64   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003f66   ffe5
003f68   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003f6a   ffd9
003f6c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003f6e   ffe5
003f70   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003f72   ffe5
003f74   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003f76   ffe5
003f78   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003f7a   ffe5
003f7c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003f7e   ffe5
003f80   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003f82   ffe5
003f84   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003f86   ffe5
003f88   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003f8a   ffe5
003f8c   0e02     movlw   0x2              	MOVLW	0x02
003f8e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003f90   f000
003f92   0e03     movlw   0x3              	MOVLW	0x03
003f94   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003f96   f001
003f98   0e04     movlw   0x4              	MOVLW	0x04
003f9a   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003f9c   f002
003f9e   0e05     movlw   0x5              	MOVLW	0x05
003fa0   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
003fa2   f003
                                           ;	.line	13; /home/valentin/.icaro/firmware/tmp/arduinodelay.c	for (i=0;i<milliseconde;i++) delay10ktcy(1);
003fa4   6a04     clrf    0x4, 0           	CLRF	r0x04
003fa6   6a05     clrf    0x5, 0           	CLRF	r0x05
003fa8   6a06     clrf    0x6, 0           	CLRF	r0x06
003faa   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00573_DS_:
003fac   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003fae   5c07     subwf   0x7, 0, 0        	SUBWF	r0x07, W
003fb0   e108     bnz     0x3fc2           	BNZ	_00584_DS_
003fb2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003fb4   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003fb6   e105     bnz     0x3fc2           	BNZ	_00584_DS_
003fb8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003fba   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
003fbc   e102     bnz     0x3fc2           	BNZ	_00584_DS_
003fbe   5000     movf    0, 0, 0          	MOVF	r0x00, W
003fc0   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00584_DS_:
003fc2   e20a     bc      0x3fd8           	BC	_00575_DS_
003fc4   0e01     movlw   0x1              	MOVLW	0x01
003fc6   ec37     call    0x6e, 0          	CALL	_delay10ktcy
003fc8   f000
003fca   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
003fcc   e3ef     bnc     0x3fac           	BNC	_00573_DS_
003fce   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
003fd0   e3ed     bnc     0x3fac           	BNC	_00573_DS_
003fd2   4a06     infsnz  0x6, 0x1, 0      	INFSNZ	r0x06, F
003fd4   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
                                           _00585_DS_:
003fd6   d7ea     bra     0x3fac           	BRA	_00573_DS_
                                           _00575_DS_:
003fd8   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003fda   f007
003fdc   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003fde   f006
003fe0   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003fe2   f005
003fe4   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003fe6   f004
003fe8   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003fea   f003
003fec   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003fee   f002
003ff0   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003ff2   f001
003ff4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003ff6   f000
003ff8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003ffa   ffd9
003ffc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analogread	code
                                           _analogread:
                                           ;	.line	40; /home/valentin/.icaro/firmware/tmp/analog.c	unsigned int analogread(unsigned char channel)
004c04   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004c06   ffe5
004c08   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004c0a   ffd9
004c0c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004c0e   ffe5
004c10   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004c12   ffe5
004c14   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004c16   ffe5
004c18   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004c1a   ffe5
004c1c   0e02     movlw   0x2              	MOVLW	0x02
004c1e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004c20   f000
                                           ;	.line	55; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON0=(channel-13)*4;
004c22   0ef3     movlw   0xf3             	MOVLW	0xf3
004c24   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; ;multiply lit val:0x04 by variable r0x00 and store in _ADCON0
004c26   5000     movf    0, 0, 0          	MOVF	r0x00, W
004c28   0d04     mullw   0x4              	MULLW	0x04
004c2a   cff3     movff   0xff3, 0xfc2     	MOVFF	PRODL, _ADCON0
004c2c   ffc2
                                           ;	.line	59; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON0bits.ADON=1;
004c2e   80c2     bsf     0xc2, 0, 0       	BSF	_ADCON0bits, 0
                                           ;	.line	60; /home/valentin/.icaro/firmware/tmp/analog.c	for (result=1;result<10;result++) __asm NOP __endasm;
004c30   0e09     movlw   0x9              	MOVLW	0x09
004c32   6e00     movwf   0, 0             	MOVWF	r0x00
004c34   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00565_DS_:
004c36   0000     nop                      	NOP 
004c38   0eff     movlw   0xff             	MOVLW	0xff
004c3a   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
004c3c   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
004c3e   5000     movf    0, 0, 0          	MOVF	r0x00, W
004c40   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
004c42   e1f9     bnz     0x4c36           	BNZ	_00565_DS_
                                           ;	.line	61; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON0bits.GO=1;
004c44   82c2     bsf     0xc2, 0x1, 0     	BSF	_ADCON0bits, 1
                                           _00560_DS_:
                                           ;	.line	62; /home/valentin/.icaro/firmware/tmp/analog.c	while (ADCON0bits.GO);
004c46   b2c2     btfsc   0xc2, 0x1, 0     	BTFSC	_ADCON0bits, 1
004c48   d7fe     bra     0x4c46           	BRA	_00560_DS_
                                           ;	.line	63; /home/valentin/.icaro/firmware/tmp/analog.c	result=ADRESH<<8;
004c4a   cfc4     movff   0xfc4, 0         	MOVFF	_ADRESH, r0x00
004c4c   f000
004c4e   6a01     clrf    0x1, 0           	CLRF	r0x01
004c50   5000     movf    0, 0, 0          	MOVF	r0x00, W
004c52   6e03     movwf   0x3, 0           	MOVWF	r0x03
004c54   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	64; /home/valentin/.icaro/firmware/tmp/analog.c	result+=ADRESL;
004c56   cfc3     movff   0xfc3, 0         	MOVFF	_ADRESL, r0x00
004c58   f000
004c5a   6a01     clrf    0x1, 0           	CLRF	r0x01
004c5c   5000     movf    0, 0, 0          	MOVF	r0x00, W
004c5e   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
004c60   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004c62   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
                                           ;	.line	65; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON0bits.ADON=0;
004c64   90c2     bcf     0xc2, 0, 0       	BCF	_ADCON0bits, 0
                                           ;	.line	66; /home/valentin/.icaro/firmware/tmp/analog.c	return(result);
004c66   c003     movff   0x3, 0xff3       	MOVFF	r0x03, PRODL
004c68   fff3
004c6a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004c6c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004c6e   f003
004c70   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004c72   f002
004c74   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004c76   f001
004c78   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004c7a   f000
004c7c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004c7e   ffd9
004c80   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analogReference	code
                                           _analogReference:
                                           ;	.line	32; /home/valentin/.icaro/firmware/tmp/analog.c	void analogReference(unsigned char Type)
0051a4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0051a6   ffe5
0051a8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0051aa   ffd9
0051ac   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0051ae   ffe5
0051b0   0e02     movlw   0x2              	MOVLW	0x02
0051b2   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0051b4   f000
                                           ; #	MOVF	r0x00, W
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00543_DS_
                                           ; #	GOTO	_00545_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	34; /home/valentin/.icaro/firmware/tmp/analog.c	if(Type == DEFAULTAN)			//the default analog reference of 5 volts (on 5V Arduino boards) or 3.3 volts (on 3.3V Arduino boards)
0051b6   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ;	.line	35; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON1|=0x00;			//Vref+ = VDD
0051b8   e004     bz      0x51c2           	BZ	_00545_DS_
                                           ;	.line	36; /home/valentin/.icaro/firmware/tmp/analog.c	else if(Type == EXTERNAL)	//the voltage applied to the AREF pin (0 to 5V only) is used as the reference.
0051ba   5000     movf    0, 0, 0          	MOVF	r0x00, W
0051bc   0a01     xorlw   0x1              	XORLW	0x01
0051be   e101     bnz     0x51c2           	BNZ	_00545_DS_
                                           ;	.line	37; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON1|=0x10;			//Vref+ = External source
0051c0   88c1     bsf     0xc1, 0x4, 0     	BSF	_ADCON1, 4
                                           _00545_DS_:
0051c2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0051c4   f000
0051c6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0051c8   ffd9
0051ca   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analog_init	code
                                           _analog_init:
                                           ;	.line	15; /home/valentin/.icaro/firmware/tmp/analog.c	TRISA=TRISA | 0x2F;
00523c   0e2f     movlw   0x2f             	MOVLW	0x2f
00523e   1292     iorwf   0x92, 0x1, 0     	IORWF	_TRISA, F
                                           ;	.line	16; /home/valentin/.icaro/firmware/tmp/analog.c	TRISE=TRISE | 0x07;	
005240   0e07     movlw   0x7              	MOVLW	0x07
005242   1296     iorwf   0x96, 0x1, 0     	IORWF	_TRISE, F
                                           ;	.line	17; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON1=0x07;
005244   6ec1     movwf   0xc1, 0          	MOVWF	_ADCON1
                                           ;	.line	18; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON2=0xBD;
005246   0ebd     movlw   0xbd             	MOVLW	0xbd
005248   6ec0     movwf   0xc0, 0          	MOVWF	_ADCON2
00524a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	289; /home/valentin/.icaro/firmware/tmp/servos.c	if (PIR1bits.TMR1IF) {
004fca   a09e     btfss   0x9e, 0, 0       	BTFSS	_PIR1bits, 0
004fcc   d020     bra     0x500e           	BRA	_00530_DS_
                                           ;	.line	290; /home/valentin/.icaro/firmware/tmp/servos.c	PIR1bits.TMR1IF=0;
004fce   909e     bcf     0x9e, 0, 0       	BCF	_PIR1bits, 0
                                           ;	.line	291; /home/valentin/.icaro/firmware/tmp/servos.c	T1CON=0x00;
004fd0   6acd     clrf    0xcd, 0          	CLRF	_T1CON
004fd2   0102     movlb   0x2              	BANKSEL	_phase
                                           ;	.line	292; /home/valentin/.icaro/firmware/tmp/servos.c	if (phase) {
004fd4   518b     movf    0x8b, 0, 0x1     	MOVF	_phase, W, B
004fd6   e00b     bz      0x4fee           	BZ	_00526_DS_
                                           ;	.line	294; /home/valentin/.icaro/firmware/tmp/servos.c	ServosPulseUp();
004fd8   ec32     call    0x5264, 0        	CALL	_ServosPulseUp
004fda   f029
                                           ;	.line	296; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1H= 0xd3;
004fdc   0ed3     movlw   0xd3             	MOVLW	0xd3
004fde   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	297; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1L= 0x8f;
004fe0   0e8f     movlw   0x8f             	MOVLW	0x8f
004fe2   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ;	.line	299; /home/valentin/.icaro/firmware/tmp/servos.c	T1CON=1;
004fe4   0e01     movlw   0x1              	MOVLW	0x01
004fe6   6ecd     movwf   0xcd, 0          	MOVWF	_T1CON
004fe8   0102     movlb   0x2              	BANKSEL	_phase
                                           ;	.line	300; /home/valentin/.icaro/firmware/tmp/servos.c	phase = 0;
004fea   6b8b     clrf    0x8b, 0x1        	CLRF	_phase, B
004fec   d010     bra     0x500e           	BRA	_00530_DS_
                                           _00526_DS_:
                                           ;	.line	305; /home/valentin/.icaro/firmware/tmp/servos.c	ServosPulseDown();
004fee   ec1d     call    0x4a3a, 0        	CALL	_ServosPulseDown
004ff0   f025
                                           ;	.line	309; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1H= 0x2d;
004ff2   0e2d     movlw   0x2d             	MOVLW	0x2d
004ff4   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	310; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1L= 0x0f;
004ff6   0e0f     movlw   0xf              	MOVLW	0x0f
004ff8   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00524_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
004ffa   0102     movlb   0x2              	BANKSEL	_needreordering
                                           ;	.line	312; /home/valentin/.icaro/firmware/tmp/servos.c	if (needreordering)	
004ffc   518c     movf    0x8c, 0, 0x1     	MOVF	_needreordering, W, B
                                           ;	.line	313; /home/valentin/.icaro/firmware/tmp/servos.c	SortServoTimings();  // This takes more than 1 ms, but it's call only if needed.
004ffe   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
                                           ;	.line	314; /home/valentin/.icaro/firmware/tmp/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
005000   ec5a     call    0x24b4, 0        	CALL	_SortServoTimings
005002   f012
005004   0e21     movlw   0x21             	MOVLW	0x21
005006   6ecd     movwf   0xcd, 0          	MOVWF	_T1CON
                                           ;	.line	315; /home/valentin/.icaro/firmware/tmp/servos.c	phase = 1;  //This indicates that after next interrupt it will start the servos cycle.
005008   0e01     movlw   0x1              	MOVLW	0x01
00500a   0102     movlb   0x2              	BANKSEL	_phase
00500c   6f8b     movwf   0x8b, 0x1        	MOVWF	_phase, B
                                           _00530_DS_:
                                           ;	.line	318; /home/valentin/.icaro/firmware/tmp/servos.c	return;
00500e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	274; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoMaximumPulse(uchar servo)
005010   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005012   ffe5
005014   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005016   ffd9
005018   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00501a   ffe5
00501c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00501e   ffe5
005020   0e02     movlw   0x2              	MOVLW	0x02
005022   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
005024   f000
                                           ;	.line	276; /home/valentin/.icaro/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
005026   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00512_DS_
                                           ; #	GOTO	_00513_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	277; /home/valentin/.icaro/firmware/tmp/servos.c	return;
005028   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           ;	.line	279; /home/valentin/.icaro/firmware/tmp/servos.c	servovalues[servo]=SERVOMAX;  //  250 = 2000 useg pulse
00502a   e20e     bc      0x5048           	BC	_00513_DS_
00502c   6a01     clrf    0x1, 0           	CLRF	r0x01
00502e   0e68     movlw   0x68             	MOVLW	LOW(_servovalues)
005030   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
005032   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
005034   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
005036   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
005038   ffe9
00503a   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00503c   ffea
00503e   0efa     movlw   0xfa             	MOVLW	0xfa
005040   6eef     movwf   0xef, 0          	MOVWF	INDF0
                                           ;	.line	281; /home/valentin/.icaro/firmware/tmp/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
005042   0e01     movlw   0x1              	MOVLW	0x01
005044   0102     movlb   0x2              	BANKSEL	_needreordering
005046   6f8c     movwf   0x8c, 0x1        	MOVWF	_needreordering, B
                                           _00513_DS_:
005048   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00504a   f001
00504c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00504e   f000
005050   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005052   ffd9
005054   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	263; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoMinimumPulse(uchar servo)
0050e0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0050e2   ffe5
0050e4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0050e6   ffd9
0050e8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0050ea   ffe5
0050ec   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0050ee   ffe5
0050f0   0e02     movlw   0x2              	MOVLW	0x02
0050f2   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0050f4   f000
                                           ;	.line	265; /home/valentin/.icaro/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
0050f6   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00500_DS_
                                           ; #	GOTO	_00501_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	266; /home/valentin/.icaro/firmware/tmp/servos.c	return;
0050f8   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           ;	.line	268; /home/valentin/.icaro/firmware/tmp/servos.c	servovalues[servo]=SERVOMIN;  //  1 = 1000 useg pulse
0050fa   e20d     bc      0x5116           	BC	_00501_DS_
0050fc   6a01     clrf    0x1, 0           	CLRF	r0x01
0050fe   0e68     movlw   0x68             	MOVLW	LOW(_servovalues)
005100   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
005102   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
005104   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
005106   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
005108   ffe9
00510a   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00510c   ffea
00510e   0e01     movlw   0x1              	MOVLW	0x01
005110   6eef     movwf   0xef, 0          	MOVWF	INDF0
005112   0102     movlb   0x2              	BANKSEL	_needreordering
                                           ;	.line	270; /home/valentin/.icaro/firmware/tmp/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
005114   6f8c     movwf   0x8c, 0x1        	MOVWF	_needreordering, B
                                           _00501_DS_:
005116   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
005118   f001
00511a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00511c   f000
00511e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005120   ffd9
005122   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoRead	code
                                           _ServoRead:
                                           ;	.line	255; /home/valentin/.icaro/firmware/tmp/servos.c	unsigned char ServoRead(uchar servo)
005056   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005058   ffe5
00505a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00505c   ffd9
00505e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
005060   ffe5
005062   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
005064   ffe5
005066   0e02     movlw   0x2              	MOVLW	0x02
005068   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00506a   f000
                                           ;	.line	257; /home/valentin/.icaro/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
00506c   0e12     movlw   0x12             	MOVLW	0x12
00506e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
005070   e302     bnc     0x5076           	BNC	_00488_DS_
                                           ;	.line	258; /home/valentin/.icaro/firmware/tmp/servos.c	return 0;
005072   6ae8     clrf    0xe8, 0          	CLRF	WREG
005074   d00c     bra     0x508e           	BRA	_00489_DS_
                                           _00488_DS_:
                                           ;	.line	259; /home/valentin/.icaro/firmware/tmp/servos.c	return servovalues[servo];
005076   6a01     clrf    0x1, 0           	CLRF	r0x01
005078   0e68     movlw   0x68             	MOVLW	LOW(_servovalues)
00507a   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
00507c   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
00507e   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
005080   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
005082   ffe9
005084   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
005086   ffea
005088   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
00508a   f000
00508c   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           _00489_DS_:
00508e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
005090   f001
005092   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
005094   f000
005096   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005098   ffd9
00509a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	240; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoWrite(uchar servo, uchar value)
004d62   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004d64   ffe5
004d66   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004d68   ffd9
004d6a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004d6c   ffe5
004d6e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004d70   ffe5
004d72   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004d74   ffe5
004d76   0e02     movlw   0x2              	MOVLW	0x02
004d78   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004d7a   f000
004d7c   0e03     movlw   0x3              	MOVLW	0x03
004d7e   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004d80   f001
                                           ;	.line	242; /home/valentin/.icaro/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
004d82   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00464_DS_
                                           ; #	GOTO	_00469_DS_
                                           ; #	MOVLW	0x01
                                           ;	.line	243; /home/valentin/.icaro/firmware/tmp/servos.c	return;
004d84   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           ;	.line	245; /home/valentin/.icaro/firmware/tmp/servos.c	if(value<SERVOMIN)  //  1 = 1000 useg pulse
004d86   e218     bc      0x4db8           	BC	_00469_DS_
004d88   0e01     movlw   0x1              	MOVLW	0x01
004d8a   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
004d8c   e202     bc      0x4d92           	BC	_00466_DS_
                                           ;	.line	246; /home/valentin/.icaro/firmware/tmp/servos.c	value=SERVOMIN;
004d8e   0e01     movlw   0x1              	MOVLW	0x01
004d90   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           _00466_DS_:
                                           ;	.line	247; /home/valentin/.icaro/firmware/tmp/servos.c	if(value>SERVOMAX) // 250 = 2000 useg pulse
004d92   0efb     movlw   0xfb             	MOVLW	0xfb
004d94   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
004d96   e302     bnc     0x4d9c           	BNC	_00468_DS_
                                           ;	.line	248; /home/valentin/.icaro/firmware/tmp/servos.c	value=SERVOMAX;
004d98   0efa     movlw   0xfa             	MOVLW	0xfa
004d9a   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           _00468_DS_:
                                           ;	.line	249; /home/valentin/.icaro/firmware/tmp/servos.c	servovalues[servo]=value;
004d9c   6a02     clrf    0x2, 0           	CLRF	r0x02
004d9e   0e68     movlw   0x68             	MOVLW	LOW(_servovalues)
004da0   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
004da2   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
004da4   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004da6   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004da8   ffe9
004daa   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
004dac   ffea
004dae   c001     movff   0x1, 0xfef       	MOVFF	r0x01, INDF0
004db0   ffef
                                           ;	.line	251; /home/valentin/.icaro/firmware/tmp/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
004db2   0e01     movlw   0x1              	MOVLW	0x01
004db4   0102     movlb   0x2              	BANKSEL	_needreordering
004db6   6f8c     movwf   0x8c, 0x1        	MOVWF	_needreordering, B
                                           _00469_DS_:
004db8   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004dba   f002
004dbc   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004dbe   f001
004dc0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004dc2   f000
004dc4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004dc6   ffd9
004dc8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	226; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoDetach(uchar pin)
0042ce   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0042d0   ffe5
0042d2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0042d4   ffd9
0042d6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0042d8   ffe5
0042da   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0042dc   ffe5
0042de   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0042e0   ffe5
0042e2   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0042e4   ffe5
0042e6   0e02     movlw   0x2              	MOVLW	0x02
0042e8   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0042ea   f000
                                           ;	.line	228; /home/valentin/.icaro/firmware/tmp/servos.c	if(pin>=18) return;
0042ec   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00437_DS_
                                           ; #	GOTO	_00444_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	230; /home/valentin/.icaro/firmware/tmp/servos.c	if(pin<8){
0042ee   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0042f0   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0042f2   d04c     bra     0x438c           	BRA	_00444_DS_
0042f4   0e08     movlw   0x8              	MOVLW	0x08
0042f6   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0042f8   e218     bc      0x432a           	BC	_00442_DS_
                                           ;	.line	231; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] ^ servomasks[pin];
0042fa   0ed2     movlw   0xd2             	MOVLW	LOW(_servomasks)
0042fc   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0042fe   6e01     movwf   0x1, 0           	MOVWF	r0x01
004300   6a02     clrf    0x2, 0           	CLRF	r0x02
004302   0e23     movlw   0x23             	MOVLW	HIGH(_servomasks)
004304   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004306   6a03     clrf    0x3, 0           	CLRF	r0x03
004308   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
00430a   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
00430c   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
00430e   fff6
004310   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
004312   fff7
004314   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
004316   fff8
004318   0009     tblrd   *+               	TBLRD*+	
00431a   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
00431c   f001
00431e   0102     movlb   0x2              	BANKSEL	_activatedservos
004320   518e     movf    0x8e, 0, 0x1     	MOVF	_activatedservos, W, B
004322   1a01     xorwf   0x1, 0x1, 0      	XORWF	r0x01, F
004324   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
004326   6f8e     movwf   0x8e, 0x1        	MOVWF	_activatedservos, B
004328   d031     bra     0x438c           	BRA	_00444_DS_
                                           _00442_DS_:
                                           ;	.line	232; /home/valentin/.icaro/firmware/tmp/servos.c	} else if (pin>12) {
00432a   0e0d     movlw   0xd              	MOVLW	0x0d
00432c   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00432e   e318     bnc     0x4360           	BNC	_00439_DS_
                                           ;	.line	233; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] ^ servomasks[pin];
004330   0ed2     movlw   0xd2             	MOVLW	LOW(_servomasks)
004332   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
004334   6e01     movwf   0x1, 0           	MOVWF	r0x01
004336   6a02     clrf    0x2, 0           	CLRF	r0x02
004338   0e23     movlw   0x23             	MOVLW	HIGH(_servomasks)
00433a   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00433c   6a03     clrf    0x3, 0           	CLRF	r0x03
00433e   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
004340   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
004342   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
004344   fff6
004346   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
004348   fff7
00434a   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
00434c   fff8
00434e   0009     tblrd   *+               	TBLRD*+	
004350   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
004352   f001
004354   0102     movlb   0x2              	BANKSEL	(_activatedservos + 2)
004356   5190     movf    0x90, 0, 0x1     	MOVF	(_activatedservos + 2), W, B
004358   1a01     xorwf   0x1, 0x1, 0      	XORWF	r0x01, F
00435a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00435c   6f90     movwf   0x90, 0x1        	MOVWF	(_activatedservos + 2), B
00435e   d016     bra     0x438c           	BRA	_00444_DS_
                                           _00439_DS_:
                                           ;	.line	235; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] ^ servomasks[pin];
004360   6a01     clrf    0x1, 0           	CLRF	r0x01
004362   6a02     clrf    0x2, 0           	CLRF	r0x02
004364   0ed2     movlw   0xd2             	MOVLW	LOW(_servomasks)
004366   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
004368   0e23     movlw   0x23             	MOVLW	HIGH(_servomasks)
00436a   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
00436c   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
00436e   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004370   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
004372   fff6
004374   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
004376   fff7
004378   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
00437a   fff8
00437c   0009     tblrd   *+               	TBLRD*+	
00437e   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
004380   f000
004382   0102     movlb   0x2              	BANKSEL	(_activatedservos + 1)
004384   518f     movf    0x8f, 0, 0x1     	MOVF	(_activatedservos + 1), W, B
004386   1a00     xorwf   0, 0x1, 0        	XORWF	r0x00, F
004388   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00438a   6f8f     movwf   0x8f, 0x1        	MOVWF	(_activatedservos + 1), B
                                           _00444_DS_:
00438c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00438e   f003
004390   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004392   f002
004394   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004396   f001
004398   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00439a   f000
00439c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00439e   ffd9
0043a0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	209; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoAttach(uchar pin)
0036f4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0036f6   ffe5
0036f8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0036fa   ffd9
0036fc   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0036fe   ffe5
003700   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003702   ffe5
003704   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003706   ffe5
003708   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00370a   ffe5
00370c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00370e   ffe5
003710   0e02     movlw   0x2              	MOVLW	0x02
003712   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003714   f000
                                           ;	.line	211; /home/valentin/.icaro/firmware/tmp/servos.c	if(pin>=18) return;
003716   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00409_DS_
                                           ; #	GOTO	_00416_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	213; /home/valentin/.icaro/firmware/tmp/servos.c	if(pin<8){
003718   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00371a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00371c   d070     bra     0x37fe           	BRA	_00416_DS_
00371e   0e08     movlw   0x8              	MOVLW	0x08
003720   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
003722   e224     bc      0x376c           	BC	_00414_DS_
                                           ;	.line	214; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] | servomasks[pin];  // list pin as servo driver.
003724   0ed2     movlw   0xd2             	MOVLW	LOW(_servomasks)
003726   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003728   6e01     movwf   0x1, 0           	MOVWF	r0x01
00372a   6a02     clrf    0x2, 0           	CLRF	r0x02
00372c   0e23     movlw   0x23             	MOVLW	HIGH(_servomasks)
00372e   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003730   6a03     clrf    0x3, 0           	CLRF	r0x03
003732   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
003734   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
003736   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
003738   fff6
00373a   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
00373c   fff7
00373e   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
003740   fff8
003742   0009     tblrd   *+               	TBLRD*+	
003744   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
003746   f004
003748   0102     movlb   0x2              	BANKSEL	_activatedservos
00374a   518e     movf    0x8e, 0, 0x1     	MOVF	_activatedservos, W, B
00374c   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
00374e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003750   6f8e     movwf   0x8e, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	215; /home/valentin/.icaro/firmware/tmp/servos.c	TRISB = TRISB & (255 - servomasks[pin]); // set as output pin
003752   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
003754   fff6
003756   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
003758   fff7
00375a   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
00375c   fff8
00375e   0009     tblrd   *+               	TBLRD*+	
003760   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
003762   f001
003764   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003766   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003768   1693     andwf   0x93, 0x1, 0     	ANDWF	_TRISB, F
00376a   d049     bra     0x37fe           	BRA	_00416_DS_
                                           _00414_DS_:
                                           ;	.line	216; /home/valentin/.icaro/firmware/tmp/servos.c	} else if (pin>12) {
00376c   0e0d     movlw   0xd              	MOVLW	0x0d
00376e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
003770   e324     bnc     0x37ba           	BNC	_00411_DS_
                                           ;	.line	217; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] | servomasks[pin];  // list pin as servo driver.
003772   0ed2     movlw   0xd2             	MOVLW	LOW(_servomasks)
003774   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003776   6e01     movwf   0x1, 0           	MOVWF	r0x01
003778   6a02     clrf    0x2, 0           	CLRF	r0x02
00377a   0e23     movlw   0x23             	MOVLW	HIGH(_servomasks)
00377c   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00377e   6a03     clrf    0x3, 0           	CLRF	r0x03
003780   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
003782   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
003784   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
003786   fff6
003788   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
00378a   fff7
00378c   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
00378e   fff8
003790   0009     tblrd   *+               	TBLRD*+	
003792   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
003794   f004
003796   0102     movlb   0x2              	BANKSEL	(_activatedservos + 2)
003798   5190     movf    0x90, 0, 0x1     	MOVF	(_activatedservos + 2), W, B
00379a   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
00379c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
00379e   6f90     movwf   0x90, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	218; /home/valentin/.icaro/firmware/tmp/servos.c	TRISA = TRISA & (255 - servomasks[pin]); // set as output pin
0037a0   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
0037a2   fff6
0037a4   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
0037a6   fff7
0037a8   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
0037aa   fff8
0037ac   0009     tblrd   *+               	TBLRD*+	
0037ae   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
0037b0   f001
0037b2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0037b4   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
0037b6   1692     andwf   0x92, 0x1, 0     	ANDWF	_TRISA, F
0037b8   d022     bra     0x37fe           	BRA	_00416_DS_
                                           _00411_DS_:
                                           ;	.line	220; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] | servomasks[pin];  // list pin as servo driver.
0037ba   6a01     clrf    0x1, 0           	CLRF	r0x01
0037bc   6a02     clrf    0x2, 0           	CLRF	r0x02
0037be   0ed2     movlw   0xd2             	MOVLW	LOW(_servomasks)
0037c0   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0037c2   0e23     movlw   0x23             	MOVLW	HIGH(_servomasks)
0037c4   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0037c6   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
0037c8   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0037ca   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
0037cc   fff6
0037ce   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
0037d0   fff7
0037d2   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
0037d4   fff8
0037d6   0009     tblrd   *+               	TBLRD*+	
0037d8   cff5     movff   0xff5, 0x3       	MOVFF	TABLAT, r0x03
0037da   f003
0037dc   0102     movlb   0x2              	BANKSEL	(_activatedservos + 1)
0037de   518f     movf    0x8f, 0, 0x1     	MOVF	(_activatedservos + 1), W, B
0037e0   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
0037e2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
0037e4   6f8f     movwf   0x8f, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	221; /home/valentin/.icaro/firmware/tmp/servos.c	TRISC = TRISC & (255 - servomasks[pin]); // set as output pin
0037e6   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
0037e8   fff6
0037ea   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
0037ec   fff7
0037ee   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
0037f0   fff8
0037f2   0009     tblrd   *+               	TBLRD*+	
0037f4   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
0037f6   f000
0037f8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0037fa   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0037fc   1694     andwf   0x94, 0x1, 0     	ANDWF	_TRISC, F
                                           _00416_DS_:
0037fe   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003800   f004
003802   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003804   f003
003806   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003808   f002
00380a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00380c   f001
00380e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003810   f000
003812   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003814   ffd9
003816   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	125; /home/valentin/.icaro/firmware/tmp/servos.c	static void SortServoTimings()
0024b4   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0024b6   ffe5
0024b8   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0024ba   ffe5
0024bc   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0024be   ffe5
0024c0   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0024c2   ffe5
0024c4   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0024c6   ffe5
0024c8   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0024ca   ffe5
0024cc   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0024ce   ffe5
0024d0   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0024d2   ffe5
0024d4   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
0024d6   ffe5
0024d8   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
0024da   ffe5
0024dc   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
0024de   ffe5
0024e0   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
0024e2   ffe5
0024e4   c00c     movff   0xc, 0xfe5       	MOVFF	r0x0c, POSTDEC1
0024e6   ffe5
0024e8   0102     movlb   0x2              	BANKSEL	_SortServoTimings_mascaratotal_1_27
                                           ;	.line	132; /home/valentin/.icaro/firmware/tmp/servos.c	uchar mascaratotal[3]={0x00,0x00,0x00};
0024ea   6ba1     clrf    0xa1, 0x1        	CLRF	_SortServoTimings_mascaratotal_1_27, B
                                           ; removed redundant BANKSEL
0024ec   6ba2     clrf    0xa2, 0x1        	CLRF	(_SortServoTimings_mascaratotal_1_27 + 1), B
                                           ; removed redundant BANKSEL
0024ee   6ba3     clrf    0xa3, 0x1        	CLRF	(_SortServoTimings_mascaratotal_1_27 + 2), B
                                           ;	.line	135; /home/valentin/.icaro/firmware/tmp/servos.c	for(t=0;t<18;t++){
0024f0   6a00     clrf    0, 0             	CLRF	r0x00
                                           _00325_DS_:
                                           ;	.line	136; /home/valentin/.icaro/firmware/tmp/servos.c	timings[timevalue][t]=255;
0024f2   0e36     movlw   0x36             	MOVLW	LOW(_timings + 54)
0024f4   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0024f6   6e01     movwf   0x1, 0           	MOVWF	r0x01
0024f8   6a02     clrf    0x2, 0           	CLRF	r0x02
0024fa   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
0024fc   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0024fe   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
002500   ffe9
002502   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
002504   ffea
002506   68ef     setf    0xef, 0          	SETF	INDF0
                                           ;	.line	138; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t]=0x00;
002508   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
00250a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00250c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00250e   6a02     clrf    0x2, 0           	CLRF	r0x02
002510   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
002512   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002514   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
002516   ffe9
002518   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00251a   ffea
00251c   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	139; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t]=0x00;
00251e   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
002520   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002522   6e01     movwf   0x1, 0           	MOVWF	r0x01
002524   6a02     clrf    0x2, 0           	CLRF	r0x02
002526   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
002528   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00252a   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00252c   ffe9
00252e   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
002530   ffea
002532   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	135; /home/valentin/.icaro/firmware/tmp/servos.c	for(t=0;t<18;t++){
002534   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002536   0e12     movlw   0x12             	MOVLW	0x12
002538   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00253a   e3db     bnc     0x24f2           	BNC	_00325_DS_
                                           ;	.line	142; /home/valentin/.icaro/firmware/tmp/servos.c	totalservos=0;
00253c   6a00     clrf    0, 0             	CLRF	r0x00
                                           ;	.line	144; /home/valentin/.icaro/firmware/tmp/servos.c	while(totalservos<18) {
00253e   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00322_DS_:
002540   0e12     movlw   0x12             	MOVLW	0x12
002542   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002544   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002546   d194     bra     0x2870           	BRA	_00324_DS_
                                           ;	.line	145; /home/valentin/.icaro/firmware/tmp/servos.c	numservos=1;
002548   0e01     movlw   0x1              	MOVLW	0x01
00254a   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	146; /home/valentin/.icaro/firmware/tmp/servos.c	for(s=0;s<18;s++) { 
00254c   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _00327_DS_:
                                           ;	.line	148; /home/valentin/.icaro/firmware/tmp/servos.c	if (s<8){
00254e   0e08     movlw   0x8              	MOVLW	0x08
002550   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
002552   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002554   d061     bra     0x2618           	BRA	_00319_DS_
                                           ;	.line	149; /home/valentin/.icaro/firmware/tmp/servos.c	if (servomasks[s] & mascaratotal[MaskPort_B] & activatedservos[MaskPort_B]){
002556   0ed2     movlw   0xd2             	MOVLW	LOW(_servomasks)
002558   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
00255a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00255c   6a05     clrf    0x5, 0           	CLRF	r0x05
00255e   0e23     movlw   0x23             	MOVLW	HIGH(_servomasks)
002560   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
002562   6a06     clrf    0x6, 0           	CLRF	r0x06
002564   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
002566   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002568   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
00256a   fff6
00256c   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
00256e   fff7
002570   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002572   fff8
002574   0009     tblrd   *+               	TBLRD*+	
002576   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002578   f004
00257a   0102     movlb   0x2              	BANKSEL	_SortServoTimings_mascaratotal_1_27
00257c   51a1     movf    0xa1, 0, 0x1     	MOVF	_SortServoTimings_mascaratotal_1_27, W, B
00257e   1604     andwf   0x4, 0x1, 0      	ANDWF	r0x04, F
002580   0102     movlb   0x2              	BANKSEL	_activatedservos
002582   518e     movf    0x8e, 0, 0x1     	MOVF	_activatedservos, W, B
002584   1604     andwf   0x4, 0x1, 0      	ANDWF	r0x04, F
002586   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002588   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
00258a   d148     bra     0x281c           	BRA	_00328_DS_
                                           ;	.line	151; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] < timings[timevalue][t]){
00258c   0e68     movlw   0x68             	MOVLW	LOW(_servovalues)
00258e   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
002590   6e04     movwf   0x4, 0           	MOVWF	r0x04
002592   6a05     clrf    0x5, 0           	CLRF	r0x05
002594   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
002596   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
002598   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
00259a   ffe9
00259c   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
00259e   ffea
0025a0   cfef     movff   0xfef, 0x4       	MOVFF	INDF0, r0x04
0025a2   f004
0025a4   0e36     movlw   0x36             	MOVLW	LOW(_timings + 54)
0025a6   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0025a8   6e05     movwf   0x5, 0           	MOVWF	r0x05
0025aa   6a06     clrf    0x6, 0           	CLRF	r0x06
0025ac   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
0025ae   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0025b0   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0025b2   ffe9
0025b4   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
0025b6   ffea
0025b8   cfef     movff   0xfef, 0x7       	MOVFF	INDF0, r0x07
0025ba   f007
0025bc   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0025be   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
0025c0   e21f     bc      0x2600           	BC	_00294_DS_
                                           ;	.line	152; /home/valentin/.icaro/firmware/tmp/servos.c	timings[timevalue][t]=servovalues[s];
0025c2   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0025c4   ffe9
0025c6   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
0025c8   ffea
0025ca   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
0025cc   ffef
                                           ;	.line	154; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t]=0x00;
0025ce   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
0025d0   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0025d2   6e07     movwf   0x7, 0           	MOVWF	r0x07
0025d4   6a08     clrf    0x8, 0           	CLRF	r0x08
0025d6   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
0025d8   2208     addwfc  0x8, 0x1, 0      	ADDWFC	r0x08, F
0025da   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
0025dc   ffe9
0025de   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
0025e0   ffea
0025e2   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	155; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t]=0x00;
0025e4   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
0025e6   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0025e8   6e07     movwf   0x7, 0           	MOVWF	r0x07
0025ea   6a08     clrf    0x8, 0           	CLRF	r0x08
0025ec   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
0025ee   2208     addwfc  0x8, 0x1, 0      	ADDWFC	r0x08, F
0025f0   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
0025f2   ffe9
0025f4   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
0025f6   ffea
0025f8   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	156; /home/valentin/.icaro/firmware/tmp/servos.c	numservos=1;
0025fa   0e01     movlw   0x1              	MOVLW	0x01
0025fc   6e02     movwf   0x2, 0           	MOVWF	r0x02
0025fe   d10e     bra     0x281c           	BRA	_00328_DS_
                                           _00294_DS_:
                                           ;	.line	158; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] == timings[timevalue][t]){
002600   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
002602   ffe9
002604   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
002606   ffea
002608   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
00260a   f005
00260c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00260e   1805     xorwf   0x5, 0, 0        	XORWF	r0x05, W
002610   e001     bz      0x2614           	BZ	_00391_DS_
002612   d104     bra     0x281c           	BRA	_00328_DS_
                                           _00391_DS_:
                                           ;	.line	160; /home/valentin/.icaro/firmware/tmp/servos.c	numservos++;
002614   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
002616   d102     bra     0x281c           	BRA	_00328_DS_
                                           _00319_DS_:
                                           ;	.line	164; /home/valentin/.icaro/firmware/tmp/servos.c	else if (s>12){
002618   0e0d     movlw   0xd              	MOVLW	0x0d
00261a   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
00261c   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
00261e   d080     bra     0x2720           	BRA	_00316_DS_
                                           ;	.line	165; /home/valentin/.icaro/firmware/tmp/servos.c	if (servomasks[s] & mascaratotal[MaskPort_A] & activatedservos[MaskPort_A]){
002620   0ed2     movlw   0xd2             	MOVLW	LOW(_servomasks)
002622   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
002624   6e04     movwf   0x4, 0           	MOVWF	r0x04
002626   6a05     clrf    0x5, 0           	CLRF	r0x05
002628   0e23     movlw   0x23             	MOVLW	HIGH(_servomasks)
00262a   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
00262c   6a06     clrf    0x6, 0           	CLRF	r0x06
00262e   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
002630   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002632   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002634   fff6
002636   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002638   fff7
00263a   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00263c   fff8
00263e   0009     tblrd   *+               	TBLRD*+	
002640   cff5     movff   0xff5, 0x7       	MOVFF	TABLAT, r0x07
002642   f007
002644   0102     movlb   0x2              	BANKSEL	(_SortServoTimings_mascaratotal_1_27 + 2)
002646   51a3     movf    0xa3, 0, 0x1     	MOVF	(_SortServoTimings_mascaratotal_1_27 + 2), W, B
002648   1407     andwf   0x7, 0, 0        	ANDWF	r0x07, W
00264a   6e08     movwf   0x8, 0           	MOVWF	r0x08
00264c   0102     movlb   0x2              	BANKSEL	(_activatedservos + 2)
00264e   5190     movf    0x90, 0, 0x1     	MOVF	(_activatedservos + 2), W, B
002650   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
002652   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
002654   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
002656   d0e2     bra     0x281c           	BRA	_00328_DS_
                                           ;	.line	167; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002658   0e68     movlw   0x68             	MOVLW	LOW(_servovalues)
00265a   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
00265c   6e08     movwf   0x8, 0           	MOVWF	r0x08
00265e   6a09     clrf    0x9, 0           	CLRF	r0x09
002660   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
002662   2209     addwfc  0x9, 0x1, 0      	ADDWFC	r0x09, F
002664   c008     movff   0x8, 0xfe9       	MOVFF	r0x08, FSR0L
002666   ffe9
002668   c009     movff   0x9, 0xfea       	MOVFF	r0x09, FSR0H
00266a   ffea
00266c   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
00266e   f008
002670   0e36     movlw   0x36             	MOVLW	LOW(_timings + 54)
002672   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002674   6e09     movwf   0x9, 0           	MOVWF	r0x09
002676   6a0a     clrf    0xa, 0           	CLRF	r0x0a
002678   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
00267a   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
00267c   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
00267e   ffe9
002680   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
002682   ffea
002684   cfef     movff   0xfef, 0xb       	MOVFF	INDF0, r0x0b
002686   f00b
002688   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
00268a   5c08     subwf   0x8, 0, 0        	SUBWF	r0x08, W
00268c   e229     bc      0x26e0           	BC	_00302_DS_
                                           ;	.line	168; /home/valentin/.icaro/firmware/tmp/servos.c	timings[timevalue][t]=servovalues[s];
00268e   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002690   ffe9
002692   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
002694   ffea
002696   c008     movff   0x8, 0xfef       	MOVFF	r0x08, INDF0
002698   ffef
                                           ;	.line	170; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t]=0x00;
00269a   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
00269c   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
00269e   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0026a0   6a0c     clrf    0xc, 0           	CLRF	r0x0c
0026a2   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
0026a4   220c     addwfc  0xc, 0x1, 0      	ADDWFC	r0x0c, F
0026a6   c00b     movff   0xb, 0xfe9       	MOVFF	r0x0b, FSR0L
0026a8   ffe9
0026aa   c00c     movff   0xc, 0xfea       	MOVFF	r0x0c, FSR0H
0026ac   ffea
0026ae   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	171; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t]=servomasks[s];
0026b0   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
0026b2   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0026b4   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0026b6   6a0c     clrf    0xc, 0           	CLRF	r0x0c
0026b8   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
0026ba   220c     addwfc  0xc, 0x1, 0      	ADDWFC	r0x0c, F
0026bc   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0026be   fff6
0026c0   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0026c2   fff7
0026c4   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0026c6   fff8
0026c8   0009     tblrd   *+               	TBLRD*+	
0026ca   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0026cc   f004
0026ce   c00b     movff   0xb, 0xfe9       	MOVFF	r0x0b, FSR0L
0026d0   ffe9
0026d2   c00c     movff   0xc, 0xfea       	MOVFF	r0x0c, FSR0H
0026d4   ffea
0026d6   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
0026d8   ffef
                                           ;	.line	172; /home/valentin/.icaro/firmware/tmp/servos.c	numservos=1;
0026da   0e01     movlw   0x1              	MOVLW	0x01
0026dc   6e02     movwf   0x2, 0           	MOVWF	r0x02
0026de   d09e     bra     0x281c           	BRA	_00328_DS_
                                           _00302_DS_:
                                           ;	.line	174; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] == timings[timevalue][t]){
0026e0   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
0026e2   ffe9
0026e4   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
0026e6   ffea
0026e8   cfef     movff   0xfef, 0x9       	MOVFF	INDF0, r0x09
0026ea   f009
0026ec   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0026ee   1809     xorwf   0x9, 0, 0        	XORWF	r0x09, W
0026f0   e001     bz      0x26f4           	BZ	_00396_DS_
0026f2   d094     bra     0x281c           	BRA	_00328_DS_
                                           _00396_DS_:
                                           ;	.line	175; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t] |= servomasks[s];
0026f4   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
0026f6   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0026f8   6e04     movwf   0x4, 0           	MOVWF	r0x04
0026fa   6a05     clrf    0x5, 0           	CLRF	r0x05
0026fc   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
0026fe   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
002700   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002702   ffe9
002704   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002706   ffea
002708   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
00270a   f006
00270c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00270e   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
002710   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002712   ffe9
002714   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002716   ffea
002718   c007     movff   0x7, 0xfef       	MOVFF	r0x07, INDF0
00271a   ffef
                                           ;	.line	176; /home/valentin/.icaro/firmware/tmp/servos.c	numservos++;
00271c   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
00271e   d07e     bra     0x281c           	BRA	_00328_DS_
                                           _00316_DS_:
                                           ;	.line	181; /home/valentin/.icaro/firmware/tmp/servos.c	if (servomasks[s] & mascaratotal[MaskPort_C] & activatedservos[MaskPort_C]){ 
002720   0ed2     movlw   0xd2             	MOVLW	LOW(_servomasks)
002722   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
002724   6e04     movwf   0x4, 0           	MOVWF	r0x04
002726   6a05     clrf    0x5, 0           	CLRF	r0x05
002728   0e23     movlw   0x23             	MOVLW	HIGH(_servomasks)
00272a   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
00272c   6a06     clrf    0x6, 0           	CLRF	r0x06
00272e   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
002730   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002732   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002734   fff6
002736   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002738   fff7
00273a   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00273c   fff8
00273e   0009     tblrd   *+               	TBLRD*+	
002740   cff5     movff   0xff5, 0x7       	MOVFF	TABLAT, r0x07
002742   f007
002744   0102     movlb   0x2              	BANKSEL	(_SortServoTimings_mascaratotal_1_27 + 1)
002746   51a2     movf    0xa2, 0, 0x1     	MOVF	(_SortServoTimings_mascaratotal_1_27 + 1), W, B
002748   1407     andwf   0x7, 0, 0        	ANDWF	r0x07, W
00274a   6e08     movwf   0x8, 0           	MOVWF	r0x08
00274c   0102     movlb   0x2              	BANKSEL	(_activatedservos + 1)
00274e   518f     movf    0x8f, 0, 0x1     	MOVF	(_activatedservos + 1), W, B
002750   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
002752   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
002754   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
002756   d062     bra     0x281c           	BRA	_00328_DS_
                                           ;	.line	183; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002758   0e68     movlw   0x68             	MOVLW	LOW(_servovalues)
00275a   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
00275c   6e08     movwf   0x8, 0           	MOVWF	r0x08
00275e   6a09     clrf    0x9, 0           	CLRF	r0x09
002760   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
002762   2209     addwfc  0x9, 0x1, 0      	ADDWFC	r0x09, F
002764   c008     movff   0x8, 0xfe9       	MOVFF	r0x08, FSR0L
002766   ffe9
002768   c009     movff   0x9, 0xfea       	MOVFF	r0x09, FSR0H
00276a   ffea
00276c   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
00276e   f008
002770   0e36     movlw   0x36             	MOVLW	LOW(_timings + 54)
002772   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002774   6e09     movwf   0x9, 0           	MOVWF	r0x09
002776   6a0a     clrf    0xa, 0           	CLRF	r0x0a
002778   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
00277a   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
00277c   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
00277e   ffe9
002780   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
002782   ffea
002784   cfef     movff   0xfef, 0xb       	MOVFF	INDF0, r0x0b
002786   f00b
002788   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
00278a   5c08     subwf   0x8, 0, 0        	SUBWF	r0x08, W
00278c   e229     bc      0x27e0           	BC	_00310_DS_
                                           ;	.line	184; /home/valentin/.icaro/firmware/tmp/servos.c	timings[timevalue][t]=servovalues[s];
00278e   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002790   ffe9
002792   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
002794   ffea
002796   c008     movff   0x8, 0xfef       	MOVFF	r0x08, INDF0
002798   ffef
                                           ;	.line	186; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t]=servomasks[s];
00279a   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
00279c   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
00279e   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0027a0   6a0c     clrf    0xc, 0           	CLRF	r0x0c
0027a2   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
0027a4   220c     addwfc  0xc, 0x1, 0      	ADDWFC	r0x0c, F
0027a6   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0027a8   fff6
0027aa   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0027ac   fff7
0027ae   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0027b0   fff8
0027b2   0009     tblrd   *+               	TBLRD*+	
0027b4   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0027b6   f004
0027b8   c00b     movff   0xb, 0xfe9       	MOVFF	r0x0b, FSR0L
0027ba   ffe9
0027bc   c00c     movff   0xc, 0xfea       	MOVFF	r0x0c, FSR0H
0027be   ffea
0027c0   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
0027c2   ffef
                                           ;	.line	187; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t]=0x00;
0027c4   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
0027c6   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0027c8   6e04     movwf   0x4, 0           	MOVWF	r0x04
0027ca   6a05     clrf    0x5, 0           	CLRF	r0x05
0027cc   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
0027ce   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
0027d0   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
0027d2   ffe9
0027d4   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
0027d6   ffea
0027d8   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	188; /home/valentin/.icaro/firmware/tmp/servos.c	numservos=1;
0027da   0e01     movlw   0x1              	MOVLW	0x01
0027dc   6e02     movwf   0x2, 0           	MOVWF	r0x02
0027de   d01e     bra     0x281c           	BRA	_00328_DS_
                                           _00310_DS_:
                                           ;	.line	190; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] == timings [timevalue][t]){
0027e0   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
0027e2   ffe9
0027e4   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
0027e6   ffea
0027e8   cfef     movff   0xfef, 0x9       	MOVFF	INDF0, r0x09
0027ea   f009
0027ec   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0027ee   1809     xorwf   0x9, 0, 0        	XORWF	r0x09, W
0027f0   e115     bnz     0x281c           	BNZ	_00328_DS_
                                           ;	.line	191; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t] |= servomasks[s];
0027f2   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
0027f4   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0027f6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0027f8   6a05     clrf    0x5, 0           	CLRF	r0x05
0027fa   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
0027fc   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
0027fe   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002800   ffe9
002802   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002804   ffea
002806   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
002808   f006
00280a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00280c   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
00280e   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002810   ffe9
002812   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002814   ffea
002816   c007     movff   0x7, 0xfef       	MOVFF	r0x07, INDF0
002818   ffef
                                           ;	.line	192; /home/valentin/.icaro/firmware/tmp/servos.c	numservos++;
00281a   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
                                           _00328_DS_:
                                           ;	.line	146; /home/valentin/.icaro/firmware/tmp/servos.c	for(s=0;s<18;s++) { 
00281c   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
00281e   0e12     movlw   0x12             	MOVLW	0x12
002820   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
002822   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
002824   d694     bra     0x254e           	BRA	_00327_DS_
                                           ;	.line	198; /home/valentin/.icaro/firmware/tmp/servos.c	mascaratotal[MaskPort_C] |= timings[MaskPort_C][t];
002826   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
002828   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
00282a   6e03     movwf   0x3, 0           	MOVWF	r0x03
00282c   6a04     clrf    0x4, 0           	CLRF	r0x04
00282e   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
002830   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002832   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
002834   ffe9
002836   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
002838   ffea
00283a   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
00283c   f003
00283e   0102     movlb   0x2              	BANKSEL	(_SortServoTimings_mascaratotal_1_27 + 1)
002840   51a2     movf    0xa2, 0, 0x1     	MOVF	(_SortServoTimings_mascaratotal_1_27 + 1), W, B
002842   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
002844   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002846   6fa2     movwf   0xa2, 0x1        	MOVWF	(_SortServoTimings_mascaratotal_1_27 + 1), B
                                           ;	.line	199; /home/valentin/.icaro/firmware/tmp/servos.c	mascaratotal[MaskPort_A] |= timings[MaskPort_A][t];
002848   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
00284a   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
00284c   6e03     movwf   0x3, 0           	MOVWF	r0x03
00284e   6a04     clrf    0x4, 0           	CLRF	r0x04
002850   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
002852   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002854   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
002856   ffe9
002858   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
00285a   ffea
00285c   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
00285e   f003
                                           ; removed redundant BANKSEL
002860   51a3     movf    0xa3, 0, 0x1     	MOVF	(_SortServoTimings_mascaratotal_1_27 + 2), W, B
002862   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
002864   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002866   6fa3     movwf   0xa3, 0x1        	MOVWF	(_SortServoTimings_mascaratotal_1_27 + 2), B
                                           ;	.line	200; /home/valentin/.icaro/firmware/tmp/servos.c	totalservos += numservos;
002868   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00286a   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ;	.line	201; /home/valentin/.icaro/firmware/tmp/servos.c	t++;
00286c   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
00286e   d668     bra     0x2540           	BRA	_00322_DS_
                                           _00324_DS_:
002870   0102     movlb   0x2              	BANKSEL	_needreordering
                                           ;	.line	204; /home/valentin/.icaro/firmware/tmp/servos.c	needreordering=0;  // This indicates that servo timings is ordered.	
002872   6b8c     clrf    0x8c, 0x1        	CLRF	_needreordering, B
002874   cfe4     movff   0xfe4, 0xc       	MOVFF	PREINC1, r0x0c
002876   f00c
002878   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
00287a   f00b
00287c   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
00287e   f00a
002880   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
002882   f009
002884   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
002886   f008
002888   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
00288a   f007
00288c   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
00288e   f006
002890   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002892   f005
002894   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002896   f004
002898   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00289a   f003
00289c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00289e   f002
0028a0   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0028a2   f001
0028a4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0028a6   f000
0028a8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseUp	code
                                           _ServosPulseUp:
                                           ;	.line	120; /home/valentin/.icaro/firmware/tmp/servos.c	PORTC = activatedservos[MaskPort_C] & 0xFF;
005264   c28f     movff   0x28f, 0xf82     	MOVFF	(_activatedservos + 1), _PORTC
005266   ff82
                                           ;	.line	121; /home/valentin/.icaro/firmware/tmp/servos.c	PORTA = activatedservos[MaskPort_A] & 0xFF;	
005268   c290     movff   0x290, 0xf80     	MOVFF	(_activatedservos + 2), _PORTA
00526a   ff80
00526c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	92; /home/valentin/.icaro/firmware/tmp/servos.c	static void ServosPulseDown()
004a3a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004a3c   ffe5
004a3e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004a40   ffd9
004a42   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004a44   ffe5
004a46   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004a48   ffe5
004a4a   0102     movlb   0x2              	BANKSEL	_timingindex
                                           ;	.line	94; /home/valentin/.icaro/firmware/tmp/servos.c	timingindex = 0;
004a4c   6bb2     clrf    0xb2, 0x1        	CLRF	_timingindex, B
004a4e   0102     movlb   0x2              	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/.icaro/firmware/tmp/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
004a50   6b8d     clrf    0x8d, 0x1        	CLRF	_timedivision, B
                                           _00266_DS_:
                                           ;	.line	97; /home/valentin/.icaro/firmware/tmp/servos.c	if (timings[timevalue][timingindex] == timedivision){
004a52   c2b2     movff   0x2b2, 0         	MOVFF	_timingindex, r0x00
004a54   f000
004a56   6a01     clrf    0x1, 0           	CLRF	r0x01
004a58   0e36     movlw   0x36             	MOVLW	LOW(_timings + 54)
004a5a   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
004a5c   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
004a5e   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
004a60   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004a62   ffe9
004a64   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
004a66   ffea
004a68   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
004a6a   f000
004a6c   5000     movf    0, 0, 0          	MOVF	r0x00, W
004a6e   0102     movlb   0x2              	BANKSEL	_timedivision
004a70   198d     xorwf   0x8d, 0, 0x1     	XORWF	_timedivision, W, B
004a72   e120     bnz     0x4ab4           	BNZ	_00264_DS_
                                           ;	.line	99; /home/valentin/.icaro/firmware/tmp/servos.c	PORTC = PORTC ^ timings[MaskPort_C][timingindex];
004a74   c2b2     movff   0x2b2, 0         	MOVFF	_timingindex, r0x00
004a76   f000
004a78   6a01     clrf    0x1, 0           	CLRF	r0x01
004a7a   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
004a7c   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
004a7e   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
004a80   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
004a82   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004a84   ffe9
004a86   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
004a88   ffea
004a8a   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
004a8c   f000
004a8e   5000     movf    0, 0, 0          	MOVF	r0x00, W
004a90   1a82     xorwf   0x82, 0x1, 0     	XORWF	_PORTC, F
                                           ;	.line	100; /home/valentin/.icaro/firmware/tmp/servos.c	PORTA = PORTA ^ timings[MaskPort_A][timingindex];
004a92   c2b2     movff   0x2b2, 0         	MOVFF	_timingindex, r0x00
004a94   f000
004a96   6a01     clrf    0x1, 0           	CLRF	r0x01
004a98   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
004a9a   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
004a9c   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
004a9e   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
004aa0   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004aa2   ffe9
004aa4   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
004aa6   ffea
004aa8   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
004aaa   f000
004aac   5000     movf    0, 0, 0          	MOVF	r0x00, W
004aae   1a80     xorwf   0x80, 0x1, 0     	XORWF	_PORTA, F
004ab0   0102     movlb   0x2              	BANKSEL	_timingindex
                                           ;	.line	101; /home/valentin/.icaro/firmware/tmp/servos.c	timingindex++;
004ab2   2bb2     incf    0xb2, 0x1, 0x1   	INCF	_timingindex, F, B
                                           _00264_DS_:
004ab4   0e0c     movlw   0xc              	movlw 12
004ab6   6fac     movwf   0xac, 0x1        	movwf _loopvar
                                           bucle:
004ab8   0000     nop                      	NOP
004aba   2fac     decfsz  0xac, 0x1, 0x1   	decfsz _loopvar,1
004abc   ef5c     goto    0x4ab8           	goto bucle
004abe   f025
                                           	
004ac0   0102     movlb   0x2              	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/.icaro/firmware/tmp/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
004ac2   2b8d     incf    0x8d, 0x1, 0x1   	INCF	_timedivision, F, B
004ac4   0efb     movlw   0xfb             	MOVLW	0xfb
                                           ; removed redundant BANKSEL
004ac6   5d8d     subwf   0x8d, 0, 0x1     	SUBWF	_timedivision, W, B
004ac8   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
004aca   d7c3     bra     0x4a52           	BRA	_00266_DS_
004acc   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004ace   f001
004ad0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004ad2   f000
004ad4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004ad6   ffd9
004ad8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_init	code
                                           _servos_init:
                                           ;	.line	71; /home/valentin/.icaro/firmware/tmp/servos.c	void servos_init()
004f82   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004f84   ffe5
004f86   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004f88   ffe5
004f8a   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004f8c   ffe5
                                           ;	.line	75; /home/valentin/.icaro/firmware/tmp/servos.c	for(a=0;a<18;a++) servovalues[a]=255;
004f8e   6a00     clrf    0, 0             	CLRF	r0x00
                                           _00247_DS_:
004f90   0e68     movlw   0x68             	MOVLW	LOW(_servovalues)
004f92   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
004f94   6e01     movwf   0x1, 0           	MOVWF	r0x01
004f96   6a02     clrf    0x2, 0           	CLRF	r0x02
004f98   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
004f9a   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004f9c   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
004f9e   ffe9
004fa0   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
004fa2   ffea
004fa4   68ef     setf    0xef, 0          	SETF	INDF0
004fa6   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
004fa8   0e12     movlw   0x12             	MOVLW	0x12
004faa   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
004fac   e3f1     bnc     0x4f90           	BNC	_00247_DS_
                                           ;	.line	78; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1H=0xFF;
004fae   68cf     setf    0xcf, 0          	SETF	_TMR1H
                                           ;	.line	79; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1L=0x00;
004fb0   6ace     clrf    0xce, 0          	CLRF	_TMR1L
                                           ;	.line	81; /home/valentin/.icaro/firmware/tmp/servos.c	T1CON=0x01;
004fb2   0e01     movlw   0x1              	MOVLW	0x01
004fb4   6ecd     movwf   0xcd, 0          	MOVWF	_T1CON
                                           ;	.line	83; /home/valentin/.icaro/firmware/tmp/servos.c	PIE1bits.TMR1IE=1;
004fb6   809d     bsf     0x9d, 0, 0       	BSF	_PIE1bits, 0
                                           ;	.line	85; /home/valentin/.icaro/firmware/tmp/servos.c	INTCONbits.PEIE=1;
004fb8   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	87; /home/valentin/.icaro/firmware/tmp/servos.c	INTCONbits.GIE=1;
004fba   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
004fbc   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004fbe   f002
004fc0   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004fc2   f001
004fc4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004fc6   f000
004fc8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pinmode	code
                                           _pinmode:
                                           ;	.line	69; /home/valentin/.icaro/firmware/tmp/digitalw.c	void pinmode(int input, int state)
0028aa   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0028ac   ffe5
0028ae   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0028b0   ffd9
0028b2   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0028b4   ffe5
0028b6   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0028b8   ffe5
0028ba   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0028bc   ffe5
0028be   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0028c0   ffe5
0028c2   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0028c4   ffe5
0028c6   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0028c8   ffe5
0028ca   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0028cc   ffe5
0028ce   0e02     movlw   0x2              	MOVLW	0x02
0028d0   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0028d2   f000
0028d4   0e03     movlw   0x3              	MOVLW	0x03
0028d6   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0028d8   f001
0028da   0e04     movlw   0x4              	MOVLW	0x04
0028dc   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0028de   f002
0028e0   0e05     movlw   0x5              	MOVLW	0x05
0028e2   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
0028e4   f003
                                           ;	.line	71; /home/valentin/.icaro/firmware/tmp/digitalw.c	switch (port[input])
0028e6   0eb4     movlw   0xb4             	MOVLW	LOW(_port)
0028e8   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0028ea   6e04     movwf   0x4, 0           	MOVWF	r0x04
0028ec   0e23     movlw   0x23             	MOVLW	HIGH(_port)
0028ee   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0028f0   6e05     movwf   0x5, 0           	MOVWF	r0x05
0028f2   6a06     clrf    0x6, 0           	CLRF	r0x06
0028f4   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0028f6   6806     setf    0x6, 0           	SETF	r0x06
0028f8   0e00     movlw   0                	MOVLW	UPPER(_port)
0028fa   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0028fc   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0028fe   fff6
002900   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002902   fff7
002904   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002906   fff8
002908   0009     tblrd   *+               	TBLRD*+	
00290a   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
00290c   f004
00290e   0e05     movlw   0x5              	MOVLW	0x05
002910   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
002912   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002914   d110     bra     0x2b36           	BRA	_00220_DS_
002916   6afa     clrf    0xfa, 0          	CLRF	PCLATH
002918   6afb     clrf    0xfb, 0          	CLRF	PCLATU
00291a   3404     rlcf    0x4, 0, 0        	RLCF	r0x04, W
00291c   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00291e   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
002920   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
002922   0bfc     andlw   0xfc             	ANDLW	0xfc
002924   0f34     addlw   0x34             	ADDLW	LOW(_00241_DS_)
002926   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002928   0e29     movlw   0x29             	MOVLW	HIGH(_00241_DS_)
00292a   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
00292c   0e00     movlw   0                	MOVLW	UPPER(_00241_DS_)
00292e   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
002930   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002932   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00241_DS_:
002934   efa4     goto    0x2948           	GOTO	_00199_DS_
002936   f014
002938   efd6     goto    0x29ac           	GOTO	_00203_DS_
00293a   f014
00293c   ef08     goto    0x2a10           	GOTO	_00207_DS_
00293e   f015
002940   ef3a     goto    0x2a74           	GOTO	_00211_DS_
002942   f015
002944   ef6c     goto    0x2ad8           	GOTO	_00215_DS_
002946   f015
                                           _00199_DS_:
                                           ;	.line	73; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 0: if (state) TRISB=TRISB | mask[input];
002948   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00294a   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
00294c   e017     bz      0x297c           	BZ	_00201_DS_
00294e   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002950   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002952   6e04     movwf   0x4, 0           	MOVWF	r0x04
002954   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002956   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002958   6e05     movwf   0x5, 0           	MOVWF	r0x05
00295a   6a06     clrf    0x6, 0           	CLRF	r0x06
00295c   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
00295e   6806     setf    0x6, 0           	SETF	r0x06
002960   0e00     movlw   0                	MOVLW	UPPER(_mask)
002962   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002964   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002966   fff6
002968   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
00296a   fff7
00296c   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00296e   fff8
002970   0009     tblrd   *+               	TBLRD*+	
002972   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002974   f004
002976   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002978   1293     iorwf   0x93, 0x1, 0     	IORWF	_TRISB, F
00297a   d0dd     bra     0x2b36           	BRA	_00220_DS_
                                           _00201_DS_:
                                           ;	.line	74; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISB=TRISB & (255-mask[input]);
00297c   0e96     movlw   0x96             	MOVLW	LOW(_mask)
00297e   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002980   6e04     movwf   0x4, 0           	MOVWF	r0x04
002982   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002984   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002986   6e05     movwf   0x5, 0           	MOVWF	r0x05
002988   6a06     clrf    0x6, 0           	CLRF	r0x06
00298a   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
00298c   6806     setf    0x6, 0           	SETF	r0x06
00298e   0e00     movlw   0                	MOVLW	UPPER(_mask)
002990   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002992   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002994   fff6
002996   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002998   fff7
00299a   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00299c   fff8
00299e   0009     tblrd   *+               	TBLRD*+	
0029a0   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0029a2   f004
0029a4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0029a6   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0029a8   1693     andwf   0x93, 0x1, 0     	ANDWF	_TRISB, F
                                           ;	.line	75; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
0029aa   d0c5     bra     0x2b36           	BRA	_00220_DS_
                                           _00203_DS_:
                                           ;	.line	76; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 1: if (state) TRISC=TRISC | mask[input];
0029ac   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0029ae   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
0029b0   e017     bz      0x29e0           	BZ	_00205_DS_
0029b2   0e96     movlw   0x96             	MOVLW	LOW(_mask)
0029b4   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0029b6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0029b8   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
0029ba   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0029bc   6e05     movwf   0x5, 0           	MOVWF	r0x05
0029be   6a06     clrf    0x6, 0           	CLRF	r0x06
0029c0   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0029c2   6806     setf    0x6, 0           	SETF	r0x06
0029c4   0e00     movlw   0                	MOVLW	UPPER(_mask)
0029c6   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0029c8   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0029ca   fff6
0029cc   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0029ce   fff7
0029d0   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0029d2   fff8
0029d4   0009     tblrd   *+               	TBLRD*+	
0029d6   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0029d8   f004
0029da   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0029dc   1294     iorwf   0x94, 0x1, 0     	IORWF	_TRISC, F
0029de   d0ab     bra     0x2b36           	BRA	_00220_DS_
                                           _00205_DS_:
                                           ;	.line	77; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISC=TRISC & (255-mask[input]);
0029e0   0e96     movlw   0x96             	MOVLW	LOW(_mask)
0029e2   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0029e4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0029e6   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
0029e8   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0029ea   6e05     movwf   0x5, 0           	MOVWF	r0x05
0029ec   6a06     clrf    0x6, 0           	CLRF	r0x06
0029ee   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0029f0   6806     setf    0x6, 0           	SETF	r0x06
0029f2   0e00     movlw   0                	MOVLW	UPPER(_mask)
0029f4   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0029f6   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0029f8   fff6
0029fa   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0029fc   fff7
0029fe   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002a00   fff8
002a02   0009     tblrd   *+               	TBLRD*+	
002a04   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002a06   f004
002a08   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002a0a   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002a0c   1694     andwf   0x94, 0x1, 0     	ANDWF	_TRISC, F
                                           ;	.line	78; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
002a0e   d093     bra     0x2b36           	BRA	_00220_DS_
                                           _00207_DS_:
                                           ;	.line	79; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 2: if (state) TRISA=TRISA | mask[input];
002a10   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002a12   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002a14   e017     bz      0x2a44           	BZ	_00209_DS_
002a16   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002a18   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002a1a   6e04     movwf   0x4, 0           	MOVWF	r0x04
002a1c   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002a1e   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002a20   6e05     movwf   0x5, 0           	MOVWF	r0x05
002a22   6a06     clrf    0x6, 0           	CLRF	r0x06
002a24   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002a26   6806     setf    0x6, 0           	SETF	r0x06
002a28   0e00     movlw   0                	MOVLW	UPPER(_mask)
002a2a   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002a2c   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002a2e   fff6
002a30   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002a32   fff7
002a34   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002a36   fff8
002a38   0009     tblrd   *+               	TBLRD*+	
002a3a   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002a3c   f004
002a3e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002a40   1292     iorwf   0x92, 0x1, 0     	IORWF	_TRISA, F
002a42   d079     bra     0x2b36           	BRA	_00220_DS_
                                           _00209_DS_:
                                           ;	.line	80; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISA=TRISA & (255-mask[input]);
002a44   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002a46   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002a48   6e04     movwf   0x4, 0           	MOVWF	r0x04
002a4a   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002a4c   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002a4e   6e05     movwf   0x5, 0           	MOVWF	r0x05
002a50   6a06     clrf    0x6, 0           	CLRF	r0x06
002a52   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002a54   6806     setf    0x6, 0           	SETF	r0x06
002a56   0e00     movlw   0                	MOVLW	UPPER(_mask)
002a58   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002a5a   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002a5c   fff6
002a5e   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002a60   fff7
002a62   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002a64   fff8
002a66   0009     tblrd   *+               	TBLRD*+	
002a68   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002a6a   f004
002a6c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002a6e   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002a70   1692     andwf   0x92, 0x1, 0     	ANDWF	_TRISA, F
                                           ;	.line	81; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
002a72   d061     bra     0x2b36           	BRA	_00220_DS_
                                           _00211_DS_:
                                           ;	.line	83; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 3: if (state) TRISD=TRISD | mask[input];
002a74   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002a76   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002a78   e017     bz      0x2aa8           	BZ	_00213_DS_
002a7a   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002a7c   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002a7e   6e04     movwf   0x4, 0           	MOVWF	r0x04
002a80   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002a82   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002a84   6e05     movwf   0x5, 0           	MOVWF	r0x05
002a86   6a06     clrf    0x6, 0           	CLRF	r0x06
002a88   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002a8a   6806     setf    0x6, 0           	SETF	r0x06
002a8c   0e00     movlw   0                	MOVLW	UPPER(_mask)
002a8e   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002a90   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002a92   fff6
002a94   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002a96   fff7
002a98   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002a9a   fff8
002a9c   0009     tblrd   *+               	TBLRD*+	
002a9e   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002aa0   f004
002aa2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002aa4   1295     iorwf   0x95, 0x1, 0     	IORWF	_TRISD, F
002aa6   d047     bra     0x2b36           	BRA	_00220_DS_
                                           _00213_DS_:
                                           ;	.line	84; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISD=TRISD & (255-mask[input]);
002aa8   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002aaa   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002aac   6e04     movwf   0x4, 0           	MOVWF	r0x04
002aae   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002ab0   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002ab2   6e05     movwf   0x5, 0           	MOVWF	r0x05
002ab4   6a06     clrf    0x6, 0           	CLRF	r0x06
002ab6   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002ab8   6806     setf    0x6, 0           	SETF	r0x06
002aba   0e00     movlw   0                	MOVLW	UPPER(_mask)
002abc   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002abe   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002ac0   fff6
002ac2   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002ac4   fff7
002ac6   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002ac8   fff8
002aca   0009     tblrd   *+               	TBLRD*+	
002acc   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002ace   f004
002ad0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002ad2   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002ad4   1695     andwf   0x95, 0x1, 0     	ANDWF	_TRISD, F
                                           ;	.line	85; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
002ad6   d02f     bra     0x2b36           	BRA	_00220_DS_
                                           _00215_DS_:
                                           ;	.line	86; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 4: if (state) TRISE=TRISE | mask[input];
002ad8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002ada   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002adc   e017     bz      0x2b0c           	BZ	_00217_DS_
002ade   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002ae0   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002ae2   6e02     movwf   0x2, 0           	MOVWF	r0x02
002ae4   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002ae6   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002ae8   6e03     movwf   0x3, 0           	MOVWF	r0x03
002aea   6a04     clrf    0x4, 0           	CLRF	r0x04
002aec   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002aee   6804     setf    0x4, 0           	SETF	r0x04
002af0   0e00     movlw   0                	MOVLW	UPPER(_mask)
002af2   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002af4   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002af6   fff6
002af8   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002afa   fff7
002afc   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002afe   fff8
002b00   0009     tblrd   *+               	TBLRD*+	
002b02   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002b04   f002
002b06   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002b08   1296     iorwf   0x96, 0x1, 0     	IORWF	_TRISE, F
002b0a   d015     bra     0x2b36           	BRA	_00220_DS_
                                           _00217_DS_:
                                           ;	.line	87; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISE=TRISE & (255-mask[input]);
002b0c   6a02     clrf    0x2, 0           	CLRF	r0x02
002b0e   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002b10   6802     setf    0x2, 0           	SETF	r0x02
002b12   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002b14   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
002b16   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002b18   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002b1a   0e00     movlw   0                	MOVLW	UPPER(_mask)
002b1c   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002b1e   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
002b20   fff6
002b22   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
002b24   fff7
002b26   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
002b28   fff8
002b2a   0009     tblrd   *+               	TBLRD*+	
002b2c   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
002b2e   f000
002b30   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b32   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002b34   1696     andwf   0x96, 0x1, 0     	ANDWF	_TRISE, F
                                           _00220_DS_:
                                           ;	.line	90; /home/valentin/.icaro/firmware/tmp/digitalw.c	}
002b36   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002b38   f006
002b3a   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002b3c   f005
002b3e   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002b40   f004
002b42   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002b44   f003
002b46   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002b48   f002
002b4a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002b4c   f001
002b4e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002b50   f000
002b52   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002b54   ffd9
002b56   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalread	code
                                           _digitalread:
                                           ;	.line	44; /home/valentin/.icaro/firmware/tmp/digitalw.c	int digitalread(int input)
002e06   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002e08   ffe5
002e0a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002e0c   ffd9
002e0e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002e10   ffe5
002e12   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002e14   ffe5
002e16   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002e18   ffe5
002e1a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002e1c   ffe5
002e1e   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002e20   ffe5
002e22   0e02     movlw   0x2              	MOVLW	0x02
002e24   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002e26   f000
002e28   0e03     movlw   0x3              	MOVLW	0x03
002e2a   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002e2c   f001
                                           ;	.line	46; /home/valentin/.icaro/firmware/tmp/digitalw.c	switch (port[input])
002e2e   0eb4     movlw   0xb4             	MOVLW	LOW(_port)
002e30   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002e32   6e02     movwf   0x2, 0           	MOVWF	r0x02
002e34   0e23     movlw   0x23             	MOVLW	HIGH(_port)
002e36   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002e38   6e03     movwf   0x3, 0           	MOVWF	r0x03
002e3a   6a04     clrf    0x4, 0           	CLRF	r0x04
002e3c   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002e3e   6804     setf    0x4, 0           	SETF	r0x04
002e40   0e00     movlw   0                	MOVLW	UPPER(_port)
002e42   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002e44   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002e46   fff6
002e48   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002e4a   fff7
002e4c   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002e4e   fff8
002e50   0009     tblrd   *+               	TBLRD*+	
002e52   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002e54   f002
002e56   0e05     movlw   0x5              	MOVLW	0x05
002e58   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
002e5a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002e5c   d0ad     bra     0x2fb8           	BRA	_00172_DS_
002e5e   6afa     clrf    0xfa, 0          	CLRF	PCLATH
002e60   6afb     clrf    0xfb, 0          	CLRF	PCLATU
002e62   3402     rlcf    0x2, 0, 0        	RLCF	r0x02, W
002e64   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
002e66   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
002e68   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
002e6a   0bfc     andlw   0xfc             	ANDLW	0xfc
002e6c   0f7c     addlw   0x7c             	ADDLW	LOW(_00194_DS_)
002e6e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002e70   0e2e     movlw   0x2e             	MOVLW	HIGH(_00194_DS_)
002e72   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
002e74   0e00     movlw   0                	MOVLW	UPPER(_00194_DS_)
002e76   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
002e78   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002e7a   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00194_DS_:
002e7c   ef48     goto    0x2e90           	GOTO	_00152_DS_
002e7e   f017
002e80   ef66     goto    0x2ecc           	GOTO	_00156_DS_
002e82   f017
002e84   ef84     goto    0x2f08           	GOTO	_00160_DS_
002e86   f017
002e88   efa2     goto    0x2f44           	GOTO	_00164_DS_
002e8a   f017
002e8c   efc0     goto    0x2f80           	GOTO	_00168_DS_
002e8e   f017
                                           _00152_DS_:
                                           ;	.line	48; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 0: if ((PORTB & mask[input])!=0) return (1);
002e90   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002e92   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002e94   6e02     movwf   0x2, 0           	MOVWF	r0x02
002e96   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002e98   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002e9a   6e03     movwf   0x3, 0           	MOVWF	r0x03
002e9c   6a04     clrf    0x4, 0           	CLRF	r0x04
002e9e   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002ea0   6804     setf    0x4, 0           	SETF	r0x04
002ea2   0e00     movlw   0                	MOVLW	UPPER(_mask)
002ea4   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002ea6   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002ea8   fff6
002eaa   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002eac   fff7
002eae   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002eb0   fff8
002eb2   0009     tblrd   *+               	TBLRD*+	
002eb4   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002eb6   f002
002eb8   5081     movf    0x81, 0, 0       	MOVF	_PORTB, W
002eba   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
002ebc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002ebe   e003     bz      0x2ec6           	BZ	_00154_DS_
002ec0   6af3     clrf    0xf3, 0          	CLRF	PRODL
002ec2   0e01     movlw   0x1              	MOVLW	0x01
002ec4   d07b     bra     0x2fbc           	BRA	_00173_DS_
                                           _00154_DS_:
                                           ;	.line	49; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
002ec6   6af3     clrf    0xf3, 0          	CLRF	PRODL
002ec8   6ae8     clrf    0xe8, 0          	CLRF	WREG
002eca   d078     bra     0x2fbc           	BRA	_00173_DS_
                                           _00156_DS_:
                                           ;	.line	51; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 1: if ((PORTC & mask[input])!=0) return (1);
002ecc   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002ece   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002ed0   6e02     movwf   0x2, 0           	MOVWF	r0x02
002ed2   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002ed4   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002ed6   6e03     movwf   0x3, 0           	MOVWF	r0x03
002ed8   6a04     clrf    0x4, 0           	CLRF	r0x04
002eda   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002edc   6804     setf    0x4, 0           	SETF	r0x04
002ede   0e00     movlw   0                	MOVLW	UPPER(_mask)
002ee0   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002ee2   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002ee4   fff6
002ee6   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002ee8   fff7
002eea   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002eec   fff8
002eee   0009     tblrd   *+               	TBLRD*+	
002ef0   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002ef2   f002
002ef4   5082     movf    0x82, 0, 0       	MOVF	_PORTC, W
002ef6   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
002ef8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002efa   e003     bz      0x2f02           	BZ	_00158_DS_
002efc   6af3     clrf    0xf3, 0          	CLRF	PRODL
002efe   0e01     movlw   0x1              	MOVLW	0x01
002f00   d05d     bra     0x2fbc           	BRA	_00173_DS_
                                           _00158_DS_:
                                           ;	.line	52; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
002f02   6af3     clrf    0xf3, 0          	CLRF	PRODL
002f04   6ae8     clrf    0xe8, 0          	CLRF	WREG
002f06   d05a     bra     0x2fbc           	BRA	_00173_DS_
                                           _00160_DS_:
                                           ;	.line	54; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 2: if ((PORTA & mask[input])!=0) return (1);
002f08   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002f0a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002f0c   6e02     movwf   0x2, 0           	MOVWF	r0x02
002f0e   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002f10   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002f12   6e03     movwf   0x3, 0           	MOVWF	r0x03
002f14   6a04     clrf    0x4, 0           	CLRF	r0x04
002f16   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002f18   6804     setf    0x4, 0           	SETF	r0x04
002f1a   0e00     movlw   0                	MOVLW	UPPER(_mask)
002f1c   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002f1e   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002f20   fff6
002f22   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002f24   fff7
002f26   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002f28   fff8
002f2a   0009     tblrd   *+               	TBLRD*+	
002f2c   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002f2e   f002
002f30   5080     movf    0x80, 0, 0       	MOVF	_PORTA, W
002f32   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
002f34   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002f36   e003     bz      0x2f3e           	BZ	_00162_DS_
002f38   6af3     clrf    0xf3, 0          	CLRF	PRODL
002f3a   0e01     movlw   0x1              	MOVLW	0x01
002f3c   d03f     bra     0x2fbc           	BRA	_00173_DS_
                                           _00162_DS_:
                                           ;	.line	55; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
002f3e   6af3     clrf    0xf3, 0          	CLRF	PRODL
002f40   6ae8     clrf    0xe8, 0          	CLRF	WREG
002f42   d03c     bra     0x2fbc           	BRA	_00173_DS_
                                           _00164_DS_:
                                           ;	.line	58; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 3: if ((PORTD & mask[input])!=0) return (1);
002f44   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002f46   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002f48   6e02     movwf   0x2, 0           	MOVWF	r0x02
002f4a   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002f4c   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002f4e   6e03     movwf   0x3, 0           	MOVWF	r0x03
002f50   6a04     clrf    0x4, 0           	CLRF	r0x04
002f52   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002f54   6804     setf    0x4, 0           	SETF	r0x04
002f56   0e00     movlw   0                	MOVLW	UPPER(_mask)
002f58   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002f5a   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002f5c   fff6
002f5e   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002f60   fff7
002f62   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002f64   fff8
002f66   0009     tblrd   *+               	TBLRD*+	
002f68   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002f6a   f002
002f6c   5083     movf    0x83, 0, 0       	MOVF	_PORTD, W
002f6e   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
002f70   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002f72   e003     bz      0x2f7a           	BZ	_00166_DS_
002f74   6af3     clrf    0xf3, 0          	CLRF	PRODL
002f76   0e01     movlw   0x1              	MOVLW	0x01
002f78   d021     bra     0x2fbc           	BRA	_00173_DS_
                                           _00166_DS_:
                                           ;	.line	59; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
002f7a   6af3     clrf    0xf3, 0          	CLRF	PRODL
002f7c   6ae8     clrf    0xe8, 0          	CLRF	WREG
002f7e   d01e     bra     0x2fbc           	BRA	_00173_DS_
                                           _00168_DS_:
                                           ;	.line	61; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 4: if ((PORTE & mask[input])!=0) return (1);
002f80   6a02     clrf    0x2, 0           	CLRF	r0x02
002f82   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002f84   6802     setf    0x2, 0           	SETF	r0x02
002f86   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002f88   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
002f8a   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002f8c   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002f8e   0e00     movlw   0                	MOVLW	UPPER(_mask)
002f90   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002f92   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
002f94   fff6
002f96   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
002f98   fff7
002f9a   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
002f9c   fff8
002f9e   0009     tblrd   *+               	TBLRD*+	
002fa0   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
002fa2   f000
002fa4   5084     movf    0x84, 0, 0       	MOVF	_PORTE, W
002fa6   1600     andwf   0, 0x1, 0        	ANDWF	r0x00, F
002fa8   5000     movf    0, 0, 0          	MOVF	r0x00, W
002faa   e003     bz      0x2fb2           	BZ	_00170_DS_
002fac   6af3     clrf    0xf3, 0          	CLRF	PRODL
002fae   0e01     movlw   0x1              	MOVLW	0x01
002fb0   d005     bra     0x2fbc           	BRA	_00173_DS_
                                           _00170_DS_:
                                           ;	.line	62; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
002fb2   6af3     clrf    0xf3, 0          	CLRF	PRODL
002fb4   6ae8     clrf    0xe8, 0          	CLRF	WREG
002fb6   d002     bra     0x2fbc           	BRA	_00173_DS_
                                           _00172_DS_:
                                           ;	.line	66; /home/valentin/.icaro/firmware/tmp/digitalw.c	return (0);
002fb8   6af3     clrf    0xf3, 0          	CLRF	PRODL
002fba   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00173_DS_:
002fbc   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002fbe   f004
002fc0   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002fc2   f003
002fc4   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002fc6   f002
002fc8   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002fca   f001
002fcc   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002fce   f000
002fd0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002fd2   ffd9
002fd4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	20; /home/valentin/.icaro/firmware/tmp/digitalw.c	void digitalwrite(int output,int state)
002b58   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002b5a   ffe5
002b5c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002b5e   ffd9
002b60   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002b62   ffe5
002b64   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002b66   ffe5
002b68   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002b6a   ffe5
002b6c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002b6e   ffe5
002b70   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002b72   ffe5
002b74   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002b76   ffe5
002b78   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
002b7a   ffe5
002b7c   0e02     movlw   0x2              	MOVLW	0x02
002b7e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002b80   f000
002b82   0e03     movlw   0x3              	MOVLW	0x03
002b84   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002b86   f001
002b88   0e04     movlw   0x4              	MOVLW	0x04
002b8a   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
002b8c   f002
002b8e   0e05     movlw   0x5              	MOVLW	0x05
002b90   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
002b92   f003
                                           ;	.line	22; /home/valentin/.icaro/firmware/tmp/digitalw.c	switch (port[output])
002b94   0eb4     movlw   0xb4             	MOVLW	LOW(_port)
002b96   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002b98   6e04     movwf   0x4, 0           	MOVWF	r0x04
002b9a   0e23     movlw   0x23             	MOVLW	HIGH(_port)
002b9c   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002b9e   6e05     movwf   0x5, 0           	MOVWF	r0x05
002ba0   6a06     clrf    0x6, 0           	CLRF	r0x06
002ba2   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002ba4   6806     setf    0x6, 0           	SETF	r0x06
002ba6   0e00     movlw   0                	MOVLW	UPPER(_port)
002ba8   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002baa   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002bac   fff6
002bae   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002bb0   fff7
002bb2   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002bb4   fff8
002bb6   0009     tblrd   *+               	TBLRD*+	
002bb8   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002bba   f004
002bbc   0e05     movlw   0x5              	MOVLW	0x05
002bbe   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
002bc0   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002bc2   d110     bra     0x2de4           	BRA	_00126_DS_
002bc4   6afa     clrf    0xfa, 0          	CLRF	PCLATH
002bc6   6afb     clrf    0xfb, 0          	CLRF	PCLATU
002bc8   3404     rlcf    0x4, 0, 0        	RLCF	r0x04, W
002bca   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
002bcc   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
002bce   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
002bd0   0bfc     andlw   0xfc             	ANDLW	0xfc
002bd2   0fe2     addlw   0xe2             	ADDLW	LOW(_00147_DS_)
002bd4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002bd6   0e2b     movlw   0x2b             	MOVLW	HIGH(_00147_DS_)
002bd8   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
002bda   0e00     movlw   0                	MOVLW	UPPER(_00147_DS_)
002bdc   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
002bde   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002be0   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00147_DS_:
002be2   effb     goto    0x2bf6           	GOTO	_00105_DS_
002be4   f015
002be6   ef2d     goto    0x2c5a           	GOTO	_00109_DS_
002be8   f016
002bea   ef5f     goto    0x2cbe           	GOTO	_00113_DS_
002bec   f016
002bee   ef91     goto    0x2d22           	GOTO	_00117_DS_
002bf0   f016
002bf2   efc3     goto    0x2d86           	GOTO	_00121_DS_
002bf4   f016
                                           _00105_DS_:
                                           ;	.line	24; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 0: if (state) PORTB=PORTB | mask[output]; 
002bf6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002bf8   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002bfa   e017     bz      0x2c2a           	BZ	_00107_DS_
002bfc   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002bfe   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002c00   6e04     movwf   0x4, 0           	MOVWF	r0x04
002c02   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002c04   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002c06   6e05     movwf   0x5, 0           	MOVWF	r0x05
002c08   6a06     clrf    0x6, 0           	CLRF	r0x06
002c0a   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002c0c   6806     setf    0x6, 0           	SETF	r0x06
002c0e   0e00     movlw   0                	MOVLW	UPPER(_mask)
002c10   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002c12   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002c14   fff6
002c16   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002c18   fff7
002c1a   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002c1c   fff8
002c1e   0009     tblrd   *+               	TBLRD*+	
002c20   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002c22   f004
002c24   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002c26   1281     iorwf   0x81, 0x1, 0     	IORWF	_PORTB, F
002c28   d0dd     bra     0x2de4           	BRA	_00126_DS_
                                           _00107_DS_:
                                           ;	.line	25; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTB=PORTB & (255-mask[output]);
002c2a   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002c2c   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002c2e   6e04     movwf   0x4, 0           	MOVWF	r0x04
002c30   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002c32   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002c34   6e05     movwf   0x5, 0           	MOVWF	r0x05
002c36   6a06     clrf    0x6, 0           	CLRF	r0x06
002c38   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002c3a   6806     setf    0x6, 0           	SETF	r0x06
002c3c   0e00     movlw   0                	MOVLW	UPPER(_mask)
002c3e   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002c40   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002c42   fff6
002c44   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002c46   fff7
002c48   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002c4a   fff8
002c4c   0009     tblrd   *+               	TBLRD*+	
002c4e   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002c50   f004
002c52   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002c54   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002c56   1681     andwf   0x81, 0x1, 0     	ANDWF	_PORTB, F
                                           ;	.line	26; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
002c58   d0c5     bra     0x2de4           	BRA	_00126_DS_
                                           _00109_DS_:
                                           ;	.line	27; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 1: if (state) PORTC=PORTC | mask[output];
002c5a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002c5c   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002c5e   e017     bz      0x2c8e           	BZ	_00111_DS_
002c60   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002c62   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002c64   6e04     movwf   0x4, 0           	MOVWF	r0x04
002c66   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002c68   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002c6a   6e05     movwf   0x5, 0           	MOVWF	r0x05
002c6c   6a06     clrf    0x6, 0           	CLRF	r0x06
002c6e   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002c70   6806     setf    0x6, 0           	SETF	r0x06
002c72   0e00     movlw   0                	MOVLW	UPPER(_mask)
002c74   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002c76   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002c78   fff6
002c7a   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002c7c   fff7
002c7e   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002c80   fff8
002c82   0009     tblrd   *+               	TBLRD*+	
002c84   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002c86   f004
002c88   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002c8a   1282     iorwf   0x82, 0x1, 0     	IORWF	_PORTC, F
002c8c   d0ab     bra     0x2de4           	BRA	_00126_DS_
                                           _00111_DS_:
                                           ;	.line	28; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTC=PORTC & (255-mask[output]);
002c8e   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002c90   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002c92   6e04     movwf   0x4, 0           	MOVWF	r0x04
002c94   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002c96   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002c98   6e05     movwf   0x5, 0           	MOVWF	r0x05
002c9a   6a06     clrf    0x6, 0           	CLRF	r0x06
002c9c   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002c9e   6806     setf    0x6, 0           	SETF	r0x06
002ca0   0e00     movlw   0                	MOVLW	UPPER(_mask)
002ca2   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002ca4   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002ca6   fff6
002ca8   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002caa   fff7
002cac   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002cae   fff8
002cb0   0009     tblrd   *+               	TBLRD*+	
002cb2   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002cb4   f004
002cb6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002cb8   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002cba   1682     andwf   0x82, 0x1, 0     	ANDWF	_PORTC, F
                                           ;	.line	29; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
002cbc   d093     bra     0x2de4           	BRA	_00126_DS_
                                           _00113_DS_:
                                           ;	.line	30; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 2: if (state) PORTA=PORTA | mask[output];
002cbe   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002cc0   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002cc2   e017     bz      0x2cf2           	BZ	_00115_DS_
002cc4   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002cc6   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002cc8   6e04     movwf   0x4, 0           	MOVWF	r0x04
002cca   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002ccc   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002cce   6e05     movwf   0x5, 0           	MOVWF	r0x05
002cd0   6a06     clrf    0x6, 0           	CLRF	r0x06
002cd2   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002cd4   6806     setf    0x6, 0           	SETF	r0x06
002cd6   0e00     movlw   0                	MOVLW	UPPER(_mask)
002cd8   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002cda   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002cdc   fff6
002cde   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002ce0   fff7
002ce2   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002ce4   fff8
002ce6   0009     tblrd   *+               	TBLRD*+	
002ce8   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002cea   f004
002cec   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002cee   1280     iorwf   0x80, 0x1, 0     	IORWF	_PORTA, F
002cf0   d079     bra     0x2de4           	BRA	_00126_DS_
                                           _00115_DS_:
                                           ;	.line	31; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTA=PORTA & (255-mask[output]);
002cf2   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002cf4   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002cf6   6e04     movwf   0x4, 0           	MOVWF	r0x04
002cf8   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002cfa   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002cfc   6e05     movwf   0x5, 0           	MOVWF	r0x05
002cfe   6a06     clrf    0x6, 0           	CLRF	r0x06
002d00   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002d02   6806     setf    0x6, 0           	SETF	r0x06
002d04   0e00     movlw   0                	MOVLW	UPPER(_mask)
002d06   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002d08   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002d0a   fff6
002d0c   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002d0e   fff7
002d10   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002d12   fff8
002d14   0009     tblrd   *+               	TBLRD*+	
002d16   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002d18   f004
002d1a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002d1c   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002d1e   1680     andwf   0x80, 0x1, 0     	ANDWF	_PORTA, F
                                           ;	.line	32; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
002d20   d061     bra     0x2de4           	BRA	_00126_DS_
                                           _00117_DS_:
                                           ;	.line	34; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 3: if (state) PORTD=PORTD | mask[output]; 
002d22   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002d24   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002d26   e017     bz      0x2d56           	BZ	_00119_DS_
002d28   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002d2a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002d2c   6e04     movwf   0x4, 0           	MOVWF	r0x04
002d2e   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002d30   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002d32   6e05     movwf   0x5, 0           	MOVWF	r0x05
002d34   6a06     clrf    0x6, 0           	CLRF	r0x06
002d36   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002d38   6806     setf    0x6, 0           	SETF	r0x06
002d3a   0e00     movlw   0                	MOVLW	UPPER(_mask)
002d3c   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002d3e   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002d40   fff6
002d42   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002d44   fff7
002d46   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002d48   fff8
002d4a   0009     tblrd   *+               	TBLRD*+	
002d4c   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002d4e   f004
002d50   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002d52   1283     iorwf   0x83, 0x1, 0     	IORWF	_PORTD, F
002d54   d047     bra     0x2de4           	BRA	_00126_DS_
                                           _00119_DS_:
                                           ;	.line	35; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTD=PORTD & (255-mask[output]);
002d56   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002d58   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002d5a   6e04     movwf   0x4, 0           	MOVWF	r0x04
002d5c   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002d5e   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002d60   6e05     movwf   0x5, 0           	MOVWF	r0x05
002d62   6a06     clrf    0x6, 0           	CLRF	r0x06
002d64   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002d66   6806     setf    0x6, 0           	SETF	r0x06
002d68   0e00     movlw   0                	MOVLW	UPPER(_mask)
002d6a   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002d6c   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002d6e   fff6
002d70   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002d72   fff7
002d74   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002d76   fff8
002d78   0009     tblrd   *+               	TBLRD*+	
002d7a   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002d7c   f004
002d7e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002d80   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002d82   1683     andwf   0x83, 0x1, 0     	ANDWF	_PORTD, F
                                           ;	.line	36; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
002d84   d02f     bra     0x2de4           	BRA	_00126_DS_
                                           _00121_DS_:
                                           ;	.line	37; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 4: if (state) PORTE=PORTE | mask[output]; 
002d86   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002d88   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002d8a   e017     bz      0x2dba           	BZ	_00123_DS_
002d8c   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002d8e   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002d90   6e02     movwf   0x2, 0           	MOVWF	r0x02
002d92   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002d94   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002d96   6e03     movwf   0x3, 0           	MOVWF	r0x03
002d98   6a04     clrf    0x4, 0           	CLRF	r0x04
002d9a   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002d9c   6804     setf    0x4, 0           	SETF	r0x04
002d9e   0e00     movlw   0                	MOVLW	UPPER(_mask)
002da0   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002da2   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002da4   fff6
002da6   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002da8   fff7
002daa   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002dac   fff8
002dae   0009     tblrd   *+               	TBLRD*+	
002db0   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002db2   f002
002db4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002db6   1284     iorwf   0x84, 0x1, 0     	IORWF	_PORTE, F
002db8   d015     bra     0x2de4           	BRA	_00126_DS_
                                           _00123_DS_:
                                           ;	.line	38; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTE=PORTE & (255-mask[output]);
002dba   6a02     clrf    0x2, 0           	CLRF	r0x02
002dbc   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002dbe   6802     setf    0x2, 0           	SETF	r0x02
002dc0   0e96     movlw   0x96             	MOVLW	LOW(_mask)
002dc2   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
002dc4   0e23     movlw   0x23             	MOVLW	HIGH(_mask)
002dc6   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002dc8   0e00     movlw   0                	MOVLW	UPPER(_mask)
002dca   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002dcc   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
002dce   fff6
002dd0   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
002dd2   fff7
002dd4   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
002dd6   fff8
002dd8   0009     tblrd   *+               	TBLRD*+	
002dda   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
002ddc   f000
002dde   5000     movf    0, 0, 0          	MOVF	r0x00, W
002de0   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002de2   1684     andwf   0x84, 0x1, 0     	ANDWF	_PORTE, F
                                           _00126_DS_:
                                           ;	.line	41; /home/valentin/.icaro/firmware/tmp/digitalw.c	}
002de4   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002de6   f006
002de8   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002dea   f005
002dec   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002dee   f004
002df0   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002df2   f003
002df4   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002df6   f002
002df8   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002dfa   f001
002dfc   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002dfe   f000
002e00   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002e02   ffd9
002e04   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _mask:
002396   0201     mulwf   0x1, 0           	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
002398   0804     sublw   0x4              
00239a   2010     addwfc  0x10, 0, 0       
00239c   8040     bsf     0x40, 0, 0       
00239e   8040     bsf     0x40, 0, 0       
0023a0   0201     mulwf   0x1, 0           
0023a2   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
0023a4   0402     decf    0x2, 0, 0        
0023a6   2008     addwfc  0x8, 0, 0        
0023a8   0201     mulwf   0x1, 0           
0023aa   0104     movlb   0x4              
0023ac   0402     decf    0x2, 0, 0        
0023ae   1008     iorwf   0x8, 0, 0        	DB	0x08, 0x10, 0x20, 0x40, 0x80
0023b0   4020     rrncf   0x20, 0, 0       
0023b2   0080     dw      0x80             
                                           ; ; Starting pCode block for Ival
                                           _port:
0023b4   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01
0023b6   0000     nop                      
0023b8   0000     nop                      
0023ba   0000     nop                      
0023bc   0101     movlb   0x1              
0023be   0101     movlb   0x1              
0023c0   0201     mulwf   0x1, 0           	DB	0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
0023c2   0202     mulwf   0x2, 0           
0023c4   0202     mulwf   0x2, 0           
0023c6   0404     decf    0x4, 0, 0        
0023c8   0304     mulwf   0x4, 0x1         
0023ca   0303     mulwf   0x3, 0x1         
0023cc   0303     mulwf   0x3, 0x1         	DB	0x03, 0x03, 0x03, 0x03, 0x03
0023ce   0303     mulwf   0x3, 0x1         
0023d0   0003     sleep                    
                                           ; ; Starting pCode block for Ival
                                           _servomasks:
0023d2   0201     mulwf   0x1, 0           	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
0023d4   0804     sublw   0x4              
0023d6   2010     addwfc  0x10, 0, 0       
0023d8   8040     bsf     0x40, 0, 0       
0023da   8040     bsf     0x40, 0, 0       
0023dc   0201     mulwf   0x1, 0           
0023de   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20
0023e0   0402     decf    0x2, 0, 0        
0023e2   2008     addwfc  0x8, 0, 0        
                                           ; ; Starting pCode block for Ival
                                           _libdevice_descriptor:
0023e4   0112     movlb   0x12             	DB	0x12, 0x01, 0x00, 0x02, 0x02, 0x00, 0x00, 0x40, 0xd8, 0x04, 0xab, 0xfe
0023e6   0200     mulwf   0, 0             
0023e8   0002     dw      0x2              
0023ea   4000     rrncf   0, 0, 0          
0023ec   04d8     decf    0xd8, 0, 0       
0023ee   feab     dw      0xfeab           
0023f0   0000     nop                      	DB	0x00, 0x00, 0x00, 0x01, 0x00, 0x01
0023f2   0100     movlb   0                
0023f4   0100     movlb   0                
                                           ; ; Starting pCode block for Ival
                                           _libconfiguration_descriptor:
0023f6   0209     mulwf   0x9, 0           	DB	0x09, 0x02, 0x43, 0x00, 0x02, 0x01, 0x00, 0x03, 0x14, 0x09, 0x04, 0x00
0023f8   0043     dw      0x43             
0023fa   0102     movlb   0x2              
0023fc   0300     mulwf   0, 0x1           
0023fe   0914     iorlw   0x14             
002400   0004     clrwdt                   
002402   0100     movlb   0                	DB	0x00, 0x01, 0x02, 0x02, 0x01, 0x00, 0x05, 0x24, 0x00, 0x10, 0x01, 0x04
002404   0202     mulwf   0x2, 0           
002406   0001     halt                     
002408   2405     addwf   0x5, 0, 0        
00240a   1000     iorwf   0, 0, 0          
00240c   0401     decf    0x1, 0, 0        
00240e   0224     mulwf   0x24, 0          	DB	0x24, 0x02, 0x00, 0x05, 0x24, 0x06, 0x00, 0x01, 0x05, 0x24, 0x01, 0x00
002410   0500     decf    0, 0, 0x1        
002412   0624     decf    0x24, 0x1, 0     
002414   0100     movlb   0                
002416   2405     addwf   0x5, 0, 0        
002418   0001     halt                     
00241a   0701     decf    0x1, 0x1, 0x1    	DB	0x01, 0x07, 0x05, 0x82, 0x03, 0x10, 0x00, 0x02, 0x09, 0x04, 0x01, 0x00
00241c   8205     bsf     0x5, 0x1, 0      
00241e   1003     iorwf   0x3, 0, 0        
002420   0200     mulwf   0, 0             
002422   0409     decf    0x9, 0, 0        
002424   0001     halt                     
002426   0a02     xorlw   0x2              	DB	0x02, 0x0a, 0x00, 0x00, 0x00, 0x07, 0x05, 0x03, 0x02, 0x40, 0x00, 0x00
002428   0000     nop                      
00242a   0700     decf    0, 0x1, 0x1      
00242c   0305     mulwf   0x5, 0x1         
00242e   4002     rrncf   0x2, 0, 0        
002430   0000     nop                      
002432   0507     decf    0x7, 0, 0x1      	DB	0x07, 0x05, 0x83, 0x02, 0x40, 0x00, 0x00
002434   0283     mulwf   0x83, 0          
002436   0040     dw      0x40             
002438   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _libstring_descriptor:
00243a   0328     mulwf   0x28, 0x1        	DB	0x28, 0x03, 0x50, 0x0c, 0x03, 0x50, 0x0c, 0x03, 0x50, 0x00, 0x00, 0x00
00243c   0c50     retlw   0x50             
00243e   5003     movf    0x3, 0, 0        
002440   030c     mulwf   0xc, 0x1         
002442   0050     dw      0x50             
002444   0000     nop                      
002446   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002448   0000     nop                      
00244a   0000     nop                      
00244c   0000     nop                      
00244e   0000     nop                      
002450   0000     nop                      
002452   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002454   0000     nop                      
002456   0000     nop                      
002458   0000     nop                      
00245a   0000     nop                      
00245c   0000     nop                      
00245e   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002460   0000     nop                      
002462   0000     nop                      
002464   0000     nop                      
002466   0000     nop                      
002468   0000     nop                      
00246a   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00246c   0000     nop                      
00246e   0000     nop                      
002470   0000     nop                      
002472   0000     nop                      
002474   0000     nop                      
002476   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002478   0000     nop                      
00247a   0000     nop                      
00247c   0000     nop                      
00247e   0000     nop                      
002480   0000     nop                      
002482   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002484   0000     nop                      
002486   0000     nop                      
002488   0000     nop                      
00248a   0000     nop                      
00248c   0000     nop                      
00248e   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002490   0000     nop                      
002492   0000     nop                      
002494   0000     nop                      
002496   0000     nop                      
002498   0000     nop                      
00249a   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00249c   0000     nop                      
00249e   0000     nop                      
0024a0   0000     nop                      
0024a2   0000     nop                      
0024a4   0000     nop                      
0024a6   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
0024a8   0000     nop                      
0024aa   0000     nop                      
0024ac   0000     nop                      
0024ae   0000     nop                      
0024b0   0000     nop                      
                                           ; ; Starting pCode block
                                           __str_0:
0024b2   000a     tblrd   *-               	DB	0x0a, 0x00
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 9774 (0x262e) bytes ( 7.46%)
                                           ;           	 4887 (0x1317) words
                                           ; udata size:	  528 (0x0210) bytes (29.46%)
                                           ; access size:	   13 (0x000d) bytes
                                           
                                           
                                           	end
